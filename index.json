{
  "api/AlphaFramework.Editor.AboutBox.html": {
    "href": "api/AlphaFramework.Editor.AboutBox.html",
    "title": "Class AboutBox | OmegaEngine",
    "summary": "Class AboutBox Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll A standard about box with application version information. public sealed class AboutBox : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form AboutBox Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors AboutBox() Initializes a new instance of the Form class. public AboutBox() Properties AssemblyTitle public static string AssemblyTitle { get; } Property Value string Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/AlphaFramework.Editor.AsyncWaitDialog.html": {
    "href": "api/AlphaFramework.Editor.AsyncWaitDialog.html",
    "title": "Class AsyncWaitDialog | OmegaEngine",
    "summary": "Class AsyncWaitDialog Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll Displays a \"Loading...\" dialog box in a separate GUI thread for cases where the main message pump is blocked. public sealed class AsyncWaitDialog : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form AsyncWaitDialog Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors AsyncWaitDialog(string, Icon?) Creates a new asynchrnous waiting dialog. public AsyncWaitDialog(string title, Icon? icon = null) Parameters title string The title of th dialog to display. icon Icon The icon for the dialog to display in the task bar; can be null. Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. Start() Starts a new message pump with this dialog in a new thread. public void Start() Stop() Closes the dialog and stops the separate message pump. public void Stop()"
  },
  "api/AlphaFramework.Editor.FileSelectorDialog.html": {
    "href": "api/AlphaFramework.Editor.FileSelectorDialog.html",
    "title": "Class FileSelectorDialog | OmegaEngine",
    "summary": "Class FileSelectorDialog Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll Allows the user to select a file for the Mod (stored in an Archive or a real file) public class FileSelectorDialog : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form FileSelectorDialog Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors FileSelectorDialog() Initializes a new instance of the Form class. public FileSelectorDialog() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. TryGetPath(string, string, out string) Gets the file path for a game-content file (not allowing the user to create a new file) public static bool TryGetPath(string type, string extension, out string path) Parameters type string The type of file you want (e.g. Textures, Sounds, ...) extension string The file extension of the file type with a dot, but without an asterisk (e.g. .xml, .png, ...) path string The absolute path to the requested content file Returns bool true if a file was selected, false if none was selected Exceptions InvalidOperationException The user didn't select a file. TryGetPath(string, string, out string, out bool) Gets the file path for a game-content file (allowing the user to create a new file) public static bool TryGetPath(string type, string extension, out string path, out bool overwrite) Parameters type string The type of file you want (e.g. Textures, Sounds, ...) extension string The file extension of the file type with a dot, but without an asterisk (e.g. .xml, .png, ...) path string The absolute path to the requested content file overwrite bool Returns whether the user wants an existing file to be overwritten Returns bool true if a file was selected, false if none was selected Exceptions InvalidOperationException The user didn't select a file."
  },
  "api/AlphaFramework.Editor.Graphics.CpuParticleSystemEditor.html": {
    "href": "api/AlphaFramework.Editor.Graphics.CpuParticleSystemEditor.html",
    "title": "Class CpuParticleSystemEditor | OmegaEngine",
    "summary": "Class CpuParticleSystemEditor Namespace AlphaFramework.Editor.Graphics Assembly AlphaFramework.Editor.dll Allows a user to tweak the parameters for a CpuParticleSystem public class CpuParticleSystemEditor : ParticleSystemEditor, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl, IInputReceiver Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<IUndoCommand> UndoCommandTab ParticleSystemEditor CpuParticleSystemEditor Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl IInputReceiver Inherited Members ParticleSystemEditor.Camera ParticleSystemEditor.renderPanel UndoCommandTab.ExecuteCommand(IUndoCommand) UndoCommandTab.ExecuteCommandSafe(IUndoCommand) UndoCommandTab.OnUndo() UndoCommandTab.OnRedo() UndoTab<IUndoCommand>.buttonUndo UndoTab<IUndoCommand>.buttonRedo UndoTab<IUndoCommand>.UndoBackups UndoTab<IUndoCommand>.RedoBackups UndoTab<IUndoCommand>.OnChange() UndoTab<IUndoCommand>.Undo() UndoTab<IUndoCommand>.Redo() Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnDelete() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors CpuParticleSystemEditor(string, bool) Creates a new CPU particle system editor. public CpuParticleSystemEditor(string filePath, bool overwrite) Parameters filePath string The path to the file to be edited. overwrite bool true if an existing file supposed to be overwritten when SaveFile() is called. Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. OnInitialize() Called on startup to load the content for this tab. protected override void OnInitialize() Exceptions NotSupportedException An unsupported graphics card feature is used. FileNotFoundException A file could not be located. IOException There was a problem reading a file. UnauthorizedAccessException Read access to a file was denied. InvalidOperationException There was a problem inside the engine. InvalidDataException A file contained invalid data. OnSaveFile() Called when the content of this tab is to be saved to a file. protected override void OnSaveFile() Exceptions ArgumentException The file path is invalid. NotSupportedException The file path is invalid. IOException There was a problem writing a file. UnauthorizedAccessException Write access to a file was denied. OnUpdate() Called on startup, content updates and tab switch to refresh any on-screen displays protected override void OnUpdate()"
  },
  "api/AlphaFramework.Editor.Graphics.ParticleSystemEditor.html": {
    "href": "api/AlphaFramework.Editor.Graphics.ParticleSystemEditor.html",
    "title": "Class ParticleSystemEditor | OmegaEngine",
    "summary": "Class ParticleSystemEditor Namespace AlphaFramework.Editor.Graphics Assembly AlphaFramework.Editor.dll Abstract base class for editing particle system presets public class ParticleSystemEditor : UndoCommandTab, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl, IInputReceiver Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<IUndoCommand> UndoCommandTab ParticleSystemEditor Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl IInputReceiver Derived CpuParticleSystemEditor Inherited Members UndoCommandTab.ExecuteCommand(IUndoCommand) UndoCommandTab.ExecuteCommandSafe(IUndoCommand) UndoCommandTab.OnUndo() UndoCommandTab.OnRedo() UndoTab<IUndoCommand>.buttonUndo UndoTab<IUndoCommand>.buttonRedo UndoTab<IUndoCommand>.UndoBackups UndoTab<IUndoCommand>.RedoBackups UndoTab<IUndoCommand>.OnSaveFile() UndoTab<IUndoCommand>.OnChange() UndoTab<IUndoCommand>.Undo() UndoTab<IUndoCommand>.Redo() Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnDelete() Tab.OnUpdate() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ParticleSystemEditor() Initializes a new instance of the UserControl class. protected ParticleSystemEditor() Fields Camera The camera used by the presenter protected readonly TrackCamera Camera Field Value TrackCamera renderPanel The panel used by the engine for rendering. protected RenderPanel renderPanel Field Value RenderPanel Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. OnInitialize() Called on startup to load the content for this tab. protected override void OnInitialize() Exceptions NotSupportedException An unsupported graphics card feature is used. FileNotFoundException A file could not be located. IOException There was a problem reading a file. UnauthorizedAccessException Read access to a file was denied. InvalidOperationException There was a problem inside the engine. InvalidDataException A file contained invalid data."
  },
  "api/AlphaFramework.Editor.Graphics.html": {
    "href": "api/AlphaFramework.Editor.Graphics.html",
    "title": "Namespace AlphaFramework.Editor.Graphics | OmegaEngine",
    "summary": "Namespace AlphaFramework.Editor.Graphics Classes CpuParticleSystemEditor Allows a user to tweak the parameters for a CpuParticleSystem ParticleSystemEditor Abstract base class for editing particle system presets"
  },
  "api/AlphaFramework.Editor.Gui.Dialogs.AddControlTool.html": {
    "href": "api/AlphaFramework.Editor.Gui.Dialogs.AddControlTool.html",
    "title": "Class AddControlTool | OmegaEngine",
    "summary": "Class AddControlTool Namespace AlphaFramework.Editor.Gui.Dialogs Assembly AlphaFramework.Editor.dll Allows the user to add a new Control to a Dialog. public sealed class AddControlTool : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form AddControlTool Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks This is a non-modal floating toolbox window. Communication is handled via events (NewControl). Constructors AddControlTool() Initializes a new instance of the Form class. public AddControlTool() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. Events NewControl Occurs when a new control is to be added. public event Action<Control>? NewControl Event Type Action<Control>"
  },
  "api/AlphaFramework.Editor.Gui.Dialogs.html": {
    "href": "api/AlphaFramework.Editor.Gui.Dialogs.html",
    "title": "Namespace AlphaFramework.Editor.Gui.Dialogs | OmegaEngine",
    "summary": "Namespace AlphaFramework.Editor.Gui.Dialogs Classes AddControlTool Allows the user to add a new Control to a Dialog."
  },
  "api/AlphaFramework.Editor.Gui.GuiEditor.html": {
    "href": "api/AlphaFramework.Editor.Gui.GuiEditor.html",
    "title": "Class GuiEditor | OmegaEngine",
    "summary": "Class GuiEditor Namespace AlphaFramework.Editor.Gui Assembly AlphaFramework.Editor.dll Allows a user to design a GUI dialog public class GuiEditor : UndoCloneTab<Dialog>, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<Dialog> UndoCloneTab<Dialog> GuiEditor Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members UndoCloneTab<Dialog>.Content UndoCloneTab<Dialog>.OnChange() UndoCloneTab<Dialog>.OnUndo() UndoCloneTab<Dialog>.OnRedo() UndoTab<Dialog>.buttonUndo UndoTab<Dialog>.buttonRedo UndoTab<Dialog>.UndoBackups UndoTab<Dialog>.RedoBackups UndoTab<Dialog>.Undo() UndoTab<Dialog>.Redo() Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors GuiEditor(string, bool) Creates a new GUI editor. public GuiEditor(string filePath, bool overwrite) Parameters filePath string The path to the file to be edited. overwrite bool true if an existing file supposed to be overwritten when SaveFile() is called. Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. OnClose() Called when the tab needs to shutdown and close protected override void OnClose() OnDelete() Hook to delete the currently selected object in this tab protected override void OnDelete() OnInitialize() Called on startup to load the content for this tab from a file protected override void OnInitialize() OnSaveFile() Called when the content of this tab is to be saved to a file. protected override void OnSaveFile() Exceptions ArgumentException The file path is invalid. NotSupportedException The file path is invalid. IOException There was a problem writing a file. UnauthorizedAccessException Write access to a file was denied. OnUpdate() Called on startup, content updates and tab switch to refresh any on-screen displays protected override void OnUpdate()"
  },
  "api/AlphaFramework.Editor.Gui.LanguageEditor.html": {
    "href": "api/AlphaFramework.Editor.Gui.LanguageEditor.html",
    "title": "Class LanguageEditor | OmegaEngine",
    "summary": "Class LanguageEditor Namespace AlphaFramework.Editor.Gui Assembly AlphaFramework.Editor.dll Allows a user to edit language localizations for the GUI public class LanguageEditor : UndoCloneTab<XmlDictionary>, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<XmlDictionary> UndoCloneTab<XmlDictionary> LanguageEditor Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members UndoCloneTab<XmlDictionary>.Content UndoCloneTab<XmlDictionary>.OnChange() UndoCloneTab<XmlDictionary>.OnUndo() UndoCloneTab<XmlDictionary>.OnRedo() UndoTab<XmlDictionary>.buttonUndo UndoTab<XmlDictionary>.buttonRedo UndoTab<XmlDictionary>.UndoBackups UndoTab<XmlDictionary>.RedoBackups UndoTab<XmlDictionary>.Undo() UndoTab<XmlDictionary>.Redo() Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors LanguageEditor(string, bool) Creates a new GUI language editor. public LanguageEditor(string filePath, bool overwrite) Parameters filePath string The path to the file to be edited. overwrite bool true if an existing file supposed to be overwritten when SaveFile() is called. Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. OnDelete() Hook to delete the currently selected object in this tab protected override void OnDelete() OnInitialize() Called on startup to load the content for this tab from a file protected override void OnInitialize() OnSaveFile() Called when the content of this tab is to be saved to a file. protected override void OnSaveFile() Exceptions ArgumentException The file path is invalid. NotSupportedException The file path is invalid. IOException There was a problem writing a file. UnauthorizedAccessException Write access to a file was denied. OnUpdate() Called on startup, content updates and tab switch to refresh any on-screen displays protected override void OnUpdate()"
  },
  "api/AlphaFramework.Editor.Gui.html": {
    "href": "api/AlphaFramework.Editor.Gui.html",
    "title": "Namespace AlphaFramework.Editor.Gui | OmegaEngine",
    "summary": "Namespace AlphaFramework.Editor.Gui Namespaces AlphaFramework.Editor.Gui.Dialogs Classes GuiEditor Allows a user to design a GUI dialog LanguageEditor Allows a user to edit language localizations for the GUI"
  },
  "api/AlphaFramework.Editor.IToastProvider.html": {
    "href": "api/AlphaFramework.Editor.IToastProvider.html",
    "title": "Interface IToastProvider | OmegaEngine",
    "summary": "Interface IToastProvider Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll Provides a surface for displaying toas messages to the user. public interface IToastProvider Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods ShowToast(string) Displays a new toast messages to the user. Any exisiting messages are replaced. void ShowToast(string message) Parameters message string The message text to be displayed. Remarks A toast message is a message that pops up from a corner of the screen or window and vanishes after a few seconds without the user needing to confirm it."
  },
  "api/AlphaFramework.Editor.MainFormBase.html": {
    "href": "api/AlphaFramework.Editor.MainFormBase.html",
    "title": "Class MainFormBase | OmegaEngine",
    "summary": "Class MainFormBase Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll An extendable basis for an editor main window. public class MainFormBase : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl, IToastProvider Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form MainFormBase Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl IToastProvider Derived MainForm Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Implement the hooks Restart(), LaunchGame(params string[]) and ChangeLanguage(string). Constructors MainFormBase() Initializes a new instance of the Form class. protected MainFormBase() Fields Tabs protected readonly Dictionary<Tab, ToolStripButton> Tabs Field Value Dictionary<Tab, ToolStripButton> menuFileModProperties protected ToolStripMenuItem menuFileModProperties Field Value ToolStripMenuItem menuFilePackageMod protected ToolStripMenuItem menuFilePackageMod Field Value ToolStripMenuItem menuLanguageEnglish protected ToolStripMenuItem menuLanguageEnglish Field Value ToolStripMenuItem menuLanguageGerman protected ToolStripMenuItem menuLanguageGerman Field Value ToolStripMenuItem toolStrip protected ToolStrip toolStrip Field Value ToolStrip Properties CurrentTab The currently visible tab protected Tab? CurrentTab { get; } Property Value Tab Loading Indicates the editor is currently loading something and the user must wait. public bool Loading { get; set; } Property Value bool Methods AddTab(Tab) protected void AddTab(Tab tab) Parameters tab Tab ChangeLanguage(string) Applies a new language to the editor GUI, game logic, etc.. protected virtual void ChangeLanguage(string language) Parameters language string A two-letter ISO language code. Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. LaunchGame(params string[]) Launches the main game with the currently active mod. protected virtual void LaunchGame(params string[] arguments) Parameters arguments string[] Additional arguments to be passed. Exceptions Win32Exception The game executable could not be launched. BadImageFormatException The game executable is damaged. OpenFileTab<T>(string, string, Func<string, bool, T>) Displays a file-editing tab. protected void OpenFileTab<T>(string type, string extension, Func<string, bool, T> getInstance) where T : Tab Parameters type string The type of file the tab edits (e.g. Textures, Sounds, ...). extension string The file extension of the file type with a dot, but without an asterisk (e.g. .xml, .png, ...). getInstance Func<string, bool, T> A callback for creating an instance of the tab. Type Parameters T The tab type to display. Restart() Restarts the editor to allow the user to choose a different mod. protected virtual void Restart() ShowSingleInstanceTab<T>() Displays a single-instance tab. protected void ShowSingleInstanceTab<T>() where T : Tab, new() Type Parameters T The tab type to display. ShowTab(Tab) protected void ShowTab(Tab tab) Parameters tab Tab ShowToast(string) Displays a new toast messages to the user. Any exisiting messages are replaced. public void ShowToast(string message) Parameters message string The message text to be displayed. Remarks A toast message is a message that pops up from a corner of the screen or window and vanishes after a few seconds without the user needing to confirm it."
  },
  "api/AlphaFramework.Editor.ModInfo.html": {
    "href": "api/AlphaFramework.Editor.ModInfo.html",
    "title": "Class ModInfo | OmegaEngine",
    "summary": "Class ModInfo Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll Contains basic information about a mod. public sealed class ModInfo Inheritance object ModInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Author The author of the mod. public string? Author { get; set; } Property Value string Current Information about the currently loaded mod. public static ModInfo? Current { get; set; } Property Value ModInfo CurrentLocation The path to the file containing the mod information. public static string? CurrentLocation { get; set; } Property Value string Description A short description of the mod. public string? Description { get; set; } Property Value string FileExt The file extensions used when this class is stored as a file including the leading dot. public static string FileExt { get; set; } Property Value string MainGame Shall the application be used to edit the main game instead of a mod? public static bool MainGame { get; set; } Property Value bool Name The name of the mod. public string? Name { get; set; } Property Value string Version The version of the mod. public string? Version { get; set; } Property Value string Website The website of the author. public string? Website { get; set; } Property Value string"
  },
  "api/AlphaFramework.Editor.ModPackageDialog.html": {
    "href": "api/AlphaFramework.Editor.ModPackageDialog.html",
    "title": "Class ModPackageDialog | OmegaEngine",
    "summary": "Class ModPackageDialog Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll Allows the user to create a redistributable package of a Mod public class ModPackageDialog : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form ModPackageDialog Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ModPackageDialog() Initializes a new instance of the Form class. public ModPackageDialog() Properties FileExt The file extensions when a mod is stored in a package public static string FileExt { get; } Property Value string Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. PackageMod(ModInfo, string) Packages a mod into an auto-install ZIP file public static void PackageMod(ModInfo info, string path) Parameters info ModInfo The mod information to be edited path string The path of the mod info file"
  },
  "api/AlphaFramework.Editor.ModPropertyDialog.html": {
    "href": "api/AlphaFramework.Editor.ModPropertyDialog.html",
    "title": "Class ModPropertyDialog | OmegaEngine",
    "summary": "Class ModPropertyDialog Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll Displays and edits information about a mod. Can also be used to create a new mod. public class ModPropertyDialog : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form ModPropertyDialog Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ModPropertyDialog() Initializes a new instance of the Form class. public ModPropertyDialog() Methods CreateMod() Creates a new mod. Information is automatically saved to the XML info file. public static string? CreateMod() Returns string The path of the newly created mod info file, null if none was created Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. EditMod(ModInfo, string) Edits the properties of an existing mod. Changes are automatically saved to the XML info file. public static void EditMod(ModInfo info, string path) Parameters info ModInfo The mod information to be edited path string The path of the mod info file"
  },
  "api/AlphaFramework.Editor.ModSelectorForm.html": {
    "href": "api/AlphaFramework.Editor.ModSelectorForm.html",
    "title": "Class ModSelectorForm | OmegaEngine",
    "summary": "Class ModSelectorForm Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll Allows the user to select a Mod to edit public sealed class ModSelectorForm : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form ModSelectorForm Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ModSelectorForm(EditorSettings) Creates a new mod selection form. public ModSelectorForm(EditorSettings settings) Parameters settings EditorSettings Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/AlphaFramework.Editor.Properties.Resources.html": {
    "href": "api/AlphaFramework.Editor.Properties.Resources.html",
    "title": "Class Resources | OmegaEngine",
    "summary": "Class Resources Namespace AlphaFramework.Editor.Properties Assembly AlphaFramework.Editor.dll A strongly-typed resource class, for looking up localized strings, etc. public class Resources Inheritance object Resources Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties AutoSavePendingChanges Looks up a localized string similar to The changes you have made will be saved, so that they will actually become visible.. public static string AutoSavePendingChanges { get; } Property Value string BadGraphics Looks up a localized string similar to This application is not supported by your graphics card.. public static string BadGraphics { get; } Property Value string Cancel Looks up a localized string similar to Cancel. public static string Cancel { get; } Property Value string CloseModForLangChange Looks up a localized string similar to For the new language to become effective everywhere, this Mod needs to be closed. Continue? All open files will be closed. You will be able to save your work first.. public static string CloseModForLangChange { get; } Property Value string CloseModForLangChangeNo Looks up a localized string similar to Don't close Mod Leave the Mod open and apply the language change only partially for now. public static string CloseModForLangChangeNo { get; } Property Value string CloseModForLangChangeYes Looks up a localized string similar to Close Mod Close the Mod and apply the language change everywhere. public static string CloseModForLangChangeYes { get; } Property Value string CopyCopy Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap CopyCopy { get; } Property Value Bitmap CreateButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap CreateButton { get; } Property Value Bitmap Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo CutButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap CutButton { get; } Property Value Bitmap DataImported Looks up a localized string similar to The external data was successfully imported.. public static string DataImported { get; } Property Value string DeleteButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap DeleteButton { get; } Property Value Bitmap DeleteCheckedEntries Looks up a localized string similar to Do you want delete the {0} checked entries? Note: This is not necessarily the currently selected one.. public static string DeleteCheckedEntries { get; } Property Value string DeleteSelectedEntry Looks up a localized string similar to Do you want delete the currently selected entry? {0}. public static string DeleteSelectedEntry { get; } Property Value string DirectXMissing Looks up a localized string similar to The required version of DirectX is not installed on your computer.. public static string DirectXMissing { get; } Property Value string DirectoryNotCreatable Looks up a localized string similar to The directory could not be created.. public static string DirectoryNotCreatable { get; } Property Value string DirectoryNotEmpty Looks up a localized string similar to The selected directory is not empty. Use it anyway?. public static string DirectoryNotEmpty { get; } Property Value string DirectoryNotEmptyCancel Looks up a localized string similar to Cancel Choose a different directory. public static string DirectoryNotEmptyCancel { get; } Property Value string DirectoryNotEmptyContinue Looks up a localized string similar to Continue Use this directory anyway (not recommended!). public static string DirectoryNotEmptyContinue { get; } Property Value string DownButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap DownButton { get; } Property Value Bitmap Editor Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap Editor { get; } Property Value Bitmap EnterTemplateName Looks up a localized string similar to Please enter a name for the template.. public static string EnterTemplateName { get; } Property Value string ExportCheckedEntries Looks up a localized string similar to Do you want export the {0} checked entries? Note: This is not necessarily the currently selected one.. public static string ExportCheckedEntries { get; } Property Value string ExportSelectedEntry Looks up a localized string similar to Do you want export the currently selected entry? {0}. public static string ExportSelectedEntry { get; } Property Value string FailedReadArchives Looks up a localized string similar to Failed to read game content archives.. public static string FailedReadArchives { get; } Property Value string FileAlreadyOpen Looks up a localized string similar to This file is already open.. public static string FileAlreadyOpen { get; } Property Value string FileDamaged Looks up a localized string similar to The file is damaged or in an invalid format.. public static string FileDamaged { get; } Property Value string FileNotFound Looks up a localized string similar to This file could not be found:. public static string FileNotFound { get; } Property Value string FileNotLoadable Looks up a localized string similar to An error occurred while loading the file.. public static string FileNotLoadable { get; } Property Value string FileNotSavable Looks up a localized string similar to An error occurred while saving the file.. public static string FileNotSavable { get; } Property Value string FunctionNotAvaialble Looks up a localized string similar to This function isn't available yet.. public static string FunctionNotAvaialble { get; } Property Value string GameEXENotFound Looks up a localized string similar to The game EXE could not be found.. public static string GameEXENotFound { get; } Property Value string GoButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap GoButton { get; } Property Value Bitmap ImportExportButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap ImportExportButton { get; } Property Value Bitmap Information Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap Information { get; } Property Value Bitmap InvalidDirectoryPath Looks up a localized string similar to The directory path is invalid.. public static string InvalidDirectoryPath { get; } Property Value string InvalidFilePath Looks up a localized string similar to The file path is invalid.. public static string InvalidFilePath { get; } Property Value string InvalidInput Looks up a localized string similar to The entered data is invalid.. public static string InvalidInput { get; } Property Value string KeyAlreadyPresent Looks up a localized string similar to The key was already present in the dictionary.. public static string KeyAlreadyPresent { get; } Property Value string Loading Looks up a localized string similar to Loading.... public static string Loading { get; } Property Value string MissingModName Looks up a localized string similar to You must enter a mod name.. public static string MissingModName { get; } Property Value string MissingStorageLocation Looks up a localized string similar to You must enter a storage location.. public static string MissingStorageLocation { get; } Property Value string ModPackaged Looks up a localized string similar to The mod was successfully packaged into a auto-installable file.. public static string ModPackaged { get; } Property Value string NameInUse Looks up a localized string similar to This name is already in use.. public static string NameInUse { get; } Property Value string NoKeep Looks up a localized string similar to No, keep. public static string NoKeep { get; } Property Value string NotFoundGameContentDir Looks up a localized string similar to The game content directory could not be found.. public static string NotFoundGameContentDir { get; } Property Value string NotFoundModContentDir Looks up a localized string similar to The mod directory could not be found.. public static string NotFoundModContentDir { get; } Property Value string OK Looks up a localized string similar to OK. public static string OK { get; } Property Value string PackageOutsideMod Looks up a localized string similar to The package file must be created outside of the mod directory.. public static string PackageOutsideMod { get; } Property Value string PartialDataArrayDimensionsNotEqual Looks up a localized string similar to The dimensions of the oldPartialData and newPartialData arrays must be equal.. public static string PartialDataArrayDimensionsNotEqual { get; } Property Value string PasteButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap PasteButton { get; } Property Value Bitmap RedoButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap RedoButton { get; } Property Value Bitmap RefreshButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap RefreshButton { get; } Property Value Bitmap RenameButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap RenameButton { get; } Property Value Bitmap ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager RunButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap RunButton { get; } Property Value Bitmap SaveButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap SaveButton { get; } Property Value Bitmap SaveChanges Looks up a localized string similar to Do you want to save the changes you made?. public static string SaveChanges { get; } Property Value string SaveChangesNo Looks up a localized string similar to &Don't save Ignore the not saved changes. public static string SaveChangesNo { get; } Property Value string SaveChangesYes Looks up a localized string similar to &Save Save the file and then close. public static string SaveChangesYes { get; } Property Value string SavedFile Looks up a localized string similar to The file was saved successfully.. public static string SavedFile { get; } Property Value string SearchButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap SearchButton { get; } Property Value Bitmap Select Looks up a localized string similar to Select {0}:. public static string Select { get; } Property Value string StoreCameraPerspective Looks up a localized string similar to This will store the current camera perspective as the startup value for this map.. public static string StoreCameraPerspective { get; } Property Value string StoreCameraPerspectiveCancel Looks up a localized string similar to Keep previous perspective. public static string StoreCameraPerspectiveCancel { get; } Property Value string StoreCameraPerspectiveOK Looks up a localized string similar to Set as new startup perspective. public static string StoreCameraPerspectiveOK { get; } Property Value string TemplateSelection Looks up a localized string similar to Template selection. public static string TemplateSelection { get; } Property Value string TestInGame Looks up a localized string similar to You are about to launch the game using the current Mod. Please first ensure that you have saved all changes, so that they will actually become visible.. public static string TestInGame { get; } Property Value string TestInGameContinue Looks up a localized string similar to &Continue Launch the game. public static string TestInGameContinue { get; } Property Value string TestInGameContinueSave Looks up a localized string similar to &Save and Continue Save the file and launch the game. public static string TestInGameContinueSave { get; } Property Value string TestInGameMap Looks up a localized string similar to You are about to launch the game and open the current map.. public static string TestInGameMap { get; } Property Value string UndoButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap UndoButton { get; } Property Value Bitmap UpButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap UpButton { get; } Property Value Bitmap ValidateButton Looks up a localized resource of type System.Drawing.Bitmap. public static Bitmap ValidateButton { get; } Property Value Bitmap YesDelete Looks up a localized string similar to Yes, delete. public static string YesDelete { get; } Property Value string"
  },
  "api/AlphaFramework.Editor.Properties.html": {
    "href": "api/AlphaFramework.Editor.Properties.html",
    "title": "Namespace AlphaFramework.Editor.Properties | OmegaEngine",
    "summary": "Namespace AlphaFramework.Editor.Properties Classes Resources A strongly-typed resource class, for looking up localized strings, etc."
  },
  "api/AlphaFramework.Editor.Tab.html": {
    "href": "api/AlphaFramework.Editor.Tab.html",
    "title": "Class Tab | OmegaEngine",
    "summary": "Class Tab Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll A base class for all editor windows that can be displayed as tabs public abstract class Tab : UserControl, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Derived UndoTab<T> Inherited Members UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.Dispose(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Call OnChange() after each change to make sure the save and undo buttons are enabled Constructors Tab() Initializes a new instance of the UserControl class. protected Tab() Fields Changed True when unsaved changes to the content exist protected bool Changed Field Value bool ToastProvider Provides a surface for displaying toast messages to the user. protected IToastProvider ToastProvider Field Value IToastProvider _fullPath The complete (rooted) path to load and/or save the file from/to protected string _fullPath Field Value string _overwrite true if an existing file supposed to be overwritten when SaveFile() is called. protected bool _overwrite Field Value bool Properties FilePath The path to the file in this editor [Browsable(false)] public string FilePath { get; protected set; } Property Value string NameUI The user-friendly name of this editor public string NameUI { get; set; } Property Value string Methods Delete() Delete the currently selected object in this tab public void Delete() FocusDefaultControl() Set the focus back to the default control on the tab protected void FocusDefaultControl() ForceClose() Forces the tab to close, displaying warnings about unsaved data, etc. but not allowing the user to cancel. protected void ForceClose() Hide() Hides this tab (so that another can be brought to the foreground) public void Hide() OnChange() Mark the content of this tab as changed (needs to be saved) protected virtual void OnChange() OnClose() Called when the tab needs to shutdown and close protected virtual void OnClose() OnDelete() Hook to delete the currently selected object in this tab protected virtual void OnDelete() OnInitialize() Called on startup to load the content for this tab. protected virtual void OnInitialize() Exceptions NotSupportedException An unsupported graphics card feature is used. FileNotFoundException A file could not be located. IOException There was a problem reading a file. UnauthorizedAccessException Read access to a file was denied. InvalidOperationException There was a problem inside the engine. InvalidDataException A file contained invalid data. OnSaveFile() Called when the content of this tab is to be saved to a file. protected virtual void OnSaveFile() Exceptions ArgumentException The file path is invalid. NotSupportedException The file path is invalid. IOException There was a problem writing a file. UnauthorizedAccessException Write access to a file was denied. OnUpdate() Called on startup, content updates and tab switch to refresh any on-screen displays protected virtual void OnUpdate() Open(IToastProvider) Opens the tab. public void Open(IToastProvider toastProvider) Parameters toastProvider IToastProvider Provides a surface for displaying toast messages to the user. Exceptions OperationCanceledException The user has been informed of an error and has confirmed the resulting cancellation. Redo() Hook to redo the last undone change public virtual void Redo() RequestClose() Requests the tab to close, displaying warnings about unsaved data, etc. allowing the user to cancel. public bool RequestClose() Returns bool true if the tab was closed, false if the user canceled the process SaveFile() Saves the content of this tab to a file - error-handling included! public bool SaveFile() Returns bool true if file was saved, false if an error occurred Undo() Hook to undo the last change public virtual void Undo() Events TabClosed Occurs after the tab was closed public event EventHandler? TabClosed Event Type EventHandler"
  },
  "api/AlphaFramework.Editor.UndoCloneTab-1.html": {
    "href": "api/AlphaFramework.Editor.UndoCloneTab-1.html",
    "title": "Class UndoCloneTab<T> | OmegaEngine",
    "summary": "Class UndoCloneTab<T> Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll A base class for all editor windows that have undo-functionality based on cloning their whole content public class UndoCloneTab<T> : UndoTab<T>, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl where T : ICloneable<T> Type Parameters T Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<T> UndoCloneTab<T> Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Derived GuiEditor LanguageEditor TemplateEditor<T> Inherited Members UndoTab<T>.buttonUndo UndoTab<T>.buttonRedo UndoTab<T>.UndoBackups UndoTab<T>.RedoBackups UndoTab<T>.OnSaveFile() UndoTab<T>.Undo() UndoTab<T>.Redo() Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnDelete() Tab.OnUpdate() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.Dispose(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Calling OnChange() will create an undo checkpoint (AlphaFramework.Editor.UndoCloneTab<T>._currentBackup) after the fact, ready for the next change. The first checkpoint is created right at startup. Constructors UndoCloneTab() Initializes a new instance of the UserControl class. protected UndoCloneTab() Fields Content The content to be handled by the undo-system protected T Content Field Value T Methods OnChange() Mark the content of this tab as changed (needs to be saved) and create a new undo-backup protected override void OnChange() OnInitialize() Called on startup to load the content for this tab from a file protected override void OnInitialize() OnRedo() Called to redo the last undone change protected override void OnRedo() OnUndo() Called to undo the last change protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.UndoCommandTab.html": {
    "href": "api/AlphaFramework.Editor.UndoCommandTab.html",
    "title": "Class UndoCommandTab | OmegaEngine",
    "summary": "Class UndoCommandTab Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll A base class for all editor windows that have undo-functionality based on IUndoCommand logging (using the command pattern) public class UndoCommandTab : UndoTab<IUndoCommand>, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<IUndoCommand> UndoCommandTab Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Derived ParticleSystemEditor MapEditor Inherited Members UndoTab<IUndoCommand>.buttonUndo UndoTab<IUndoCommand>.buttonRedo UndoTab<IUndoCommand>.UndoBackups UndoTab<IUndoCommand>.RedoBackups UndoTab<IUndoCommand>.OnSaveFile() UndoTab<IUndoCommand>.OnChange() UndoTab<IUndoCommand>.Undo() UndoTab<IUndoCommand>.Redo() Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnInitialize() Tab.OnDelete() Tab.OnUpdate() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.Dispose(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks All changes to the content must be performed via the ExecuteCommand(IUndoCommand) interface to be handled by the undo-system Constructors UndoCommandTab() Initializes a new instance of the UserControl class. protected UndoCommandTab() Methods ExecuteCommand(IUndoCommand) Executes a IUndoCommand using this tab's undo stack. protected void ExecuteCommand(IUndoCommand command) Parameters command IUndoCommand ExecuteCommandSafe(IUndoCommand) Executes a IUndoCommand and automatically displays message boxes for common exception types. protected void ExecuteCommandSafe(IUndoCommand command) Parameters command IUndoCommand OnRedo() Hook to redo the last undone change protected override void OnRedo() OnUndo() Hook to undo the last change protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.UndoTab-1.html": {
    "href": "api/AlphaFramework.Editor.UndoTab-1.html",
    "title": "Class UndoTab<T> | OmegaEngine",
    "summary": "Class UndoTab<T> Namespace AlphaFramework.Editor Assembly AlphaFramework.Editor.dll A base class for all editor windows that have undo-functionality public abstract class UndoTab<T> : Tab, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Type Parameters T Data type for storing undo checkpoint information (e.g. cloned snapshots or command logs) Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<T> Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Derived UndoCloneTab<T> UndoCommandTab Inherited Members Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnInitialize() Tab.OnDelete() Tab.OnUpdate() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.Dispose(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors UndoTab() Initializes a new instance of the UserControl class. protected UndoTab() Fields RedoBackups Entries used by the undo-system to redo changes previously undone protected readonly Stack<T> RedoBackups Field Value Stack<T> UndoBackups Entries used by the undo-system to undo changes protected readonly Stack<T> UndoBackups Field Value Stack<T> buttonRedo The redo button. protected readonly Button buttonRedo Field Value Button buttonUndo The undo button. protected readonly Button buttonUndo Field Value Button Methods OnChange() Mark the content of this tab as changed (needs to be saved) protected override void OnChange() OnRedo() Hook to redo the last undone change protected abstract void OnRedo() OnSaveFile() Called when the content of this tab is to be saved to a file. protected override void OnSaveFile() Exceptions ArgumentException The file path is invalid. NotSupportedException The file path is invalid. IOException There was a problem writing a file. UnauthorizedAccessException Write access to a file was denied. OnUndo() Hook to undo the last change protected abstract void OnUndo() Redo() Hook to redo the last undone change public override void Redo() Undo() Hook to undo the last change public override void Undo()"
  },
  "api/AlphaFramework.Editor.World.Commands.AddPositionables-1.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.AddPositionables-1.html",
    "title": "Class AddPositionables<TCoordinates> | OmegaEngine",
    "summary": "Class AddPositionables<TCoordinates> Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Adds one or more Positionable<TCoordinates>ies to a CoordinateUniverse<TCoordinates>. public class AddPositionables<TCoordinates> : AddRemovePositionables<TCoordinates>, IUndoCommand where TCoordinates : struct Type Parameters TCoordinates Inheritance object SimpleCommand AddRemovePositionables<TCoordinates> AddPositionables<TCoordinates> Implements IUndoCommand Inherited Members AddRemovePositionables<TCoordinates>.AddPositionables() AddRemovePositionables<TCoordinates>.RemovePositionables() SimpleCommand.Execute() SimpleCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors AddPositionables(CoordinateUniverse<TCoordinates>, IEnumerable<Positionable<TCoordinates>>) Creates a new command for adding one or more Positionable<TCoordinates>ies to a CoordinateUniverse<TCoordinates>. public AddPositionables(CoordinateUniverse<TCoordinates> universe, IEnumerable<Positionable<TCoordinates>> entities) Parameters universe CoordinateUniverse<TCoordinates> The CoordinateUniverse<TCoordinates> to add to. entities IEnumerable<Positionable<TCoordinates>> The Positionable<TCoordinates>ies to add. Methods OnExecute() Adds the Positionable<TCoordinates> to the CoordinateUniverse<TCoordinates> protected override void OnExecute() OnUndo() Removes the Positionable<TCoordinates> from the CoordinateUniverse<TCoordinates> again protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.World.Commands.AddRemovePositionables-1.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.AddRemovePositionables-1.html",
    "title": "Class AddRemovePositionables<TCoordinates> | OmegaEngine",
    "summary": "Class AddRemovePositionables<TCoordinates> Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Adds/removes one or more Positionable<TCoordinates>ies to/from a CoordinateUniverse<TCoordinates>. public abstract class AddRemovePositionables<TCoordinates> : SimpleCommand, IUndoCommand where TCoordinates : struct Type Parameters TCoordinates Inheritance object SimpleCommand AddRemovePositionables<TCoordinates> Implements IUndoCommand Derived AddPositionables<TCoordinates> RemovePositionables<TCoordinates> Inherited Members SimpleCommand.Execute() SimpleCommand.OnExecute() SimpleCommand.Undo() SimpleCommand.OnUndo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors AddRemovePositionables(CoordinateUniverse<TCoordinates>, IEnumerable<Positionable<TCoordinates>>) Creates a new command for adding/removing one or more Positionable<TCoordinates>ies to/from a CoordinateUniverse<TCoordinates>. protected AddRemovePositionables(CoordinateUniverse<TCoordinates> universe, IEnumerable<Positionable<TCoordinates>> positionables) Parameters universe CoordinateUniverse<TCoordinates> The CoordinateUniverse<TCoordinates> to add to / remove from. positionables IEnumerable<Positionable<TCoordinates>> The Positionable<TCoordinates>s to add/remove. Methods AddPositionables() Removes the entities from the universe protected void AddPositionables() RemovePositionables() Adds the entities to the universe protected void RemovePositionables()"
  },
  "api/AlphaFramework.Editor.World.Commands.ChangeEntityTemplates.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.ChangeEntityTemplates.html",
    "title": "Class ChangeEntityTemplates | OmegaEngine",
    "summary": "Class ChangeEntityTemplates Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Changes the TemplateName property of one or more EntityBase<TCoordinates, TTemplate>s. public class ChangeEntityTemplates : SimpleCommand, IUndoCommand Inheritance object SimpleCommand ChangeEntityTemplates Implements IUndoCommand Inherited Members SimpleCommand.Execute() SimpleCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ChangeEntityTemplates(IEnumerable<ITemplated>, string) Creates a new command for changing the EntityTemplateBase<TSelf> of one or more EntityBase<TCoordinates, TTemplate>s. public ChangeEntityTemplates(IEnumerable<ITemplated> entities, string template) Parameters entities IEnumerable<ITemplated> The EntityBase<TCoordinates, TTemplate>s to modify. template string The name of the new EntityTemplateBase<TSelf> to set. Methods OnExecute() Template method to perform the desired action. protected override void OnExecute() OnUndo() Template method to undo the changes made by OnExecute(). protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.World.Commands.ChangeTerrainTemplate-1.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.ChangeTerrainTemplate-1.html",
    "title": "Class ChangeTerrainTemplate<TTemplate> | OmegaEngine",
    "summary": "Class ChangeTerrainTemplate<TTemplate> Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Changes a terrain Template<TSelf> on a Terrain<TTemplate>s. public class ChangeTerrainTemplate<TTemplate> : SimpleCommand, IUndoCommand where TTemplate : Template<TTemplate> Type Parameters TTemplate Inheritance object SimpleCommand ChangeTerrainTemplate<TTemplate> Implements IUndoCommand Inherited Members SimpleCommand.Execute() SimpleCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ChangeTerrainTemplate(Terrain<TTemplate>, int, string, Action) Creates a new command for changing a Template<TSelf> on a Terrain<TTemplate>. public ChangeTerrainTemplate(Terrain<TTemplate> terrain, int templateIndex, string templateName, Action refreshHandler) Parameters terrain Terrain<TTemplate> The Terrain<TTemplate> to modify. templateIndex int The index in Templates to set. templateName string The name of the new TTemplate to set. refreshHandler Action Called when the Terrain<TTemplate> needs to be reset. Methods OnExecute() Template method to perform the desired action. protected override void OnExecute() OnUndo() Template method to undo the changes made by OnExecute(). protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.World.Commands.ImportHeightMap.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.ImportHeightMap.html",
    "title": "Class ImportHeightMap | OmegaEngine",
    "summary": "Class ImportHeightMap Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Loads new height-map data into a Terrain<TTemplate>. public class ImportHeightMap : ImportMap<ByteGrid>, IUndoCommand Inheritance object FirstExecuteCommand ImportMap<ByteGrid> ImportHeightMap Implements IUndoCommand Inherited Members ImportMap<ByteGrid>.Terrain ImportMap<ByteGrid>.FileName ImportMap<ByteGrid>.OnFirstExecute() ImportMap<ByteGrid>.OnRedo() ImportMap<ByteGrid>.OnUndo() FirstExecuteCommand.Execute() FirstExecuteCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ImportHeightMap(ITerrain, string, Action) Creates a new command for loading height-map data into a ITerrain. public ImportHeightMap(ITerrain terrain, string fileName, Action refreshHandler) Parameters terrain ITerrain The ITerrain to load new height-map data into. fileName string The file to load the height-map data from. refreshHandler Action Called when the presenter needs to be reset. Properties MapData Points to HeightMap protected override ByteGrid MapData { get; set; } Property Value ByteGrid Methods LoadMap() Loads the height-map data from a file into the ITerrain protected override void LoadMap()"
  },
  "api/AlphaFramework.Editor.World.Commands.ImportMap-1.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.ImportMap-1.html",
    "title": "Class ImportMap<T> | OmegaEngine",
    "summary": "Class ImportMap<T> Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Abstract base class for commands that load new map data into a ITerrain. public abstract class ImportMap<T> : FirstExecuteCommand, IUndoCommand where T : class Type Parameters T The type of the map data to be imported. Inheritance object FirstExecuteCommand ImportMap<T> Implements IUndoCommand Derived ImportHeightMap ImportTextureMap Inherited Members FirstExecuteCommand.Execute() FirstExecuteCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ImportMap(ITerrain, string, Action) Creates a new command for loading map data into a ITerrain. protected ImportMap(ITerrain terrain, string fileName, Action refreshHandler) Parameters terrain ITerrain The ITerrain to load new map data into. fileName string The file to load the map data from. refreshHandler Action Called when the presenter needs to be reset. Fields FileName protected readonly string FileName Field Value string Terrain protected readonly ITerrain Terrain Field Value ITerrain Properties MapData Override to point to the appropriate ITerrain array map protected abstract T MapData { get; set; } Property Value T Methods LoadMap() Override to load the map data from a file into the ITerrain protected abstract void LoadMap() OnFirstExecute() Imports the map data protected override void OnFirstExecute() OnRedo() Restores the imported map data protected override void OnRedo() OnUndo() Restores the original map data protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.World.Commands.ImportTextureMap.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.ImportTextureMap.html",
    "title": "Class ImportTextureMap | OmegaEngine",
    "summary": "Class ImportTextureMap Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Loads new texture-map data into a ITerrain. public class ImportTextureMap : ImportMap<NibbleGrid>, IUndoCommand Inheritance object FirstExecuteCommand ImportMap<NibbleGrid> ImportTextureMap Implements IUndoCommand Inherited Members ImportMap<NibbleGrid>.Terrain ImportMap<NibbleGrid>.FileName ImportMap<NibbleGrid>.OnFirstExecute() ImportMap<NibbleGrid>.OnRedo() ImportMap<NibbleGrid>.OnUndo() FirstExecuteCommand.Execute() FirstExecuteCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ImportTextureMap(ITerrain, string, Action) Creates a new command for loading texture-map data into a ITerrain. public ImportTextureMap(ITerrain terrain, string fileName, Action refreshHandler) Parameters terrain ITerrain The ITerrain to load new texture-map data into. fileName string The file to load the texture-map data from. refreshHandler Action Called when the ITerrain needs to be reset. Properties MapData Points to TextureMap protected override NibbleGrid MapData { get; set; } Property Value NibbleGrid Methods LoadMap() Loads the texture-map data from a file into the ITerrain protected override void LoadMap()"
  },
  "api/AlphaFramework.Editor.World.Commands.ImportXmlBase-1.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.ImportXmlBase-1.html",
    "title": "Class ImportXmlBase<TUniverse> | OmegaEngine",
    "summary": "Class ImportXmlBase<TUniverse> Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Common base for loading new XML data into a IUniverse. public abstract class ImportXmlBase<TUniverse> : FirstExecuteCommand, IUndoCommand where TUniverse : class, IUniverse Type Parameters TUniverse The specific type of IUniverse to load XML data for. Inheritance object FirstExecuteCommand ImportXmlBase<TUniverse> Implements IUndoCommand Derived ImportXml Inherited Members FirstExecuteCommand.Execute() FirstExecuteCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ImportXmlBase(Func<TUniverse>, Action<TUniverse>, string, Action) Creates a new command for loading XML data into a TUniverse. protected ImportXmlBase(Func<TUniverse> getUniverse, Action<TUniverse> setUniverse, string xmlData, Action refreshHandler) Parameters getUniverse Func<TUniverse> Called to get the current TUniverse in the editor. setUniverse Action<TUniverse> Called to change the current TUniverse in the editor. xmlData string The XML string to parse. refreshHandler Action Called when the presenter needs to be reset. Methods OnFirstExecute() Imports the XML data protected override void OnFirstExecute() OnRedo() Restores the imported XML data protected override void OnRedo() OnUndo() Restores the original XML data protected override void OnUndo() TransferNonXmlData(TUniverse, TUniverse) Transfers any non-serialized data from oldUniverse to newUniverse. protected abstract void TransferNonXmlData(TUniverse oldUniverse, TUniverse newUniverse) Parameters oldUniverse TUniverse newUniverse TUniverse"
  },
  "api/AlphaFramework.Editor.World.Commands.ModifyHeightMap.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.ModifyHeightMap.html",
    "title": "Class ModifyHeightMap | OmegaEngine",
    "summary": "Class ModifyHeightMap Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Modifies height-map data in a ITerrain. public class ModifyHeightMap : FirstExecuteCommand, IUndoCommand Inheritance object FirstExecuteCommand ModifyHeightMap Implements IUndoCommand Inherited Members FirstExecuteCommand.Execute() FirstExecuteCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ModifyHeightMap(ITerrain, Point, byte[,], byte[,], Action) Creates a new command for modifying a rectangular area of the height-map in a ITerrain. public ModifyHeightMap(ITerrain terrain, Point offset, byte[,] oldPartialData, byte[,] newPartialData, Action refreshHandler) Parameters terrain ITerrain The ITerrain to modify. offset Point The top-left coordinates of the area to modify. oldPartialData byte[,] The height-map data of the area before it was modified. Do not modify this array after calling this method! newPartialData byte[,] The height-map data of the area after it was modified. Do not modify this array after calling this method! refreshHandler Action Called when the presenter needs to be reset. Methods OnFirstExecute() Template method to perform the desired action the first time. protected override void OnFirstExecute() OnRedo() Applies the AlphaFramework.Editor.World.Commands.ModifyHeightMap._newPartialData to HeightMap. protected override void OnRedo() OnUndo() Applies the AlphaFramework.Editor.World.Commands.ModifyHeightMap._oldPartialData to HeightMap. protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.World.Commands.ModifyTextureMap.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.ModifyTextureMap.html",
    "title": "Class ModifyTextureMap | OmegaEngine",
    "summary": "Class ModifyTextureMap Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Modifies texture-map data in a ITerrain. public class ModifyTextureMap : PreExecutedCommand, IUndoCommand Inheritance object FirstExecuteCommand PreExecutedCommand ModifyTextureMap Implements IUndoCommand Inherited Members PreExecutedCommand.OnFirstExecute() FirstExecuteCommand.Execute() FirstExecuteCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ModifyTextureMap(ITerrain, Point, byte[,], byte[,], Action) Creates a new command for modifying a rectangular area of the texture-map in a ITerrain. public ModifyTextureMap(ITerrain terrain, Point offset, byte[,] oldPartialData, byte[,] newPartialData, Action refreshHandler) Parameters terrain ITerrain The ITerrain to modify. offset Point The top-left coordinates of the area to modify. oldPartialData byte[,] The texture-map data of the area before it was modified. Do not modify this array after calling this method! newPartialData byte[,] The texture-map data of the area after it was modified. Do not modify this array after calling this method! refreshHandler Action Called when the Terrain needs to be reset. Methods OnRedo() Applies the AlphaFramework.Editor.World.Commands.ModifyTextureMap._newPartialData to TextureMap. protected override void OnRedo() OnUndo() Applies the AlphaFramework.Editor.World.Commands.ModifyTextureMap._oldPartialData to TextureMap. protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.World.Commands.MovePositionables.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.MovePositionables.html",
    "title": "Class MovePositionables | OmegaEngine",
    "summary": "Class MovePositionables Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Moves one or more Positionable<TCoordinates>s. public class MovePositionables : SimpleCommand, IUndoCommand Inheritance object SimpleCommand MovePositionables Implements IUndoCommand Inherited Members SimpleCommand.Execute() SimpleCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors MovePositionables(IEnumerable<Positionable<Vector2>>, Vector2) Creates a new command for moving one or more Positionable<TCoordinates>s. public MovePositionables(IEnumerable<Positionable<Vector2>> positionables, Vector2 target) Parameters positionables IEnumerable<Positionable<Vector2>> The Positionable<TCoordinates>s to be moved. target Vector2 The terrain position to move the entities to. Methods OnExecute() Set the changed Positions. protected override void OnExecute() OnUndo() Restore the original Positions. protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.World.Commands.RemovePositionables-1.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.RemovePositionables-1.html",
    "title": "Class RemovePositionables<TCoordinates> | OmegaEngine",
    "summary": "Class RemovePositionables<TCoordinates> Namespace AlphaFramework.Editor.World.Commands Assembly AlphaFramework.Editor.dll Removes one or more Positionable<TCoordinates>s from a IUniverse. public class RemovePositionables<TCoordinates> : AddRemovePositionables<TCoordinates>, IUndoCommand where TCoordinates : struct Type Parameters TCoordinates Inheritance object SimpleCommand AddRemovePositionables<TCoordinates> RemovePositionables<TCoordinates> Implements IUndoCommand Inherited Members AddRemovePositionables<TCoordinates>.AddPositionables() AddRemovePositionables<TCoordinates>.RemovePositionables() SimpleCommand.Execute() SimpleCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors RemovePositionables(CoordinateUniverse<TCoordinates>, IEnumerable<Positionable<TCoordinates>>) Creates a new command for removing one or more Positionable<TCoordinates>s from a IUniverse. public RemovePositionables(CoordinateUniverse<TCoordinates> universe, IEnumerable<Positionable<TCoordinates>> entities) Parameters universe CoordinateUniverse<TCoordinates> The CoordinateUniverse<TCoordinates> to remove from. entities IEnumerable<Positionable<TCoordinates>> The Positionable<TCoordinates>s to remove. Methods OnExecute() Removes the Positionable<TCoordinates> from the IUniverse protected override void OnExecute() OnUndo() Adds the Positionable<TCoordinates> back to the IUniverse protected override void OnUndo()"
  },
  "api/AlphaFramework.Editor.World.Commands.html": {
    "href": "api/AlphaFramework.Editor.World.Commands.html",
    "title": "Namespace AlphaFramework.Editor.World.Commands | OmegaEngine",
    "summary": "Namespace AlphaFramework.Editor.World.Commands Classes AddPositionables<TCoordinates> Adds one or more Positionable<TCoordinates>ies to a CoordinateUniverse<TCoordinates>. AddRemovePositionables<TCoordinates> Adds/removes one or more Positionable<TCoordinates>ies to/from a CoordinateUniverse<TCoordinates>. ChangeEntityTemplates Changes the TemplateName property of one or more EntityBase<TCoordinates, TTemplate>s. ChangeTerrainTemplate<TTemplate> Changes a terrain Template<TSelf> on a Terrain<TTemplate>s. ImportHeightMap Loads new height-map data into a Terrain<TTemplate>. ImportMap<T> Abstract base class for commands that load new map data into a ITerrain. ImportTextureMap Loads new texture-map data into a ITerrain. ImportXmlBase<TUniverse> Common base for loading new XML data into a IUniverse. ModifyHeightMap Modifies height-map data in a ITerrain. ModifyTextureMap Modifies texture-map data in a ITerrain. MovePositionables Moves one or more Positionable<TCoordinates>s. RemovePositionables<TCoordinates> Removes one or more Positionable<TCoordinates>s from a IUniverse."
  },
  "api/AlphaFramework.Editor.World.Dialogs.AddRenderComponentTool.html": {
    "href": "api/AlphaFramework.Editor.World.Dialogs.AddRenderComponentTool.html",
    "title": "Class AddRenderComponentTool | OmegaEngine",
    "summary": "Class AddRenderComponentTool Namespace AlphaFramework.Editor.World.Dialogs Assembly AlphaFramework.Editor.dll Allows the user to add a new Render component to an EntityTemplateBase<TSelf>. public sealed class AddRenderComponentTool : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form AddRenderComponentTool Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks This is a non-modal floating toolbox window. Communication is handled via events (NewRenderComponent). Constructors AddRenderComponentTool() Initializes a new instance of the Form class. public AddRenderComponentTool() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. Events NewRenderComponent Occurs when a new render component is to be added public event Action<Render>? NewRenderComponent Event Type Action<Render>"
  },
  "api/AlphaFramework.Editor.World.Dialogs.MapPropertiesTool.html": {
    "href": "api/AlphaFramework.Editor.World.Dialogs.MapPropertiesTool.html",
    "title": "Class MapPropertiesTool | OmegaEngine",
    "summary": "Class MapPropertiesTool Namespace AlphaFramework.Editor.World.Dialogs Assembly AlphaFramework.Editor.dll Allows the user to modify the properties of a IUniverse. public sealed class MapPropertiesTool : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form MapPropertiesTool Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks This is a non-modal floating toolbox window. Communication is handled via events (ExecuteCommand). Constructors MapPropertiesTool(IUniverse) Creates a new map properties tool window. public MapPropertiesTool(IUniverse universe) Parameters universe IUniverse The map data to modify. Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. UpdateUniverse(IUniverse) Updates the IUniverse object being represented by this window. public void UpdateUniverse(IUniverse universe) Parameters universe IUniverse The new IUniverse object. If it is the same object as the old one, cached values will be refreshed. Events ExecuteCommand Occurs when a command is to be executed by the owning tab. public event Action<IUndoCommand>? ExecuteCommand Event Type Action<IUndoCommand>"
  },
  "api/AlphaFramework.Editor.World.Dialogs.SelectTemplateDialog-1.html": {
    "href": "api/AlphaFramework.Editor.World.Dialogs.SelectTemplateDialog-1.html",
    "title": "Class SelectTemplateDialog<T> | OmegaEngine",
    "summary": "Class SelectTemplateDialog<T> Namespace AlphaFramework.Editor.World.Dialogs Assembly AlphaFramework.Editor.dll Dialog for selecting Template<TSelf>es (with a preview pane). public sealed class SelectTemplateDialog<T> : OKCancelDialog, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl where T : Template<T> Type Parameters T The type of Template<TSelf>es to select. Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form OKCancelDialog SelectTemplateDialog<T> Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks This dialog is a modal dialog.Communication is handled via the DialogResult and properties (SelectedTemplate) Constructors SelectTemplateDialog(NamedCollection<T>) Creates a new Template<TSelf> selection dialog public SelectTemplateDialog(NamedCollection<T> templates) Parameters templates NamedCollection<T> The list of Template<TSelf>es to choose from Properties SelectedTemplate The name of the Template<TSelf> the user selected; null if none. public string? SelectedTemplate { get; } Property Value string"
  },
  "api/AlphaFramework.Editor.World.Dialogs.TerrainSizeDialog.html": {
    "href": "api/AlphaFramework.Editor.World.Dialogs.TerrainSizeDialog.html",
    "title": "Class TerrainSizeDialog | OmegaEngine",
    "summary": "Class TerrainSizeDialog Namespace AlphaFramework.Editor.World.Dialogs Assembly AlphaFramework.Editor.dll Displays and edits a TerrainSize. Can also be used to create a new TerrainSize. public sealed class TerrainSizeDialog : OKCancelDialog, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form OKCancelDialog TerrainSizeDialog Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks This dialog is a modal dialog. Communication is handled via the static methods (Create(), Edit(ref TerrainSize)). Methods Create() Get a new TerrainSize. public static TerrainSize Create() Returns TerrainSize The new TerrainSize. Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. Edit(ref TerrainSize) Modify an existing TerrainSize. public static void Edit(ref TerrainSize size) Parameters size TerrainSize The TerrainSize to modify Exceptions OperationCanceledException The user clicked the cancel button."
  },
  "api/AlphaFramework.Editor.World.Dialogs.html": {
    "href": "api/AlphaFramework.Editor.World.Dialogs.html",
    "title": "Namespace AlphaFramework.Editor.World.Dialogs | OmegaEngine",
    "summary": "Namespace AlphaFramework.Editor.World.Dialogs Classes AddRenderComponentTool Allows the user to add a new Render component to an EntityTemplateBase<TSelf>. MapPropertiesTool Allows the user to modify the properties of a IUniverse. SelectTemplateDialog<T> Dialog for selecting Template<TSelf>es (with a preview pane). TerrainSizeDialog Displays and edits a TerrainSize. Can also be used to create a new TerrainSize."
  },
  "api/AlphaFramework.Editor.World.TemplateEditor-1.html": {
    "href": "api/AlphaFramework.Editor.World.TemplateEditor-1.html",
    "title": "Class TemplateEditor<T> | OmegaEngine",
    "summary": "Class TemplateEditor<T> Namespace AlphaFramework.Editor.World Assembly AlphaFramework.Editor.dll Abstract base tab for editing Template<TSelf>es public abstract class TemplateEditor<T> : UndoCloneTab<NamedCollection<T>>, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl where T : Template<T> Type Parameters T The type of Template<TSelf>es to edit Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<NamedCollection<T>> UndoCloneTab<NamedCollection<T>> TemplateEditor<T> Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Derived EntityEditorDesignerShim TerrainEditorDesignerShim Inherited Members UndoCloneTab<NamedCollection<T>>.Content UndoCloneTab<NamedCollection<T>>.OnChange() UndoCloneTab<NamedCollection<T>>.OnUndo() UndoCloneTab<NamedCollection<T>>.OnRedo() UndoTab<NamedCollection<T>>.buttonUndo UndoTab<NamedCollection<T>>.buttonRedo UndoTab<NamedCollection<T>>.UndoBackups UndoTab<NamedCollection<T>>.RedoBackups Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TemplateEditor() Initializes a new instance of the UserControl class. protected TemplateEditor() Fields TemplateList The filtered tree view listing all Template<TSelf>s. protected readonly FilteredTreeView<T> TemplateList Field Value FilteredTreeView<T> splitVertical The vertical splitter separating the template list from the template editor. protected SplitContainer splitVertical Field Value SplitContainer Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. OnDelete() Called to delete the currently selected object in this tab protected override void OnDelete() OnInitialize() Called on startup to load the content for this tab from a file protected override void OnInitialize() OnNewTemplate() Hook to be called when the user wants a new Template<TSelf> to be added. protected virtual void OnNewTemplate() OnSaveFile() Called when the content of this tab is to be saved to a file - no error-handling! protected override void OnSaveFile() OnUpdate() Called on startup, content updates and tab switch to refresh any on-screen displays protected override void OnUpdate() Redo() Hook to redo the last undone change public override void Redo() Undo() Hook to undo the last change public override void Undo()"
  },
  "api/AlphaFramework.Editor.World.TerrainModifiers.Base.html": {
    "href": "api/AlphaFramework.Editor.World.TerrainModifiers.Base.html",
    "title": "Class Base | OmegaEngine",
    "summary": "Class Base Namespace AlphaFramework.Editor.World.TerrainModifiers Assembly AlphaFramework.Editor.dll Abstract base class for interactively modifying a Terrain. public abstract class Base Inheritance object Base Derived Height Texture Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Base(ITerrain) Creates a new Terrain modifier. protected Base(ITerrain terrain) Parameters terrain ITerrain The Terrain to modify. Fields NewData Used to collect data as it is after the modifcations. protected readonly ExpandableRectangleArray<byte> NewData Field Value ExpandableRectangleArray<byte> OldData Used to collect data as it was before the modifications. protected readonly ExpandableRectangleArray<byte> OldData Field Value ExpandableRectangleArray<byte> Terrain The Terrain to modify. protected readonly ITerrain Terrain Field Value ITerrain Methods Apply(Vector2, TerrainBrush) Applies and accumulates a modification to the Terrain. public abstract void Apply(Vector2 terrainCoords, TerrainBrush brush) Parameters terrainCoords Vector2 The center coordinates of the area to modify in world space. brush TerrainBrush The shape and size of the area around terrainCoords to modify. GetCommand() Creates a pre-executed undo command representing the accumulated Apply(Vector2, TerrainBrush) calls to this instance. public abstract IUndoCommand GetCommand() Returns IUndoCommand"
  },
  "api/AlphaFramework.Editor.World.TerrainModifiers.Height.html": {
    "href": "api/AlphaFramework.Editor.World.TerrainModifiers.Height.html",
    "title": "Class Height | OmegaEngine",
    "summary": "Class Height Namespace AlphaFramework.Editor.World.TerrainModifiers Assembly AlphaFramework.Editor.dll Abstract base class for interactively changing the height of an area on a ITerrain. public abstract class Height : Base Inheritance object Base Height Derived HeightNoise HeightPlateau HeightShift HeightSmooth Inherited Members Base.OldData Base.NewData Base.Terrain object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Height(ITerrain, Terrain, Action) Creates a new terrain height modifier. protected Height(ITerrain terrain, Terrain engineTerrain, Action refreshHandler) Parameters terrain ITerrain The ITerrain to modify. engineTerrain Terrain The Terrain to live-update while modifying. refreshHandler Action Called when the presenter needs to be reset. Methods Apply(Vector2, TerrainBrush) Applies and accumulates a modification to the Terrain. public override void Apply(Vector2 terrainCoords, TerrainBrush brush) Parameters terrainCoords Vector2 The center coordinates of the area to modify in world space. brush TerrainBrush The shape and size of the area around terrainCoords to modify. GetCommand() Creates a pre-executed undo command representing the accumulated Apply(Vector2, TerrainBrush) calls to this instance. public override IUndoCommand GetCommand() Returns IUndoCommand ModifyTerrain(Point, TerrainBrush, byte[,], byte[,]) Modifies the ITerrain and fills arrays with undo/redo data. protected abstract void ModifyTerrain(Point offset, TerrainBrush brush, byte[,] oldData, byte[,] newData) Parameters offset Point The HeightMap index that corresponds to the top-left corner of the area to modify. brush TerrainBrush The shape and size of the area to the lower-right of offset to modify. oldData byte[,] An array to be filled with data from HeightMap before the modification. Both dimensions must be equal to Size. newData byte[,] An array to be filled with data from HeightMap after the modification. Both dimensions must be equal to Size."
  },
  "api/AlphaFramework.Editor.World.TerrainModifiers.HeightNoise.html": {
    "href": "api/AlphaFramework.Editor.World.TerrainModifiers.HeightNoise.html",
    "title": "Class HeightNoise | OmegaEngine",
    "summary": "Class HeightNoise Namespace AlphaFramework.Editor.World.TerrainModifiers Assembly AlphaFramework.Editor.dll Interactively adds height noise to a ITerrain. public sealed class HeightNoise : Height Inheritance object Base Height HeightNoise Inherited Members Height.Apply(Vector2, TerrainBrush) Height.GetCommand() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors HeightNoise(ITerrain, Terrain, Action, double, double) Creates a new terrain height noise generator. public HeightNoise(ITerrain terrain, Terrain engineTerrain, Action refreshHandler, double amplitude, double frequency) Parameters terrain ITerrain The ITerrain to modify. engineTerrain Terrain The Terrain to live-update while modifying. refreshHandler Action Called when the presenter needs to be reset. amplitude double The maximum amplitude of the noise to generate. frequency double The frequency of the noise to generate. Methods ModifyTerrain(Point, TerrainBrush, byte[,], byte[,]) Modifies the ITerrain and fills arrays with undo/redo data. protected override void ModifyTerrain(Point offset, TerrainBrush brush, byte[,] oldData, byte[,] newData) Parameters offset Point The HeightMap index that corresponds to the top-left corner of the area to modify. brush TerrainBrush The shape and size of the area to the lower-right of offset to modify. oldData byte[,] An array to be filled with data from HeightMap before the modification. Both dimensions must be equal to Size. newData byte[,] An array to be filled with data from HeightMap after the modification. Both dimensions must be equal to Size."
  },
  "api/AlphaFramework.Editor.World.TerrainModifiers.HeightPlateau.html": {
    "href": "api/AlphaFramework.Editor.World.TerrainModifiers.HeightPlateau.html",
    "title": "Class HeightPlateau | OmegaEngine",
    "summary": "Class HeightPlateau Namespace AlphaFramework.Editor.World.TerrainModifiers Assembly AlphaFramework.Editor.dll Interactively turns a ITerrain area into a plateau (all points have the same height). public sealed class HeightPlateau : Height Inheritance object Base Height HeightPlateau Inherited Members Height.Apply(Vector2, TerrainBrush) Height.GetCommand() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors HeightPlateau(ITerrain, Terrain, Action) Creates a new terrain plateau creator. public HeightPlateau(ITerrain terrain, Terrain engineTerrain, Action refreshHandler) Parameters terrain ITerrain The ITerrain to modify. engineTerrain Terrain The Terrain to live-update while modifying. refreshHandler Action Called when the presenter needs to be reset. Methods ModifyTerrain(Point, TerrainBrush, byte[,], byte[,]) Modifies the ITerrain and fills arrays with undo/redo data. protected override void ModifyTerrain(Point offset, TerrainBrush brush, byte[,] oldData, byte[,] newData) Parameters offset Point The HeightMap index that corresponds to the top-left corner of the area to modify. brush TerrainBrush The shape and size of the area to the lower-right of offset to modify. oldData byte[,] An array to be filled with data from HeightMap before the modification. Both dimensions must be equal to Size. newData byte[,] An array to be filled with data from HeightMap after the modification. Both dimensions must be equal to Size."
  },
  "api/AlphaFramework.Editor.World.TerrainModifiers.HeightShift.html": {
    "href": "api/AlphaFramework.Editor.World.TerrainModifiers.HeightShift.html",
    "title": "Class HeightShift | OmegaEngine",
    "summary": "Class HeightShift Namespace AlphaFramework.Editor.World.TerrainModifiers Assembly AlphaFramework.Editor.dll Interactively raises or lowers all points of an area on a ITerrain. public sealed class HeightShift : Height Inheritance object Base Height HeightShift Inherited Members Height.Apply(Vector2, TerrainBrush) Height.GetCommand() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors HeightShift(ITerrain, Terrain, Action, short) Creates a new terrain height shifter. public HeightShift(ITerrain terrain, Terrain engineTerrain, Action refreshHandler, short diff) Parameters terrain ITerrain The ITerrain to modify. engineTerrain Terrain The Terrain to live-update while modifying. refreshHandler Action Called when the presenter needs to be reset. diff short The value by which the terrain height is to be shifted. Methods ModifyTerrain(Point, TerrainBrush, byte[,], byte[,]) Modifies the ITerrain and fills arrays with undo/redo data. protected override void ModifyTerrain(Point offset, TerrainBrush brush, byte[,] oldData, byte[,] newData) Parameters offset Point The HeightMap index that corresponds to the top-left corner of the area to modify. brush TerrainBrush The shape and size of the area to the lower-right of offset to modify. oldData byte[,] An array to be filled with data from HeightMap before the modification. Both dimensions must be equal to Size. newData byte[,] An array to be filled with data from HeightMap after the modification. Both dimensions must be equal to Size."
  },
  "api/AlphaFramework.Editor.World.TerrainModifiers.HeightSmooth.html": {
    "href": "api/AlphaFramework.Editor.World.TerrainModifiers.HeightSmooth.html",
    "title": "Class HeightSmooth | OmegaEngine",
    "summary": "Class HeightSmooth Namespace AlphaFramework.Editor.World.TerrainModifiers Assembly AlphaFramework.Editor.dll Interactively smoothes a ITerrain area using a Gaussian filter. public sealed class HeightSmooth : Height Inheritance object Base Height HeightSmooth Inherited Members Height.Apply(Vector2, TerrainBrush) Height.GetCommand() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors HeightSmooth(ITerrain, Terrain, Action, double) Creates a new terrain height smoother. public HeightSmooth(ITerrain terrain, Terrain engineTerrain, Action refreshHandler, double sigma) Parameters terrain ITerrain The ITerrain to modify. engineTerrain Terrain The Terrain to live-update while modifying. refreshHandler Action Called when the presenter needs to be reset. sigma double The standard deviation of the Gaussian distribution. Methods ModifyTerrain(Point, TerrainBrush, byte[,], byte[,]) Modifies the ITerrain and fills arrays with undo/redo data. protected override void ModifyTerrain(Point offset, TerrainBrush brush, byte[,] oldData, byte[,] newData) Parameters offset Point The HeightMap index that corresponds to the top-left corner of the area to modify. brush TerrainBrush The shape and size of the area to the lower-right of offset to modify. oldData byte[,] An array to be filled with data from HeightMap before the modification. Both dimensions must be equal to Size. newData byte[,] An array to be filled with data from HeightMap after the modification. Both dimensions must be equal to Size."
  },
  "api/AlphaFramework.Editor.World.TerrainModifiers.Texture.html": {
    "href": "api/AlphaFramework.Editor.World.TerrainModifiers.Texture.html",
    "title": "Class Texture | OmegaEngine",
    "summary": "Class Texture Namespace AlphaFramework.Editor.World.TerrainModifiers Assembly AlphaFramework.Editor.dll Interactively changes the texture ID of an area on a ITerrain. public sealed class Texture : Base Inheritance object Base Texture Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Texture(ITerrain, Action, byte) Creates a new texture index modifier. public Texture(ITerrain terrain, Action refreshHandler, byte textureID) Parameters terrain ITerrain The ITerrain to modify. refreshHandler Action Called when the Terrain needs to be reset. textureID byte The new texture ID to set. Methods Apply(Vector2, TerrainBrush) Applies and accumulates a modification to the Terrain. public override void Apply(Vector2 terrainCoords, TerrainBrush brush) Parameters terrainCoords Vector2 The center coordinates of the area to modify in world space. brush TerrainBrush The shape and size of the area around terrainCoords to modify. GetCommand() Creates a pre-executed undo command representing the accumulated Apply(Vector2, TerrainBrush) calls to this instance. public override IUndoCommand GetCommand() Returns IUndoCommand"
  },
  "api/AlphaFramework.Editor.World.TerrainModifiers.html": {
    "href": "api/AlphaFramework.Editor.World.TerrainModifiers.html",
    "title": "Namespace AlphaFramework.Editor.World.TerrainModifiers | OmegaEngine",
    "summary": "Namespace AlphaFramework.Editor.World.TerrainModifiers Classes Base Abstract base class for interactively modifying a Terrain. Height Abstract base class for interactively changing the height of an area on a ITerrain. HeightNoise Interactively adds height noise to a ITerrain. HeightPlateau Interactively turns a ITerrain area into a plateau (all points have the same height). HeightShift Interactively raises or lowers all points of an area on a ITerrain. HeightSmooth Interactively smoothes a ITerrain area using a Gaussian filter. Texture Interactively changes the texture ID of an area on a ITerrain."
  },
  "api/AlphaFramework.Editor.World.html": {
    "href": "api/AlphaFramework.Editor.World.html",
    "title": "Namespace AlphaFramework.Editor.World | OmegaEngine",
    "summary": "Namespace AlphaFramework.Editor.World Namespaces AlphaFramework.Editor.World.Commands AlphaFramework.Editor.World.Dialogs AlphaFramework.Editor.World.TerrainModifiers Classes TemplateEditor<T> Abstract base tab for editing Template<TSelf>es"
  },
  "api/AlphaFramework.Editor.html": {
    "href": "api/AlphaFramework.Editor.html",
    "title": "Namespace AlphaFramework.Editor | OmegaEngine",
    "summary": "Namespace AlphaFramework.Editor Toolkit for creating IDE-like editors for games based on OmegaEngine and AlphaFramework. You can use it to create GUI dialogs, maps, particle systems, etc. for your game. NuGet package: AlphaEditor Namespaces AlphaFramework.Editor.Graphics AlphaFramework.Editor.Gui AlphaFramework.Editor.Properties AlphaFramework.Editor.World Classes AboutBox A standard about box with application version information. AsyncWaitDialog Displays a \"Loading...\" dialog box in a separate GUI thread for cases where the main message pump is blocked. FileSelectorDialog Allows the user to select a file for the Mod (stored in an Archive or a real file) MainFormBase An extendable basis for an editor main window. ModInfo Contains basic information about a mod. ModPackageDialog Allows the user to create a redistributable package of a Mod ModPropertyDialog Displays and edits information about a mod. Can also be used to create a new mod. ModSelectorForm Allows the user to select a Mod to edit Tab A base class for all editor windows that can be displayed as tabs UndoCloneTab<T> A base class for all editor windows that have undo-functionality based on cloning their whole content UndoCommandTab A base class for all editor windows that have undo-functionality based on IUndoCommand logging (using the command pattern) UndoTab<T> A base class for all editor windows that have undo-functionality Interfaces IToastProvider Provides a surface for displaying toas messages to the user."
  },
  "api/AlphaFramework.Presentation.Arguments.html": {
    "href": "api/AlphaFramework.Presentation.Arguments.html",
    "title": "Class Arguments | OmegaEngine",
    "summary": "Class Arguments Namespace AlphaFramework.Presentation Assembly AlphaFramework.Presentation.dll An immutable class representing command-line arguments passed to an application. public class Arguments Inheritance object Arguments Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Arguments(string[]) Creates a new arguments instance based on the argument array from a Main method. public Arguments(string[] args) Parameters args string[] The array of arguments. Properties Commands A list of all commands without leading slash or hyphen in the arguments. public IEnumerable<string> Commands { get; } Property Value IEnumerable<string> Files A list of all file names in the arguments. public IEnumerable<string> Files { get; } Property Value IEnumerable<string> this[string] Gets the options for a specific command in the arguments. public string? this[string command] { get; } Parameters command string The command to get the options for. Property Value string The options for command if any; null otherwise. Methods Contains(string) Determines whether a specific command is contained in the arguments. public bool Contains(string command) Parameters command string The command to check for. Returns bool True if the command was set; false otherwise. ToString() Returns the arguments stored in this instance. public override string ToString() Returns string"
  },
  "api/AlphaFramework.Presentation.Config.DisplaySettings.html": {
    "href": "api/AlphaFramework.Presentation.Config.DisplaySettings.html",
    "title": "Class DisplaySettings | OmegaEngine",
    "summary": "Class DisplaySettings Namespace AlphaFramework.Presentation.Config Assembly AlphaFramework.Presentation.dll Stores display settings (resolution, etc.). Changes here require the engine to be reset. public sealed class DisplaySettings Inheritance object DisplaySettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties AntiAliasing The level of anti aliasing to use public int AntiAliasing { get; set; } Property Value int AntiAliasingText The level of anti aliasing to use - as a string followed by an x [Browsable(false)] public string AntiAliasingText { get; set; } Property Value string ForceShaderModel Forces the usage of a certain shader model version without checking the hardware capabilities - requires restart to become effective public string? ForceShaderModel { get; set; } Property Value string Fullscreen Run game in fullscreen mode public bool Fullscreen { get; set; } Property Value bool Resolution The monitor resolution for fullscreen mode public Size Resolution { get; set; } Property Value Size ResolutionText The monitor resolution for fullscreen mode - as a string followed with an x between the components [Browsable(false)] public string ResolutionText { get; set; } Property Value string VSync Synchronize the framerate with the monitor's refresh rate public bool VSync { get; set; } Property Value bool WindowSize The size of the render window public Size WindowSize { get; set; } Property Value Size Methods ToEngineConfig(Size?) Generates EngineConfig from the settings. public EngineConfig ToEngineConfig(Size? windowClientSize) Parameters windowClientSize Size? The client size if running in windowed mode; null if running in fullscreen mode. Returns EngineConfig Events Changed Occurs when a setting in this group is changed. public event Action Changed Event Type Action See Also Display"
  },
  "api/AlphaFramework.Presentation.Config.EditorSettings.html": {
    "href": "api/AlphaFramework.Presentation.Config.EditorSettings.html",
    "title": "Class EditorSettings | OmegaEngine",
    "summary": "Class EditorSettings Namespace AlphaFramework.Presentation.Config Assembly AlphaFramework.Presentation.dll Stores settings for the game's editor. public sealed class EditorSettings Inheritance object EditorSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors EditorSettings() public EditorSettings() Properties EditBase May the user edit the base game? public bool EditBase { get; set; } Property Value bool RecentMods A list of mod directories recently opened by the editor public Collection<string> RecentMods { get; } Property Value Collection<string> ShowWelcomeMessage Show the welcome message on startup public bool ShowWelcomeMessage { get; set; } Property Value bool Events Changed Occurs when a setting in this group is changed. public event Action Changed Event Type Action See Also Editor"
  },
  "api/AlphaFramework.Presentation.Config.GeneralSettings.html": {
    "href": "api/AlphaFramework.Presentation.Config.GeneralSettings.html",
    "title": "Class GeneralSettings | OmegaEngine",
    "summary": "Class GeneralSettings Namespace AlphaFramework.Presentation.Config Assembly AlphaFramework.Presentation.dll Stores general game settings (UI language, difficulty level, etc.). public sealed class GeneralSettings Inheritance object GeneralSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties ContentDir Path to the directory to load the game content from public string? ContentDir { get; set; } Property Value string Language The current game language public string? Language { get; set; } Property Value string Events Changed Occurs when a setting in this group is changed. public event Action Changed Event Type Action See Also General"
  },
  "api/AlphaFramework.Presentation.Config.GraphicsSettings.html": {
    "href": "api/AlphaFramework.Presentation.Config.GraphicsSettings.html",
    "title": "Class GraphicsSettings | OmegaEngine",
    "summary": "Class GraphicsSettings Namespace AlphaFramework.Presentation.Config Assembly AlphaFramework.Presentation.dll Stores graphics settings (effect details, etc.). Changes here don't require the engine to be reset. public sealed class GraphicsSettings Inheritance object GraphicsSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Anisotropic Use anisotropic texture filtering public bool Anisotropic { get; set; } Property Value bool DoubleSampling Sample textures twice with different texture coordinates for better image quality public bool DoubleSampling { get; set; } Property Value bool Fading Fade in game scenes from black public bool Fading { get; set; } Property Value bool NormalMapping Apply normal mapping effects to models when available public bool NormalMapping { get; set; } Property Value bool PostScreenEffects Apply post-screen effects to the scene public bool PostScreenEffects { get; set; } Property Value bool TerrainBlockSize The size of a terrain rendering block public int TerrainBlockSize { get; set; } Property Value int WaterEffects What kind of effects to display on water (e.g. reflections) public WaterEffectsType WaterEffects { get; set; } Property Value WaterEffectsType Methods ApplyTo(Engine) Applies the settings to the engine. public void ApplyTo(Engine engine) Parameters engine Engine Events Changed Occurs when a setting in this group is changed. public event Action Changed Event Type Action See Also Graphics"
  },
  "api/AlphaFramework.Presentation.Config.SettingsBase.html": {
    "href": "api/AlphaFramework.Presentation.Config.SettingsBase.html",
    "title": "Class SettingsBase | OmegaEngine",
    "summary": "Class SettingsBase Namespace AlphaFramework.Presentation.Config Assembly AlphaFramework.Presentation.dll Common settings used by most AlphaFramework applications. public abstract class SettingsBase Inheritance object SettingsBase Derived Settings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Display Stores display settings (resolution, etc.). Changes here require the engine to be reset. public DisplaySettings Display { get; set; } Property Value DisplaySettings Editor Stores settings for the game's editor. public EditorSettings Editor { get; set; } Property Value EditorSettings General Stores general game settings (UI language, difficulty level, etc.). public GeneralSettings General { get; set; } Property Value GeneralSettings Graphics Stores graphics settings (effect details, etc.). Changes here don't require the engine to be reset. public GraphicsSettings Graphics { get; set; } Property Value GraphicsSettings Methods AddChangeHandler(Action) Registers a handler to be invoked when any of the settings have been changed. protected virtual void AddChangeHandler(Action handler) Parameters handler Action"
  },
  "api/AlphaFramework.Presentation.Config.html": {
    "href": "api/AlphaFramework.Presentation.Config.html",
    "title": "Namespace AlphaFramework.Presentation.Config | OmegaEngine",
    "summary": "Namespace AlphaFramework.Presentation.Config Classes DisplaySettings Stores display settings (resolution, etc.). Changes here require the engine to be reset. EditorSettings Stores settings for the game's editor. GeneralSettings Stores general game settings (UI language, difficulty level, etc.). GraphicsSettings Stores graphics settings (effect details, etc.). Changes here don't require the engine to be reset. SettingsBase Common settings used by most AlphaFramework applications."
  },
  "api/AlphaFramework.Presentation.CoordinatePresenter-2.html": {
    "href": "api/AlphaFramework.Presentation.CoordinatePresenter-2.html",
    "title": "Class CoordinatePresenter<TUniverse, TCoordinates> | OmegaEngine",
    "summary": "Class CoordinatePresenter<TUniverse, TCoordinates> Namespace AlphaFramework.Presentation Assembly AlphaFramework.Presentation.dll Uses the Engine to present a CoordinateUniverse<TCoordinates> game world. public abstract class CoordinatePresenter<TUniverse, TCoordinates> : PresenterBase<TUniverse>, IPresenter<TUniverse>, IDisposable where TUniverse : CoordinateUniverse<TCoordinates> where TCoordinates : struct Type Parameters TUniverse The type of universe to present. TCoordinates Data type for storing position coordinates of objects in the game world. Inheritance object PresenterBase<TUniverse> CoordinatePresenter<TUniverse, TCoordinates> Implements IPresenter<TUniverse> IDisposable Derived Presenter Inherited Members PresenterBase<TUniverse>.Engine PresenterBase<TUniverse>.Scene PresenterBase<TUniverse>.View PresenterBase<TUniverse>.Universe PresenterBase<TUniverse>.Initialized PresenterBase<TUniverse>.HookIn() PresenterBase<TUniverse>.HookOut() PresenterBase<TUniverse>.SkyboxFileFormat PresenterBase<TUniverse>.DimDown() PresenterBase<TUniverse>.DimUp() PresenterBase<TUniverse>.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors CoordinatePresenter(Engine, TUniverse) Creates a new presenter. protected CoordinatePresenter(Engine engine, TUniverse universe) Parameters engine Engine The engine to use for rendering. universe TUniverse The game world to present. Fields LightsSync Maps between Positionables and Lights. protected readonly ModelViewSync<Positionable<TCoordinates>, LightSource> LightsSync Field Value ModelViewSync<Positionable<TCoordinates>, LightSource> RenderablesSync Maps between Positionables and Positionables. protected readonly ModelViewSync<Positionable<TCoordinates>, PositionableRenderable> RenderablesSync Field Value ModelViewSync<Positionable<TCoordinates>, PositionableRenderable> Properties BoundingBoxEntities Visualize the bounding boxes of all entities public bool BoundingBoxEntities { get; set; } Property Value bool BoundingSphereEntities Visualize the bounding spheres of all entities public bool BoundingSphereEntities { get; set; } Property Value bool WireframeEntities Render all entities in wireframe-mode public bool WireframeEntities { get; set; } Property Value bool Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. Initialize() Generate Renderables from the Universe and keeps everything in sync using events public override void Initialize() Remarks Should be called before HookIn() is used Exceptions FileNotFoundException A required Asset file could not be found. IOException There was an error reading an Asset file. InvalidDataException An Asset file contains invalid data. RegisterRenderablesSync() Hook to configure RenderablesSync and LightsSync. protected virtual void RegisterRenderablesSync()"
  },
  "api/AlphaFramework.Presentation.GameBase.html": {
    "href": "api/AlphaFramework.Presentation.GameBase.html",
    "title": "Class GameBase | OmegaEngine",
    "summary": "Class GameBase Namespace AlphaFramework.Presentation Assembly AlphaFramework.Presentation.dll Base class for building a game using AlphaFramework. Handles basic engine and GUI setup. public abstract class GameBase : RenderHost, IDisposable Inheritance object RenderHost GameBase Implements IDisposable Derived Game Inherited Members RenderHost.Form RenderHost.Disposed RenderHost.Engine RenderHost.Fullscreen RenderHost.Loading RenderHost.Dispose() RenderHost.Crash() RenderHost.Exit() RenderHost.ToFullscreen() RenderHost.ToWindowed(Size) RenderHost.UpdateStatus(string) RenderHost.KeyboardInputProvider RenderHost.MouseInputProvider RenderHost.TouchInputProvider RenderHost.AddInputReceiver(IInputReceiver) RenderHost.RemoveInputReceiver(IInputReceiver) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors GameBase(SettingsBase, string, Icon?, Image?, bool) Base class for building a game using AlphaFramework. Handles basic engine and GUI setup. protected GameBase(SettingsBase settings, string name, Icon? icon = null, Image? background = null, bool stretch = false) Parameters settings SettingsBase Settings for the game name string The name of the application for the title bar icon Icon The icon of the application for the title bar background Image A background image for the window while loading stretch bool Stretch background to fit the screen? (false will center it instead) Properties GuiManager Manages all GUI dialogs displayed in the game [LuaHide] public GuiManager GuiManager { get; } Property Value GuiManager Exceptions InvalidOperationException Run() has not been called yet. Methods ApplyGraphicsSettings() Called when graphics settings from an external source need to be applied to the Engine protected override void ApplyGraphicsSettings() BuildEngineConfig(bool) Called to generate an EngineConfig based on external settings protected override EngineConfig BuildEngineConfig(bool fullscreen) Parameters fullscreen bool Shall the configuration be generated for fullscreen mode? Returns EngineConfig Debug() Called when the debug form is to be displayed [LuaHide] public override void Debug() Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. GetElapsedGameTime(double) Determines the amount of elapsed game time from the amount of elapsed real time. protected virtual double GetElapsedGameTime(double elapsedTime) Parameters elapsedTime double Returns double Initialize() To be called after the window is ready and the Engine needs to be set up protected override bool Initialize() Returns bool true if the initialization worked, false if it failed and the app must be closed LoadDialog(string) Loads and displays a new dialog. [LuaGlobal(Description = \"Loads and displays a new dialog.\")] public DialogRenderer LoadDialog(string name) Parameters name string The XML file to load from. Returns DialogRenderer The newly created dialog. LoadModalDialog(string) Loads and displays a new modal (exclusively focused) dialog. [LuaGlobal(Description = \"Loads and displays a new modal (exclusively focused) dialog.\")] public DialogRenderer LoadModalDialog(string name) Parameters name string The XML file to load from. Returns DialogRenderer The newly created dialog. LoadSplashDialog(string) Loads a new exclusively displayed splash-screen dialog. [LuaGlobal(Description = \"Loads a new exclusive displayed splash-screen dialog.\")] public DialogRenderer LoadSplashDialog(string name) Parameters name string The XML file to load from Returns DialogRenderer The newly created dialog. Remarks Calling this method will close all other DialogRenderers. NewLua() Creates a new LuaInterface.Lua instance with commonly used objects preloaded. [LuaHide] public override Lua NewLua() Returns Lua Render(double) Called when the next frame needs to be rendered. protected override void Render(double elapsedTime) Parameters elapsedTime double The number of seconds that have passed since this method was last called. ResetEngine() Resets the Engine protected override void ResetEngine() Run() Shows the window and runs the render loop until Exit() is called. [LuaHide] public override void Run()"
  },
  "api/AlphaFramework.Presentation.IPresenter-1.html": {
    "href": "api/AlphaFramework.Presentation.IPresenter-1.html",
    "title": "Interface IPresenter<TUniverse> | OmegaEngine",
    "summary": "Interface IPresenter<TUniverse> Namespace AlphaFramework.Presentation Assembly AlphaFramework.Presentation.dll Maintains a View to present an IUniverse game world. public interface IPresenter<out TUniverse> : IDisposable where TUniverse : class, IUniverse Type Parameters TUniverse The type of universe to present. Inherited Members IDisposable.Dispose() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Universe The game world to present. TUniverse Universe { get; } Property Value TUniverse View The engine view used to display the Scene View View { get; } Property Value View Methods HookIn() Hooks the View into Views void HookIn() Remarks Will internally call Initialize() first, if you didn't HookOut() Hooks the View out of Views void HookOut() Initialize() Generate Renderables from the Universe and keeps everything in sync using events void Initialize() Remarks Should be called before HookIn() is used Exceptions FileNotFoundException A required Asset file could not be found. IOException There was an error reading an Asset file. InvalidDataException An Asset file contains invalid data."
  },
  "api/AlphaFramework.Presentation.PresenterBase-1.html": {
    "href": "api/AlphaFramework.Presentation.PresenterBase-1.html",
    "title": "Class PresenterBase<TUniverse> | OmegaEngine",
    "summary": "Class PresenterBase<TUniverse> Namespace AlphaFramework.Presentation Assembly AlphaFramework.Presentation.dll Uses the Engine to present an IUniverse game world. public abstract class PresenterBase<TUniverse> : IPresenter<TUniverse>, IDisposable where TUniverse : UniverseBase Type Parameters TUniverse The type of universe to present. Inheritance object PresenterBase<TUniverse> Implements IPresenter<TUniverse> IDisposable Derived CoordinatePresenter<TUniverse, TCoordinates> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PresenterBase(Engine, TUniverse) Uses the Engine to present an IUniverse game world. protected PresenterBase(Engine engine, TUniverse universe) Parameters engine Engine universe TUniverse Fields Engine The Engine reference to use for rendering operations protected readonly Engine Engine Field Value Engine Scene The engine scene containing the graphical representations of Positionable<TCoordinates>s protected readonly Scene Scene Field Value Scene Properties Initialized Was Initialize() already called? protected bool Initialized { get; } Property Value bool SkyboxFileFormat The file format (file ending without a dot) used to store skybox textures. protected virtual string SkyboxFileFormat { get; } Property Value string Universe The game world to present. [LuaHide] public TUniverse Universe { get; } Property Value TUniverse View The engine view used to display the Scene public View View { get; protected init; } Property Value View Methods DimDown() Dims in the screen down. public virtual void DimDown() DimUp() Dims in the screen back up. public virtual void DimUp() Dispose() Removes the Universe hooks setup by Initialize() and disposes all created Views, Scenes, PositionableRenderables, etc. public void Dispose() Dispose(bool) To be called by Dispose() and the object destructor. protected virtual void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. ~PresenterBase() protected ~PresenterBase() HookIn() Hooks the View into Views public virtual void HookIn() Remarks Will internally call Initialize() first, if you didn't HookOut() Hooks the View out of Views public virtual void HookOut() Initialize() Generate Renderables from the Universe and keeps everything in sync using events public virtual void Initialize() Remarks Should be called before HookIn() is used Exceptions FileNotFoundException A required Asset file could not be found. IOException There was an error reading an Asset file. InvalidDataException An Asset file contains invalid data."
  },
  "api/AlphaFramework.Presentation.html": {
    "href": "api/AlphaFramework.Presentation.html",
    "title": "Namespace AlphaFramework.Presentation | OmegaEngine",
    "summary": "Namespace AlphaFramework.Presentation Provides a basis for building presenters that visualize AlphaFramework.World-based game worlds using OmegaEngine.Graphics.Renderables. NuGet package: AlphaFramework.Presentation Namespaces AlphaFramework.Presentation.Config Classes Arguments An immutable class representing command-line arguments passed to an application. CoordinatePresenter<TUniverse, TCoordinates> Uses the Engine to present a CoordinateUniverse<TCoordinates> game world. GameBase Base class for building a game using AlphaFramework. Handles basic engine and GUI setup. PresenterBase<TUniverse> Uses the Engine to present an IUniverse game world. Interfaces IPresenter<TUniverse> Maintains a View to present an IUniverse game world."
  },
  "api/AlphaFramework.World.Components.AnimatedMesh.html": {
    "href": "api/AlphaFramework.World.Components.AnimatedMesh.html",
    "title": "Class AnimatedMesh | OmegaEngine",
    "summary": "Class AnimatedMesh Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Represents an animated mesh loaded from a file. public class AnimatedMesh : Mesh, ICloneable Inheritance object Render Mesh AnimatedMesh Implements ICloneable Inherited Members Mesh.Filename Mesh.ToString() Mesh.RotationX Mesh.RotationY Mesh.RotationZ Mesh.Scale Mesh.Alpha Mesh.Pickable Mesh.RenderIn Render.Shift Render.ShiftSpecified Render.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) See Also Render"
  },
  "api/AlphaFramework.World.Components.Collision-1.html": {
    "href": "api/AlphaFramework.World.Components.Collision-1.html",
    "title": "Class Collision<TCoordinates> | OmegaEngine",
    "summary": "Class Collision<TCoordinates> Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Controls how EntityBase<TCoordinates, TTemplate>s occupy space around them. public abstract class Collision<TCoordinates> : ICloneable where TCoordinates : struct Type Parameters TCoordinates Inheritance object Collision<TCoordinates> Implements ICloneable Derived Box Circle Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods Clone() Creates a copy of this Collision<TCoordinates>. public Collision<TCoordinates> Clone() Returns Collision<TCoordinates> The cloned Collision<TCoordinates>. CollisionTest(Quadrangle, float) Determines whether a certain area lies within the collision body. public abstract bool CollisionTest(Quadrangle area, float rotation) Parameters area Quadrangle The area to check for collision in entity space. rotation float How the collision body shall be rotated before performing the collision test. Returns bool true if area does collide with the body, false otherwise. CollisionTest(TCoordinates, float) Determines whether a certain point lies within the collision body. public abstract bool CollisionTest(TCoordinates point, float rotation) Parameters point TCoordinates The point to check for collision in entity space. rotation float How the collision body shall be rotated before performing the collision test. Returns bool true if point does collide with the body, false otherwise. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/AlphaFramework.World.Components.CpuParticleSystem.html": {
    "href": "api/AlphaFramework.World.Components.CpuParticleSystem.html",
    "title": "Class CpuParticleSystem | OmegaEngine",
    "summary": "Class CpuParticleSystem Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Represents a particle system whose particles are tracked by the CPU. public class CpuParticleSystem : ParticleSystem, ICloneable Inheritance object Render ParticleSystem CpuParticleSystem Implements ICloneable Inherited Members ParticleSystem.Filename ParticleSystem.ToString() ParticleSystem.VisibilityDistance Render.Shift Render.ShiftSpecified Render.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) See Also Render"
  },
  "api/AlphaFramework.World.Components.LightSource.html": {
    "href": "api/AlphaFramework.World.Components.LightSource.html",
    "title": "Class LightSource | OmegaEngine",
    "summary": "Class LightSource Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Represents a point light source. public class LightSource : Render, ICloneable Inheritance object Render LightSource Implements ICloneable Inherited Members Render.ToString() Render.Shift Render.ShiftSpecified Render.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Attenuation Factors describing the attenuation of light intensity over distance. public Attenuation Attenuation { get; set; } Property Value Attenuation Color The color of this point light source. [LuaHide] public Color Color { get; set; } Property Value Color Remarks Is not serialized/stored, ColorValue is used for that. ColorValue Used for XML serialization. [LuaHide] [Browsable(false)] public XColor ColorValue { get; set; } Property Value XColor See Also Color Range The maximum distance at which the light source has an effect. public float Range { get; set; } Property Value float See Also Render"
  },
  "api/AlphaFramework.World.Components.Mesh.html": {
    "href": "api/AlphaFramework.World.Components.Mesh.html",
    "title": "Class Mesh | OmegaEngine",
    "summary": "Class Mesh Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Represents a mesh loaded from a file. public abstract class Mesh : Render, ICloneable Inheritance object Render Mesh Implements ICloneable Derived AnimatedMesh StaticMesh Inherited Members Render.Shift Render.ShiftSpecified Render.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Alpha The level of transparency from 0 (solid) to 255 (invisible), 256 for alpha channel, -256 for binary alpha channel, 257 for additive blending. public int Alpha { get; set; } Property Value int Filename The filename of the mesh-file to use for rendering. public string? Filename { get; set; } Property Value string Pickable Can this mesh be picked with the mouse? public bool Pickable { get; set; } Property Value bool RenderIn In what kind of Views shall this mesh be rendered? public ViewType RenderIn { get; set; } Property Value ViewType RotationX How the mesh loaded from the file shall be rotated around the X axis (east to west). public float RotationX { get; set; } Property Value float RotationY How the mesh loaded from the file shall be rotated around the Y axis (top to bottom). public float RotationY { get; set; } Property Value float RotationZ How the mesh loaded from the file shall be rotated around the Z axis (north to south). public float RotationZ { get; set; } Property Value float Scale A factor by which to scale the mesh loaded from the file. public float Scale { get; set; } Property Value float Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. See Also Render"
  },
  "api/AlphaFramework.World.Components.Movement.html": {
    "href": "api/AlphaFramework.World.Components.Movement.html",
    "title": "Class Movement | OmegaEngine",
    "summary": "Class Movement Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Controls the basic movement parameters. public class Movement : ICloneable Inheritance object Movement Implements ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Speed How many units the EntityBase<TCoordinates, TTemplate> can walk per second. public float Speed { get; set; } Property Value float Methods Clone() Creates a shallow copy of this Movement public Movement Clone() Returns Movement The cloned Movement. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/AlphaFramework.World.Components.ParticleSystem.html": {
    "href": "api/AlphaFramework.World.Components.ParticleSystem.html",
    "title": "Class ParticleSystem | OmegaEngine",
    "summary": "Class ParticleSystem Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Represents a particle system (e.g. fire or steam) controlled by an XML preset. public abstract class ParticleSystem : Render, ICloneable Inheritance object Render ParticleSystem Implements ICloneable Derived CpuParticleSystem Inherited Members Render.Shift Render.ShiftSpecified Render.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Filename The filename of the XML particle system preset containing detailed settings. public string? Filename { get; set; } Property Value string VisibilityDistance How far this particle system should be visible. public float VisibilityDistance { get; set; } Property Value float Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. See Also Render"
  },
  "api/AlphaFramework.World.Components.Render.html": {
    "href": "api/AlphaFramework.World.Components.Render.html",
    "title": "Class Render | OmegaEngine",
    "summary": "Class Render Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Controls how an EntityBase<TCoordinates, TTemplate> shall be rendered. public abstract class Render : ICloneable Inheritance object Render Implements ICloneable Derived LightSource Mesh ParticleSystem TestSphere Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Shift How this component is to be shifted before rendering. public Vector3 Shift { get; set; } Property Value Vector3 ShiftSpecified Indicates whether Shift has been set to a non-default value. [Browsable(false)] public bool ShiftSpecified { get; set; } Property Value bool Methods Clone() Creates a shallow copy of this Render public Render Clone() Returns Render The cloned Render. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. See Also Render"
  },
  "api/AlphaFramework.World.Components.StaticMesh.html": {
    "href": "api/AlphaFramework.World.Components.StaticMesh.html",
    "title": "Class StaticMesh | OmegaEngine",
    "summary": "Class StaticMesh Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Represents a non-animated mesh loaded from a file. public class StaticMesh : Mesh, ICloneable Inheritance object Render Mesh StaticMesh Implements ICloneable Inherited Members Mesh.Filename Mesh.ToString() Mesh.RotationX Mesh.RotationY Mesh.RotationZ Mesh.Scale Mesh.Alpha Mesh.Pickable Mesh.RenderIn Render.Shift Render.ShiftSpecified Render.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) See Also Render"
  },
  "api/AlphaFramework.World.Components.TestSphere.html": {
    "href": "api/AlphaFramework.World.Components.TestSphere.html",
    "title": "Class TestSphere | OmegaEngine",
    "summary": "Class TestSphere Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll Renders a simple (optionally textured) sphere for benchmarks, etc. public class TestSphere : Render, ICloneable Inheritance object Render TestSphere Implements ICloneable Inherited Members Render.Shift Render.ShiftSpecified Render.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Alpha The level of transparency from 0 (solid) to 255 (invisible), 256 for alpha channel, -256 for binary alpha channel, 257 for additive blending. public int Alpha { get; set; } Property Value int Radius The radius of the sphere. public float Radius { get; set; } Property Value float Slices The number of vertical slices to divide the sphere into. public int Slices { get; set; } Property Value int Stacks The number of horizontal stacks to divide the sphere into. public int Stacks { get; set; } Property Value int Texture The filename of the texture to place on the sphere. public string? Texture { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. See Also Render"
  },
  "api/AlphaFramework.World.Components.ViewType.html": {
    "href": "api/AlphaFramework.World.Components.ViewType.html",
    "title": "Enum ViewType | OmegaEngine",
    "summary": "Enum ViewType Namespace AlphaFramework.World.Components Assembly AlphaFramework.World.dll public enum ViewType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields All = 0 Render in all types of Views GlowOnly = 3 Render only in Support Views for glow maps NormalOnly = 1 Do not render in Support Views SupportOnly = 2 Render only in Support Views See Also RenderIn"
  },
  "api/AlphaFramework.World.Components.html": {
    "href": "api/AlphaFramework.World.Components.html",
    "title": "Namespace AlphaFramework.World.Components | OmegaEngine",
    "summary": "Namespace AlphaFramework.World.Components Classes AnimatedMesh Represents an animated mesh loaded from a file. Collision<TCoordinates> Controls how EntityBase<TCoordinates, TTemplate>s occupy space around them. CpuParticleSystem Represents a particle system whose particles are tracked by the CPU. LightSource Represents a point light source. Mesh Represents a mesh loaded from a file. Movement Controls the basic movement parameters. ParticleSystem Represents a particle system (e.g. fire or steam) controlled by an XML preset. Render Controls how an EntityBase<TCoordinates, TTemplate> shall be rendered. StaticMesh Represents a non-animated mesh loaded from a file. TestSphere Renders a simple (optionally textured) sphere for benchmarks, etc. Enums ViewType"
  },
  "api/AlphaFramework.World.CoordinateUniverse-1.html": {
    "href": "api/AlphaFramework.World.CoordinateUniverse-1.html",
    "title": "Class CoordinateUniverse<TCoordinates> | OmegaEngine",
    "summary": "Class CoordinateUniverse<TCoordinates> Namespace AlphaFramework.World Assembly AlphaFramework.World.dll A common base for game worlds with objects in a coordinate system. public abstract class CoordinateUniverse<TCoordinates> : UniverseBase, IUniverse where TCoordinates : struct Type Parameters TCoordinates Data type for storing position coordinates of objects in the game world. Inheritance object UniverseBase CoordinateUniverse<TCoordinates> Implements IUniverse Derived Universe Inherited Members UniverseBase.SkyboxChanged UniverseBase.Skybox UniverseBase.GameTime UniverseBase.SourceFile UniverseBase.Save(string) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Pathfinder The pathfinding engine used to navigate Positionables. [Browsable(false)] public IPathfinder<TCoordinates>? Pathfinder { get; set; } Property Value IPathfinder<TCoordinates> Positionables A collection of all Positionable<TCoordinates>s in this CoordinateUniverse<TCoordinates>. [Browsable(false)] public abstract MonitoredCollection<Positionable<TCoordinates>> Positionables { get; } Property Value MonitoredCollection<Positionable<TCoordinates>> Methods Update(IUpdateable, double) Updates a single IUpdateable. protected virtual void Update(IUpdateable updateable, double elapsedGameTime) Parameters updateable IUpdateable elapsedGameTime double Update(double) Updates the universe. public override void Update(double elapsedGameTime) Parameters elapsedGameTime double How much game time in seconds has elapsed since this method was last called."
  },
  "api/AlphaFramework.World.IUniverse.html": {
    "href": "api/AlphaFramework.World.IUniverse.html",
    "title": "Interface IUniverse | OmegaEngine",
    "summary": "Interface IUniverse Namespace AlphaFramework.World Assembly AlphaFramework.World.dll A game world (but not a running game). Equivalent to the content of a map file. public interface IUniverse Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties GameTime Total elapsed game time in seconds. double GameTime { get; set; } Property Value double SourceFile The map file this world was loaded from. string? SourceFile { get; set; } Property Value string Remarks Is not serialized/stored, is set by whatever method loads the universe. Methods Save(string) Saves this CoordinateUniverse<TCoordinates> in a map file. void Save(string path) Parameters path string The file to save in. Exceptions IOException A problem occurred while writing the file. UnauthorizedAccessException Write access to the file is not permitted. Update(double) Updates the universe. void Update(double elapsedGameTime) Parameters elapsedGameTime double How much game time in seconds has elapsed since this method was last called."
  },
  "api/AlphaFramework.World.Paths.IPathfinder-1.html": {
    "href": "api/AlphaFramework.World.Paths.IPathfinder-1.html",
    "title": "Interface IPathfinder<TCoordinates> | OmegaEngine",
    "summary": "Interface IPathfinder<TCoordinates> Namespace AlphaFramework.World.Paths Assembly AlphaFramework.World.dll A strategy pattern interface for pathfinding algorithms. public interface IPathfinder<TCoordinates> where TCoordinates : struct Type Parameters TCoordinates Data type for storing position coordinates of objects in the game world. Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods FindPath(TCoordinates, TCoordinates) Calculates a path from source to target coordinates. IEnumerable<TCoordinates>? FindPath(TCoordinates start, TCoordinates target) Parameters start TCoordinates The starting coordinates. target TCoordinates The end coordinates. Returns IEnumerable<TCoordinates> A list of coordinates forming a path; null if no path was found."
  },
  "api/AlphaFramework.World.Paths.SimplePathfinder.html": {
    "href": "api/AlphaFramework.World.Paths.SimplePathfinder.html",
    "title": "Class SimplePathfinder | OmegaEngine",
    "summary": "Class SimplePathfinder Namespace AlphaFramework.World.Paths Assembly AlphaFramework.World.dll A simple A* pathfinder. public class SimplePathfinder : IPathfinder<Vector2> Inheritance object SimplePathfinder Implements IPathfinder<Vector2> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SimplePathfinder(bool[,]) Initializes a new pathfinder. public SimplePathfinder(bool[,] obstructionMap) Parameters obstructionMap bool[,] A 2D map of obstructed (untraversable) fields. Methods FindPath(Vector2, Vector2) Calculates a path from source to target coordinates. public IEnumerable<Vector2>? FindPath(Vector2 start, Vector2 target) Parameters start Vector2 The starting coordinates. target Vector2 The end coordinates. Returns IEnumerable<Vector2> A list of coordinates forming a path; null if no path was found."
  },
  "api/AlphaFramework.World.Paths.StoredPath-1.html": {
    "href": "api/AlphaFramework.World.Paths.StoredPath-1.html",
    "title": "Class StoredPath<TCoordinates> | OmegaEngine",
    "summary": "Class StoredPath<TCoordinates> Namespace AlphaFramework.World.Paths Assembly AlphaFramework.World.dll Stores a path calculated by Pathfinder. public class StoredPath<TCoordinates> : ICloneable where TCoordinates : struct Type Parameters TCoordinates Data type for storing position coordinates of objects in the game world. Inheritance object StoredPath<TCoordinates> Implements ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties PathNodes The path to walk. public Queue<TCoordinates> PathNodes { get; } Property Value Queue<TCoordinates> Target The final target of the pathfinding. public TCoordinates Target { get; set; } Property Value TCoordinates Methods Clone() Creates a shallow copy of this StoredPath<TCoordinates> public StoredPath<TCoordinates> Clone() Returns StoredPath<TCoordinates> The cloned StoredPath<TCoordinates>. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. See Also CurrentPath"
  },
  "api/AlphaFramework.World.Paths.html": {
    "href": "api/AlphaFramework.World.Paths.html",
    "title": "Namespace AlphaFramework.World.Paths | OmegaEngine",
    "summary": "Namespace AlphaFramework.World.Paths Classes SimplePathfinder A simple A* pathfinder. StoredPath<TCoordinates> Stores a path calculated by Pathfinder. Interfaces IPathfinder<TCoordinates> A strategy pattern interface for pathfinding algorithms."
  },
  "api/AlphaFramework.World.Positionables.EntityBase-2.html": {
    "href": "api/AlphaFramework.World.Positionables.EntityBase-2.html",
    "title": "Class EntityBase<TCoordinates, TTemplate> | OmegaEngine",
    "summary": "Class EntityBase<TCoordinates, TTemplate> Namespace AlphaFramework.World.Positionables Assembly AlphaFramework.World.dll A common base class for Positionable<TCoordinates> whose behaviour and graphical representation is controlled by components. public abstract class EntityBase<TCoordinates, TTemplate> : Positionable<TCoordinates>, ICloneable, IChangeNotify<Positionable<TCoordinates>>, IUpdateable, ITemplated where TCoordinates : struct where TTemplate : EntityTemplateBase<TTemplate> Type Parameters TCoordinates Data type for storing position coordinates of objects in the game world. TTemplate The specific type of EntityTemplateBase<TSelf> to use as a component container. Inheritance object Positionable<TCoordinates> EntityBase<TCoordinates, TTemplate> Implements ICloneable IChangeNotify<Positionable<TCoordinates>> IUpdateable ITemplated Derived Entity Inherited Members Positionable<TCoordinates>.Changed Positionable<TCoordinates>.OnChanged() Positionable<TCoordinates>.ChangedRebuild Positionable<TCoordinates>.OnChangedRebuild() Positionable<TCoordinates>.Name Positionable<TCoordinates>.Position object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties CurrentPath The path this entity is currently walking along. [Browsable(false)] public StoredPath<TCoordinates>? CurrentPath { get; set; } Property Value StoredPath<TCoordinates> TemplateData The TTemplate controlling the behavior and look for this EntityBase<TCoordinates, TTemplate>. [Browsable(false)] public TTemplate? TemplateData { get; set; } Property Value TTemplate Remarks This is always a clone of the original TTemplate. This is serialized/stored in savegames but not in map files! TemplateName The name of the TTemplate. public string? TemplateName { get; set; } Property Value string Remarks Setting this will overwrite TemplateData with a new clone of the appropriate TTemplate. This is serialized/stored in map files. It is also serialized/stored in savegames, but the value is ignored there (due to the attribute order)! Methods Clone() Creates a deep copy of this EntityBase<TCoordinates, TTemplate>. public override Positionable<TCoordinates> Clone() Returns Positionable<TCoordinates> The cloned EntityBase<TCoordinates, TTemplate>. MaskTemplateData() Makes all TemplateData values return null until Dispose() is called on the returned object. This is not thread-safe! public static IDisposable MaskTemplateData() Returns IDisposable ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Update(double) Updates the position and other attributes of this entity. public abstract void Update(double elapsedTime) Parameters elapsedTime double How much game time in seconds has elapsed since this method was last called."
  },
  "api/AlphaFramework.World.Positionables.ITemplated.html": {
    "href": "api/AlphaFramework.World.Positionables.ITemplated.html",
    "title": "Interface ITemplated | OmegaEngine",
    "summary": "Interface ITemplated Namespace AlphaFramework.World.Positionables Assembly AlphaFramework.World.dll An interface to elements that are based on a named template. public interface ITemplated Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties TemplateName The name of the template. string? TemplateName { get; set; } Property Value string"
  },
  "api/AlphaFramework.World.Positionables.IUpdateable.html": {
    "href": "api/AlphaFramework.World.Positionables.IUpdateable.html",
    "title": "Interface IUpdateable | OmegaEngine",
    "summary": "Interface IUpdateable Namespace AlphaFramework.World.Positionables Assembly AlphaFramework.World.dll A Positionable<TCoordinates> that updates itself on each frame. public interface IUpdateable Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods Update(double) Perform time-dependant state updates. void Update(double elapsedTime) Parameters elapsedTime double How much game time in seconds has elapsed since this method was last called."
  },
  "api/AlphaFramework.World.Positionables.Positionable-1.html": {
    "href": "api/AlphaFramework.World.Positionables.Positionable-1.html",
    "title": "Class Positionable<TCoordinates> | OmegaEngine",
    "summary": "Class Positionable<TCoordinates> Namespace AlphaFramework.World.Positionables Assembly AlphaFramework.World.dll An object that can be positioned in the game world. public abstract class Positionable<TCoordinates> : ICloneable, IChangeNotify<Positionable<TCoordinates>> where TCoordinates : struct Type Parameters TCoordinates Data type for storing position coordinates of objects in the game world. Inheritance object Positionable<TCoordinates> Implements ICloneable IChangeNotify<Positionable<TCoordinates>> Derived EntityBase<TCoordinates, TTemplate> Water CameraState<TCoordinates> Trigger Waypoint Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Name Used for identification in scripts, debugging, etc. public string? Name { get; set; } Property Value string Position The Positionable<TCoordinates>'s position. public TCoordinates Position { get; set; } Property Value TCoordinates Methods Clone() Creates a deep copy of this Positionable<TCoordinates>. public virtual Positionable<TCoordinates> Clone() Returns Positionable<TCoordinates> The cloned Positionable<TCoordinates>. OnChanged() To be called when a property relevant for rendering has changed. protected virtual void OnChanged() OnChangedRebuild() To be called when a property has changed, that requires visual representations to be rebuilt from scratch (usually a template). protected void OnChangedRebuild() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Events Changed Occurs when a property relevant for rendering has changed. public event Action<Positionable<TCoordinates>>? Changed Event Type Action<Positionable<TCoordinates>> ChangedRebuild Occurs when a property has changed that requires visual representations to rebuilt from scratch (usually a template). public event Action<Positionable<TCoordinates>>? ChangedRebuild Event Type Action<Positionable<TCoordinates>>"
  },
  "api/AlphaFramework.World.Positionables.Water.html": {
    "href": "api/AlphaFramework.World.Positionables.Water.html",
    "title": "Class Water | OmegaEngine",
    "summary": "Class Water Namespace AlphaFramework.World.Positionables Assembly AlphaFramework.World.dll A water plane spanning a certain part of the Terrain<TTemplate>. public class Water : Positionable<Vector2>, ICloneable, IChangeNotify<Positionable<Vector2>> Inheritance object Positionable<Vector2> Water Implements ICloneable IChangeNotify<Positionable<Vector2>> Inherited Members Positionable<Vector2>.Changed Positionable<Vector2>.OnChanged() Positionable<Vector2>.ChangedRebuild Positionable<Vector2>.OnChangedRebuild() Positionable<Vector2>.Name Positionable<Vector2>.ToString() Positionable<Vector2>.Position Positionable<Vector2>.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties EnginePosition The position of origin for this water in the engine coordinate system. [Browsable(false)] public DoubleVector3 EnginePosition { get; } Property Value DoubleVector3 Remarks World X = Engine +X World Y = Engine -Z World height = Engine +Y Height The height of the water above reference zero. public float Height { get; set; } Property Value float Size The size of the area of the ITerrain this water plane spans. public Vector2 Size { get; set; } Property Value Vector2 TraversableDepth The maximum depth an EntityBase<TCoordinates, TTemplate> can walk into this water. public float TraversableDepth { get; set; } Property Value float"
  },
  "api/AlphaFramework.World.Positionables.html": {
    "href": "api/AlphaFramework.World.Positionables.html",
    "title": "Namespace AlphaFramework.World.Positionables | OmegaEngine",
    "summary": "Namespace AlphaFramework.World.Positionables Classes EntityBase<TCoordinates, TTemplate> A common base class for Positionable<TCoordinates> whose behaviour and graphical representation is controlled by components. Positionable<TCoordinates> An object that can be positioned in the game world. Water A water plane spanning a certain part of the Terrain<TTemplate>. Interfaces ITemplated An interface to elements that are based on a named template. IUpdateable A Positionable<TCoordinates> that updates itself on each frame."
  },
  "api/AlphaFramework.World.Properties.Resources.html": {
    "href": "api/AlphaFramework.World.Properties.Resources.html",
    "title": "Class Resources | OmegaEngine",
    "summary": "Class Resources Namespace AlphaFramework.World.Properties Assembly AlphaFramework.World.dll A strongly-typed resource class, for looking up localized strings, etc. public class Resources Inheritance object Resources Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties CalculatingShadows Looks up a localized string similar to Calculating shadows. public static string CalculatingShadows { get; } Property Value string CalculationNotComplete Looks up a localized string similar to The calculation has not been completed yet.. public static string CalculationNotComplete { get; } Property Value string CoordinatesNotInRange Looks up a localized string similar to The coordinates are not within terrain range.. public static string CoordinatesNotInRange { get; } Property Value string Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo HeightMapSizeEqualTerrain Looks up a localized string similar to The height-map size must be equal to the terrain size.. public static string HeightMapSizeEqualTerrain { get; } Property Value string InvalidMapSize Looks up a localized string similar to The size of this texture map is incorrect.. public static string InvalidMapSize { get; } Property Value string NotLoaded Looks up a localized string similar to '{0}' has not been loaded yet.. public static string NotLoaded { get; } Property Value string OcclusionIntervalMapSizeEqualTerrain Looks up a localized string similar to The occlusion interval map size must be equal to the terrain size.. public static string OcclusionIntervalMapSizeEqualTerrain { get; } Property Value string ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager TerrainDataNotLoaded Looks up a localized string similar to The terrain data was not loaded correctly. The file is probably damaged.. public static string TerrainDataNotLoaded { get; } Property Value string TerrainSizeMultipleOfThree Looks up a localized string similar to The terrain size must be a multiple of three.. public static string TerrainSizeMultipleOfThree { get; } Property Value string TerrainTextureColorNotFound Looks up a localized string similar to A color in the texture-map has no according terrain class.. public static string TerrainTextureColorNotFound { get; } Property Value string TextureMapSizeThirdOfTerrain Looks up a localized string similar to The texture-map size must be 1/3 of the terrain size.. public static string TextureMapSizeThirdOfTerrain { get; } Property Value string"
  },
  "api/AlphaFramework.World.Properties.html": {
    "href": "api/AlphaFramework.World.Properties.html",
    "title": "Namespace AlphaFramework.World.Properties | OmegaEngine",
    "summary": "Namespace AlphaFramework.World.Properties Classes Resources A strongly-typed resource class, for looking up localized strings, etc."
  },
  "api/AlphaFramework.World.Session-1.html": {
    "href": "api/AlphaFramework.World.Session-1.html",
    "title": "Class Session<TUniverse> | OmegaEngine",
    "summary": "Class Session<TUniverse> Namespace AlphaFramework.World Assembly AlphaFramework.World.dll A common base for game sessions (i.e. a game actually being played). public class Session<TUniverse> where TUniverse : class, IUniverse Type Parameters TUniverse The specific type of IUniverse stored in the session. Inheritance object Session<TUniverse> Derived Session Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Session() Base-constructor for XML serialization. Do not call manually! protected Session() Session(TUniverse) Creates a new game session based upon a given universe protected Session(TUniverse baseUniverse) Parameters baseUniverse TUniverse The universe to base the new game session on. Properties MapSourceFile The filename of the map file the Universe was loaded from. public string? MapSourceFile { get; set; } Property Value string TimeWarpFactor The factor by which GameTime progression should be multiplied in relation to real time. public double TimeWarpFactor { get; set; } Property Value double Universe The current state of the game world. [LuaHide] public TUniverse Universe { get; set; } Property Value TUniverse Methods Save(string) Saves this session in an XML file (savegame). public virtual void Save(string path) Parameters path string The file to save in. Exceptions IOException A problem occurred while writing the file. UnauthorizedAccessException Write access to the file is not permitted. Update(double) Updates the underlying Universe. public virtual double Update(double elapsedRealTime) Parameters elapsedRealTime double How much real time in seconds has elapsed since this method was last called. Returns double The elapsed game time (real time multiplied by TimeWarpFactor)"
  },
  "api/AlphaFramework.World.Templates.EntityTemplateBase-1.html": {
    "href": "api/AlphaFramework.World.Templates.EntityTemplateBase-1.html",
    "title": "Class EntityTemplateBase<TSelf> | OmegaEngine",
    "summary": "Class EntityTemplateBase<TSelf> Namespace AlphaFramework.World.Templates Assembly AlphaFramework.World.dll A common base for entity templates (collection of components used as a prototype for constructing new entities). Defines the behavior and look for a certain class of EntityBase<TCoordinates, TTemplate>. public abstract class EntityTemplateBase<TSelf> : Template<TSelf>, INamed, IHighlightColor, ICloneable, IComparable<TSelf> where TSelf : EntityTemplateBase<TSelf> Type Parameters TSelf Inheritance object Template<TSelf> EntityTemplateBase<TSelf> Implements INamed IHighlightColor ICloneable IComparable<TSelf> Derived EntityTemplate Inherited Members Template<TSelf>.Name Template<TSelf>.HighlightColor Template<TSelf>.Description Template<TSelf>.ToString() Template<TSelf>.FileName Template<TSelf>.All Template<TSelf>.LoadAll() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Movement Controls the basic movement parameters. [Browsable(false)] public Movement? Movement { get; set; } Property Value Movement Render Controls how this class of entities shall be rendered. [Browsable(false)] public Collection<Render> Render { get; } Property Value Collection<Render> Methods Clone() Creates a deep copy of this EntityTemplateBase<TSelf>. public override TSelf Clone() Returns TSelf The cloned EntityTemplateBase<TSelf>."
  },
  "api/AlphaFramework.World.Templates.Template-1.html": {
    "href": "api/AlphaFramework.World.Templates.Template-1.html",
    "title": "Class Template<TSelf> | OmegaEngine",
    "summary": "Class Template<TSelf> Namespace AlphaFramework.World.Templates Assembly AlphaFramework.World.dll A set of data used as a prototype for constructing new objects at runtime. public abstract class Template<TSelf> : INamed, IHighlightColor, ICloneable, IComparable<TSelf> where TSelf : Template<TSelf> Type Parameters TSelf The type of the class itself. Inheritance object Template<TSelf> Implements INamed IHighlightColor ICloneable IComparable<TSelf> Derived EntityTemplateBase<TSelf> TerrainTemplate Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties All A list of all loaded Template<TSelf>s. public static NamedCollection<TSelf> All { get; } Property Value NamedCollection<TSelf> See Also LoadAll() Description A short English description of this class for developers. public string? Description { get; set; } Property Value string FileName The XML file Template<TSelf> instances are stored in. public static string FileName { get; } Property Value string HighlightColor The color to highlight this class with in list representations. Empty for no highlighting. [Browsable(false)] public Color HighlightColor { get; protected set; } Property Value Color Name The name of this class. Used in map files as a reference. Must be unique and is case-sensitive! public required string Name { get; set; } Property Value string Methods Clone() Creates a deep copy of this TSelf. public virtual TSelf Clone() Returns TSelf The cloned TSelf. LoadAll() Loads the list of Template<TSelf>s from FileName. public static void LoadAll() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/AlphaFramework.World.Templates.html": {
    "href": "api/AlphaFramework.World.Templates.html",
    "title": "Namespace AlphaFramework.World.Templates | OmegaEngine",
    "summary": "Namespace AlphaFramework.World.Templates Classes EntityTemplateBase<TSelf> A common base for entity templates (collection of components used as a prototype for constructing new entities). Defines the behavior and look for a certain class of EntityBase<TCoordinates, TTemplate>. Template<TSelf> A set of data used as a prototype for constructing new objects at runtime."
  },
  "api/AlphaFramework.World.Terrains.ITerrain.html": {
    "href": "api/AlphaFramework.World.Terrains.ITerrain.html",
    "title": "Interface ITerrain | OmegaEngine",
    "summary": "Interface ITerrain Namespace AlphaFramework.World.Terrains Assembly AlphaFramework.World.dll A common base for all ITerrain types. public interface ITerrain Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Center The world coordinates of the center of the terrain. [Browsable(false)] Vector2 Center { get; } Property Value Vector2 DataLoaded Was the minimum necessary data for the terrain (HeightMap and TextureMap) loaded already? [Browsable(false)] bool DataLoaded { get; } Property Value bool HeightMap Direct access to the internal height-map array. Handle with care; clone when necessary! [Browsable(false)] ByteGrid? HeightMap { get; set; } Property Value ByteGrid Remarks Is not serialized/stored, is loaded by LoadHeightMap(Stream). Exceptions InvalidOperationException The height-map size is incorrect. OcclusionIntervalMap Direct access to the internal occlusion interval map array. Handle with care; clone when necessary! [Browsable(false)] ByteVector4Grid? OcclusionIntervalMap { get; set; } Property Value ByteVector4Grid Remarks Is not serialized/stored, is loaded by LoadOcclusionIntervalMap(Stream). Exceptions InvalidOperationException The size is incorrect. OcclusionIntervalMapOutdated Indicates that the data stored in OcclusionIntervalMap is outdated and should be recalculated using OcclusionIntervalMapGenerator. bool OcclusionIntervalMapOutdated { get; set; } Property Value bool Size The size of the terrain. TerrainSize Size { get; set; } Property Value TerrainSize TextureMap Direct access to the internal height-map array. Handle with care; clone when necessary! [Browsable(false)] NibbleGrid? TextureMap { get; set; } Property Value NibbleGrid Remarks Is not serialized/stored, is loaded by LoadTextureMap(string). Exceptions InvalidOperationException The height-map size is incorrect. Methods LoadHeightMap(Stream) Loads data for HeightMap from a stream. [LuaHide] void LoadHeightMap(Stream stream) Parameters stream Stream The stream to read the height-map from. Exceptions IOException The height-map size is incorrect. LoadHeightMap(string) Loads data for HeightMap from a file. void LoadHeightMap(string path) Parameters path string The path of the PNG file to load the height-map from. Exceptions IOException The texture-map size is incorrect. LoadOcclusionIntervalMap(Stream) Loads data for OcclusionIntervalMap from a stream. [LuaHide] void LoadOcclusionIntervalMap(Stream stream) Parameters stream Stream The stream to read the occlusion interval map from. Exceptions IOException The occlusion interval map size is incorrect. LoadOcclusionIntervalMap(string) Loads data for OcclusionIntervalMap from a file. void LoadOcclusionIntervalMap(string path) Parameters path string The path of the PNG file to load the occlusion interval map from. Exceptions IOException The texture-map size is incorrect. LoadTextureMap(Stream) Loads data for TextureMap from a stream. [LuaHide] void LoadTextureMap(Stream stream) Parameters stream Stream The stream to read the texture-map from. Exceptions IOException The texture-map size is incorrect. LoadTextureMap(string) Loads data for TextureMap from a file. void LoadTextureMap(string path) Parameters path string The path of the PNG file to load the texture-map from. Exceptions IOException The texture-map size is incorrect. MarkUntraversableSlopes(bool[,], int) Marks untraversable slopes in a pathfinding \"obstruction map\". [LuaHide] void MarkUntraversableSlopes(bool[,] obstructionMap, int maxTraversableSlope) Parameters obstructionMap bool[,] The existing pathfinding \"obstruction map\" to mark the untraversable slopes in. maxTraversableSlope int The maximum slope to consider traversable."
  },
  "api/AlphaFramework.World.Terrains.OcclusionIntervalMapGenerator.html": {
    "href": "api/AlphaFramework.World.Terrains.OcclusionIntervalMapGenerator.html",
    "title": "Class OcclusionIntervalMapGenerator | OmegaEngine",
    "summary": "Class OcclusionIntervalMapGenerator Namespace AlphaFramework.World.Terrains Assembly AlphaFramework.World.dll Generates an occlusion interval map from a height map for a ITerrain as a background task. public class OcclusionIntervalMapGenerator : TaskBase, ITask Inheritance object MarshalByRefObject TaskBase OcclusionIntervalMapGenerator Implements ITask Inherited Members TaskBase.CancellationToken TaskBase.CredentialProvider TaskBase.Run(CancellationToken, ICredentialProvider, IProgress<TaskSnapshot>) TaskBase.Tag TaskBase.PreventIdle TaskBase.State TaskBase.UnitsProcessed TaskBase.UnitsTotal MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors OcclusionIntervalMapGenerator(ByteGrid, float, float, double) Prepares to calculate an occlusion interval map for a height-map. public OcclusionIntervalMapGenerator(ByteGrid heightMap, float stretchH = 1, float stretchV = 1, double lightSourceInclination = 90) Parameters heightMap ByteGrid The height-map data. This is not cloned and must not be modified during calculation! stretchH float A factor by which the terrain is horizontally stretched. stretchV float A factor by which the terrain is vertically stretched. lightSourceInclination double The angle of inclination of the sun's path away from the horizon in degrees. Properties CanCancel Indicates whether this task can be canceled once it has been started. public override bool CanCancel { get; } Property Value bool MaxDegreeOfParallelism Maximum number of threads to use for the computation. -1 to use ProcessorCount. public int MaxDegreeOfParallelism { get; set; } Property Value int Name A name describing the task in human-readable form. public override string Name { get; } Property Value string Result Returns the calculated occlusion end map array once the calculation is complete. public ByteVector4Grid Result { get; } Property Value ByteVector4Grid Remarks A light rise angle is the minimum vertical angle (0 = 0°, 255 = 90°) which a directional light must achieve to be not occluded. Exceptions InvalidOperationException The calculation is not complete yet. UnitsByte true if UnitsProcessed and UnitsTotal are measured in bytes; false if they are measured in generic units. protected override bool UnitsByte { get; } Property Value bool Methods Execute() The actual code to be executed. protected override void Execute() Remarks State is automatically set to Started before calling this method, to Complete after a successful exit and to an appropriate error state in case on an exception. You can set additional TaskStates during execution. Exceptions OperationCanceledException The operation was canceled. IOException The task ended with IOError. WebException The task ended with WebError. FromTerrain(ITerrain, double) Prepares to calculate an occlusion interval map for the height-map of a ITerrain. public static OcclusionIntervalMapGenerator FromTerrain(ITerrain terrain, double lightSourceInclination) Parameters terrain ITerrain The ITerrain providing the height-map. The height-map is not cloned and must not be modified during calculation! lightSourceInclination double The angle of inclination of the sun's path away from the horizon in degrees. Returns OcclusionIntervalMapGenerator The newly crated occlusion interval map generator. Remarks The results are not automatically written back to terrain. See Also OcclusionIntervalMap"
  },
  "api/AlphaFramework.World.Terrains.Terrain-1.html": {
    "href": "api/AlphaFramework.World.Terrains.Terrain-1.html",
    "title": "Class Terrain<TTemplate> | OmegaEngine",
    "summary": "Class Terrain<TTemplate> Namespace AlphaFramework.World.Terrains Assembly AlphaFramework.World.dll This class contains a height-map-based Terrain including texturing and pathfinding data. public sealed class Terrain<TTemplate> : ITerrain where TTemplate : Template<TTemplate> Type Parameters TTemplate The specific type of Template<TSelf> to use for storing information about terrain types. Inheritance object Terrain<TTemplate> Implements ITerrain Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks The positive X-axis points towards east (the direction from which light sources in the sky rise), the negative X-axis points towards west (the direction in which light sources in the sky set), the positive Y-axis points towards north and the negative Y-axis points towards south. Constructors Terrain() Base-constructor for XML serialization. Do not call manually! public Terrain() Terrain(TerrainSize) Creates a new terrain. It is completely flat and has only one texture initially. public Terrain(TerrainSize size) Parameters size TerrainSize The size of the terrain to create. Fields Templates The TTemplates available for usage in this ITerrain. public readonly TTemplate?[] Templates Field Value TTemplate[] Properties Center The world coordinates of the center of the terrain. [Browsable(false)] public Vector2 Center { get; } Property Value Vector2 DataLoaded Was the minimum necessary data for the terrain (HeightMap and TextureMap) loaded already? [Browsable(false)] public bool DataLoaded { get; } Property Value bool HeightMap Direct access to the internal height-map array. Handle with care; clone when necessary! [Browsable(false)] public ByteGrid? HeightMap { get; set; } Property Value ByteGrid Remarks Is not serialized/stored, is loaded by LoadHeightMap(Stream). Exceptions InvalidOperationException The height-map size is incorrect. OcclusionIntervalMap Direct access to the internal occlusion interval map array. Handle with care; clone when necessary! [Browsable(false)] public ByteVector4Grid? OcclusionIntervalMap { get; set; } Property Value ByteVector4Grid Remarks Is not serialized/stored, is loaded by LoadOcclusionIntervalMap(Stream). Exceptions InvalidOperationException The size is incorrect. OcclusionIntervalMapOutdated Indicates that the data stored in OcclusionIntervalMap is outdated and should be recalculated using OcclusionIntervalMapGenerator. public bool OcclusionIntervalMapOutdated { get; set; } Property Value bool Size The size of the terrain. public TerrainSize Size { get; set; } Property Value TerrainSize TemplateNames Used for XML serialization. [Browsable(false)] public string[]? TemplateNames { get; set; } Property Value string[] See Also Templates TextureMap Direct access to the internal height-map array. Handle with care; clone when necessary! [Browsable(false)] public NibbleGrid? TextureMap { get; set; } Property Value NibbleGrid Remarks Is not serialized/stored, is loaded by LoadTextureMap(string). Exceptions InvalidOperationException The height-map size is incorrect. Methods GetTerrainIndex(Vector2) Determines the TTemplate effective at specific coordinates. public byte GetTerrainIndex(Vector2 coordinates) Parameters coordinates Vector2 The world coordinates to check. Returns byte Exceptions InvalidOperationException The terrain data was not loaded yet. LoadHeightMap(Stream) Loads data for HeightMap from a stream. [LuaHide] public void LoadHeightMap(Stream stream) Parameters stream Stream The stream to read the height-map from. Exceptions IOException The height-map size is incorrect. LoadHeightMap(string) Loads data for HeightMap from a file. public void LoadHeightMap(string path) Parameters path string The path of the PNG file to load the height-map from. Exceptions IOException The texture-map size is incorrect. LoadOcclusionIntervalMap(Stream) Loads data for OcclusionIntervalMap from a stream. [LuaHide] public void LoadOcclusionIntervalMap(Stream stream) Parameters stream Stream The stream to read the occlusion interval map from. Exceptions IOException The occlusion interval map size is incorrect. LoadOcclusionIntervalMap(string) Loads data for OcclusionIntervalMap from a file. public void LoadOcclusionIntervalMap(string path) Parameters path string The path of the PNG file to load the occlusion interval map from. Exceptions IOException The texture-map size is incorrect. LoadTextureMap(Stream) Loads data for TextureMap from a stream. [LuaHide] public void LoadTextureMap(Stream stream) Parameters stream Stream The stream to read the texture-map from. Exceptions IOException The texture-map size is incorrect. LoadTextureMap(string) Loads data for TextureMap from a file. public void LoadTextureMap(string path) Parameters path string The path of the PNG file to load the texture-map from. Exceptions IOException The texture-map size is incorrect. MarkUntraversableSlopes(bool[,], int) Marks untraversable slopes in a pathfinding \"obstruction map\". [LuaHide] public void MarkUntraversableSlopes(bool[,] obstructionMap, int maxTraversableSlope) Parameters obstructionMap bool[,] The existing pathfinding \"obstruction map\" to mark the untraversable slopes in. maxTraversableSlope int The maximum slope to consider traversable. ToEngineCoords(Vector2) Converts a position in world coordinates to the engine entity space coordinate system. public DoubleVector3 ToEngineCoords(Vector2 coordinates) Parameters coordinates Vector2 The coordinates of the point in engine world space to get information for. Returns DoubleVector3"
  },
  "api/AlphaFramework.World.Terrains.TerrainBrush.html": {
    "href": "api/AlphaFramework.World.Terrains.TerrainBrush.html",
    "title": "Struct TerrainBrush | OmegaEngine",
    "summary": "Struct TerrainBrush Namespace AlphaFramework.World.Terrains Assembly AlphaFramework.World.dll Describes a square or circle terrain area that is to be modified. public readonly struct TerrainBrush Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TerrainBrush(int, bool) Creates a new modification area. public TerrainBrush(int size, bool circle) Parameters size int The length of the sqaure or the diameter of the circle. circle bool true if this is a circle, false if this is a sqaure. Fields Circle true if this is a circle, false if this is a sqaure. public readonly bool Circle Field Value bool Size The length of the sqaure or the diameter of the circle. public readonly int Size Field Value int Methods Contains(int, int) Checks whether specific 2D coordinates (relative to the top-left corner) lie within this modification area. public bool Contains(int x, int y) Parameters x int y int Returns bool Factor(int, int) Provides a scaling factor depending on how close specific 2D coordinates (relative to the top-left corner) lie to the modification area center. public double Factor(int x, int y) Parameters x int y int Returns double"
  },
  "api/AlphaFramework.World.Terrains.TerrainSize.html": {
    "href": "api/AlphaFramework.World.Terrains.TerrainSize.html",
    "title": "Struct TerrainSize | OmegaEngine",
    "summary": "Struct TerrainSize Namespace AlphaFramework.World.Terrains Assembly AlphaFramework.World.dll Contains information about the size of a ITerrain. public struct TerrainSize Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TerrainSize(int, int, float, float) Creates a new ITerrain point information struct. public TerrainSize(int x, int y, float stretchH = 1, float stretchV = 1) Parameters x int The size along the x-axis. y int The size along the y-axis. stretchH float A factor by which the terrain is horizontally stretched. stretchV float A factor by which the terrain is vertically stretched. Properties StretchH A factor by which the ITerrain is horizontally stretched. public float StretchH { readonly get; set; } Property Value float StretchV A factor by which the ITerrain is vertically stretched. public float StretchV { readonly get; set; } Property Value float X The size of the ITerrain along the X-axis. public int X { readonly get; set; } Property Value int Y The size of the ITerrain along the Y-axis. public int Y { readonly get; set; } Property Value int Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators implicit operator Size(TerrainSize) Convert TerrainSize into Size. public static implicit operator Size(TerrainSize size) Parameters size TerrainSize Returns Size implicit operator TerrainSize(Size) Convert Size into TerrainSize. public static implicit operator TerrainSize(Size size) Parameters size Size Returns TerrainSize See Also Size"
  },
  "api/AlphaFramework.World.Terrains.html": {
    "href": "api/AlphaFramework.World.Terrains.html",
    "title": "Namespace AlphaFramework.World.Terrains | OmegaEngine",
    "summary": "Namespace AlphaFramework.World.Terrains Classes OcclusionIntervalMapGenerator Generates an occlusion interval map from a height map for a ITerrain as a background task. Terrain<TTemplate> This class contains a height-map-based Terrain including texturing and pathfinding data. Structs TerrainBrush Describes a square or circle terrain area that is to be modified. TerrainSize Contains information about the size of a ITerrain. Interfaces ITerrain A common base for all ITerrain types."
  },
  "api/AlphaFramework.World.UniverseBase.html": {
    "href": "api/AlphaFramework.World.UniverseBase.html",
    "title": "Class UniverseBase | OmegaEngine",
    "summary": "Class UniverseBase Namespace AlphaFramework.World Assembly AlphaFramework.World.dll A common base for game worlds (but not a running game). Equivalent to the content of a map file. public abstract class UniverseBase : IUniverse Inheritance object UniverseBase Implements IUniverse Derived CoordinateUniverse<TCoordinates> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties GameTime Total elapsed game time in seconds. public double GameTime { get; set; } Property Value double Skybox The name of the skybox to use for this map; may be null or empty. public string? Skybox { get; set; } Property Value string SourceFile The map file this world was loaded from. [Browsable(false)] public string? SourceFile { get; set; } Property Value string Remarks Is not serialized/stored, is set by whatever method loads the universe. Methods Save(string) Saves this CoordinateUniverse<TCoordinates> in a map file. public virtual void Save(string path) Parameters path string The file to save in. Exceptions IOException A problem occurred while writing the file. UnauthorizedAccessException Write access to the file is not permitted. Update(double) Updates the universe. public virtual void Update(double elapsedGameTime) Parameters elapsedGameTime double How much game time in seconds has elapsed since this method was last called. Events SkyboxChanged Occurs when Skybox was changed. public event Action? SkyboxChanged Event Type Action"
  },
  "api/AlphaFramework.World.UniverseExtensions.html": {
    "href": "api/AlphaFramework.World.UniverseExtensions.html",
    "title": "Class UniverseExtensions | OmegaEngine",
    "summary": "Class UniverseExtensions Namespace AlphaFramework.World Assembly AlphaFramework.World.dll Contains extension methods for IUniverse. public static class UniverseExtensions Inheritance object UniverseExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Save(IUniverse) Overwrites the map file the universe was loaded from with the changed data. public static void Save(IUniverse universe) Parameters universe IUniverse Exceptions IOException A problem occurred while writing the file. UnauthorizedAccessException Write access to the file is not permitted."
  },
  "api/AlphaFramework.World.html": {
    "href": "api/AlphaFramework.World.html",
    "title": "Namespace AlphaFramework.World | OmegaEngine",
    "summary": "Namespace AlphaFramework.World Provides a basis for building engine-agnostic models of game worlds. NuGet package: AlphaFramework.World Namespaces AlphaFramework.World.Components AlphaFramework.World.Paths AlphaFramework.World.Positionables AlphaFramework.World.Properties AlphaFramework.World.Templates AlphaFramework.World.Terrains Classes CoordinateUniverse<TCoordinates> A common base for game worlds with objects in a coordinate system. Session<TUniverse> A common base for game sessions (i.e. a game actually being played). UniverseBase A common base for game worlds (but not a running game). Equivalent to the content of a map file. UniverseExtensions Contains extension methods for IUniverse. Interfaces IUniverse A game world (but not a running game). Equivalent to the content of a map file."
  },
  "api/AlphaFramework.html": {
    "href": "api/AlphaFramework.html",
    "title": "Namespace AlphaFramework | OmegaEngine",
    "summary": "Namespace AlphaFramework AlphaFramework is a Model-View-Presenter framework for creating game worlds with OmegaEngine. Namespaces AlphaFramework.Editor Toolkit for creating IDE-like editors for games based on OmegaEngine and AlphaFramework. You can use it to create GUI dialogs, maps, particle systems, etc. for your game. NuGet package: AlphaEditor AlphaFramework.Presentation Provides a basis for building presenters that visualize AlphaFramework.World-based game worlds using OmegaEngine.Graphics.Renderables. NuGet package: AlphaFramework.Presentation AlphaFramework.World Provides a basis for building engine-agnostic models of game worlds. NuGet package: AlphaFramework.World"
  },
  "api/FrameOfReference.Editor.MainForm.html": {
    "href": "api/FrameOfReference.Editor.MainForm.html",
    "title": "Class MainForm | OmegaEngine",
    "summary": "Class MainForm Namespace FrameOfReference.Editor Assembly FrameOfReference.Editor.dll The main window of the editor, container for the editor tabs. public sealed class MainForm : MainFormBase, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl, IToastProvider Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form MainFormBase MainForm Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl IToastProvider Inherited Members MainFormBase.Loading MainFormBase.ShowToast(string) Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors MainForm() Initializes a new instance of the Form class. public MainForm() Methods ChangeLanguage(string) Applies a new language to the editor GUI, game logic, etc.. protected override void ChangeLanguage(string language) Parameters language string A two-letter ISO language code. Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. LaunchGame(params string[]) Launches the main game with the currently active mod. protected override void LaunchGame(params string[] arguments) Parameters arguments string[] Additional arguments to be passed. Exceptions Win32Exception The game executable could not be launched. BadImageFormatException The game executable is damaged. Restart() Restarts the editor to allow the user to choose a different mod. protected override void Restart()"
  },
  "api/FrameOfReference.Editor.Program.html": {
    "href": "api/FrameOfReference.Editor.Program.html",
    "title": "Class Program | OmegaEngine",
    "summary": "Class Program Namespace FrameOfReference.Editor Assembly FrameOfReference.Editor.dll public static class Program Inheritance object Program Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields Restart Shall the application start from the beginning again? public static bool Restart Field Value bool Methods UpdateLocale() Updates the localization used by the application public static void UpdateLocale()"
  },
  "api/FrameOfReference.Editor.WelcomeForm.html": {
    "href": "api/FrameOfReference.Editor.WelcomeForm.html",
    "title": "Class WelcomeForm | OmegaEngine",
    "summary": "Class WelcomeForm Namespace FrameOfReference.Editor Assembly FrameOfReference.Editor.dll Displays an introduction text for new users public sealed class WelcomeForm : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form WelcomeForm Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.Activate() Form.AddOwnedForm(Form) Form.Close() Form.LayoutMdi(MdiLayout) Form.RemoveOwnedForm(Form) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HorizontalScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetPreferredSize(Size) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.Hide() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.IsKeyLocked(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.Refresh() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.Show() Control.SuspendLayout() Control.Update() Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultFont Control.DefaultForeColor Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.Enabled Control.Focused Control.Font Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.Right Control.RightToLeft Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.Container Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors WelcomeForm() Initializes a new instance of the Form class. public WelcomeForm() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/FrameOfReference.Editor.World.Commands.ImportXml.html": {
    "href": "api/FrameOfReference.Editor.World.Commands.ImportXml.html",
    "title": "Class ImportXml | OmegaEngine",
    "summary": "Class ImportXml Namespace FrameOfReference.Editor.World.Commands Assembly FrameOfReference.Editor.dll Loads new XML data into a Universe. public class ImportXml : ImportXmlBase<Universe>, IUndoCommand Inheritance object FirstExecuteCommand ImportXmlBase<Universe> ImportXml Implements IUndoCommand Inherited Members ImportXmlBase<Universe>.OnFirstExecute() ImportXmlBase<Universe>.OnRedo() ImportXmlBase<Universe>.OnUndo() FirstExecuteCommand.Execute() FirstExecuteCommand.Undo() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ImportXml(Func<Universe>, Action<Universe>, string, Action) Creates a new command for loading XML data into a Universe. public ImportXml(Func<Universe> getUniverse, Action<Universe> setUniverse, string xmlData, Action refreshHandler) Parameters getUniverse Func<Universe> Called to get the current Universe in the editor. setUniverse Action<Universe> Called to change the current Universe in the editor. xmlData string The XML string to parse. refreshHandler Action Called when the presenter needs to be reset. Methods TransferNonXmlData(Universe, Universe) Transfers any non-serialized data from oldUniverse to newUniverse. protected override void TransferNonXmlData(Universe oldUniverse, Universe newUniverse) Parameters oldUniverse Universe newUniverse Universe"
  },
  "api/FrameOfReference.Editor.World.Commands.html": {
    "href": "api/FrameOfReference.Editor.World.Commands.html",
    "title": "Namespace FrameOfReference.Editor.World.Commands | OmegaEngine",
    "summary": "Namespace FrameOfReference.Editor.World.Commands Classes ImportXml Loads new XML data into a Universe."
  },
  "api/FrameOfReference.Editor.World.EntityEditor.html": {
    "href": "api/FrameOfReference.Editor.World.EntityEditor.html",
    "title": "Class EntityEditor | OmegaEngine",
    "summary": "Class EntityEditor Namespace FrameOfReference.Editor.World Assembly FrameOfReference.Editor.dll Allows the user to edit EntityTemplates public class EntityEditor : EntityEditorDesignerShim, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<NamedCollection<EntityTemplate>> UndoCloneTab<NamedCollection<EntityTemplate>> TemplateEditor<EntityTemplate> EntityEditorDesignerShim EntityEditor Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members TemplateEditor<EntityTemplate>.TemplateList TemplateEditor<EntityTemplate>.OnSaveFile() TemplateEditor<EntityTemplate>.OnDelete() TemplateEditor<EntityTemplate>.Undo() TemplateEditor<EntityTemplate>.Redo() TemplateEditor<EntityTemplate>.splitVertical UndoCloneTab<NamedCollection<EntityTemplate>>.Content UndoCloneTab<NamedCollection<EntityTemplate>>.OnChange() UndoCloneTab<NamedCollection<EntityTemplate>>.OnUndo() UndoCloneTab<NamedCollection<EntityTemplate>>.OnRedo() UndoTab<NamedCollection<EntityTemplate>>.buttonUndo UndoTab<NamedCollection<EntityTemplate>>.buttonRedo UndoTab<NamedCollection<EntityTemplate>>.UndoBackups UndoTab<NamedCollection<EntityTemplate>>.RedoBackups Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors EntityEditor() Creates a new entity editor. public EntityEditor() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. OnInitialize() Called on startup to load the content for this tab from a file protected override void OnInitialize() OnNewTemplate() Called when the user wants a new EntityTemplate to be added. protected override void OnNewTemplate() OnUpdate() Called on startup, content updates and tab switch to refresh any on-screen displays protected override void OnUpdate()"
  },
  "api/FrameOfReference.Editor.World.EntityEditorDesignerShim.html": {
    "href": "api/FrameOfReference.Editor.World.EntityEditorDesignerShim.html",
    "title": "Class EntityEditorDesignerShim | OmegaEngine",
    "summary": "Class EntityEditorDesignerShim Namespace FrameOfReference.Editor.World Assembly FrameOfReference.Editor.dll Intermediate dummy class for TemplateEditor<T> to prevent WinForms designer confusion with generics public class EntityEditorDesignerShim : TemplateEditor<EntityTemplate>, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<NamedCollection<EntityTemplate>> UndoCloneTab<NamedCollection<EntityTemplate>> TemplateEditor<EntityTemplate> EntityEditorDesignerShim Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Derived EntityEditor Inherited Members TemplateEditor<EntityTemplate>.TemplateList TemplateEditor<EntityTemplate>.OnInitialize() TemplateEditor<EntityTemplate>.OnSaveFile() TemplateEditor<EntityTemplate>.OnDelete() TemplateEditor<EntityTemplate>.OnUpdate() TemplateEditor<EntityTemplate>.OnNewTemplate() TemplateEditor<EntityTemplate>.Undo() TemplateEditor<EntityTemplate>.Redo() TemplateEditor<EntityTemplate>.Dispose(bool) TemplateEditor<EntityTemplate>.splitVertical UndoCloneTab<NamedCollection<EntityTemplate>>.Content UndoCloneTab<NamedCollection<EntityTemplate>>.OnChange() UndoCloneTab<NamedCollection<EntityTemplate>>.OnUndo() UndoCloneTab<NamedCollection<EntityTemplate>>.OnRedo() UndoTab<NamedCollection<EntityTemplate>>.buttonUndo UndoTab<NamedCollection<EntityTemplate>>.buttonRedo UndoTab<NamedCollection<EntityTemplate>>.UndoBackups UndoTab<NamedCollection<EntityTemplate>>.RedoBackups Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[])"
  },
  "api/FrameOfReference.Editor.World.MapEditor.html": {
    "href": "api/FrameOfReference.Editor.World.MapEditor.html",
    "title": "Class MapEditor | OmegaEngine",
    "summary": "Class MapEditor Namespace FrameOfReference.Editor.World Assembly FrameOfReference.Editor.dll Allows the user to edit game maps public class MapEditor : UndoCommandTab, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<IUndoCommand> UndoCommandTab MapEditor Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members UndoCommandTab.ExecuteCommand(IUndoCommand) UndoCommandTab.ExecuteCommandSafe(IUndoCommand) UndoCommandTab.OnUndo() UndoCommandTab.OnRedo() UndoTab<IUndoCommand>.buttonUndo UndoTab<IUndoCommand>.buttonRedo UndoTab<IUndoCommand>.UndoBackups UndoTab<IUndoCommand>.RedoBackups UndoTab<IUndoCommand>.OnChange() Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors MapEditor(string, bool) Creates a new map editor. public MapEditor(string filePath, bool overwrite) Parameters filePath string The path to the file to be edited. overwrite bool true if an existing file supposed to be overwritten when SaveFile() is called. Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. OnDelete() Hook to delete the currently selected object in this tab protected override void OnDelete() OnInitialize() Called on startup to load the content for this tab. protected override void OnInitialize() Exceptions NotSupportedException An unsupported graphics card feature is used. FileNotFoundException A file could not be located. IOException There was a problem reading a file. UnauthorizedAccessException Read access to a file was denied. InvalidOperationException There was a problem inside the engine. InvalidDataException A file contained invalid data. OnSaveFile() Called when the content of this tab is to be saved to a file. protected override void OnSaveFile() Exceptions ArgumentException The file path is invalid. NotSupportedException The file path is invalid. IOException There was a problem writing a file. UnauthorizedAccessException Write access to a file was denied. OnUpdate() Called on startup, content updates and tab switch to refresh any on-screen displays protected override void OnUpdate() Redo() Hook to redo the last undone change public override void Redo() Undo() Hook to undo the last change public override void Undo()"
  },
  "api/FrameOfReference.Editor.World.TerrainEditor.html": {
    "href": "api/FrameOfReference.Editor.World.TerrainEditor.html",
    "title": "Class TerrainEditor | OmegaEngine",
    "summary": "Class TerrainEditor Namespace FrameOfReference.Editor.World Assembly FrameOfReference.Editor.dll Allows the user to edit TerrainTemplates public class TerrainEditor : TerrainEditorDesignerShim, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<NamedCollection<TerrainTemplate>> UndoCloneTab<NamedCollection<TerrainTemplate>> TemplateEditor<TerrainTemplate> TerrainEditorDesignerShim TerrainEditor Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members TemplateEditor<TerrainTemplate>.TemplateList TemplateEditor<TerrainTemplate>.OnInitialize() TemplateEditor<TerrainTemplate>.OnSaveFile() TemplateEditor<TerrainTemplate>.OnDelete() TemplateEditor<TerrainTemplate>.Undo() TemplateEditor<TerrainTemplate>.Redo() TemplateEditor<TerrainTemplate>.splitVertical UndoCloneTab<NamedCollection<TerrainTemplate>>.Content UndoCloneTab<NamedCollection<TerrainTemplate>>.OnChange() UndoCloneTab<NamedCollection<TerrainTemplate>>.OnUndo() UndoCloneTab<NamedCollection<TerrainTemplate>>.OnRedo() UndoTab<NamedCollection<TerrainTemplate>>.buttonUndo UndoTab<NamedCollection<TerrainTemplate>>.buttonRedo UndoTab<NamedCollection<TerrainTemplate>>.UndoBackups UndoTab<NamedCollection<TerrainTemplate>>.RedoBackups Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TerrainEditor() Creates a new terrain editor. public TerrainEditor() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. OnNewTemplate() Called when the user wants a new TerrainTemplate to be added. protected override void OnNewTemplate() OnUpdate() Called on startup, content updates and tab switch to refresh any on-screen displays protected override void OnUpdate()"
  },
  "api/FrameOfReference.Editor.World.TerrainEditorDesignerShim.html": {
    "href": "api/FrameOfReference.Editor.World.TerrainEditorDesignerShim.html",
    "title": "Class TerrainEditorDesignerShim | OmegaEngine",
    "summary": "Class TerrainEditorDesignerShim Namespace FrameOfReference.Editor.World Assembly FrameOfReference.Editor.dll Intermediate dummy class for TemplateEditor<T> to prevent WinForms designer confusion with generics public class TerrainEditorDesignerShim : TemplateEditor<TerrainTemplate>, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl Tab UndoTab<NamedCollection<TerrainTemplate>> UndoCloneTab<NamedCollection<TerrainTemplate>> TemplateEditor<TerrainTemplate> TerrainEditorDesignerShim Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Derived TerrainEditor Inherited Members TemplateEditor<TerrainTemplate>.TemplateList TemplateEditor<TerrainTemplate>.OnInitialize() TemplateEditor<TerrainTemplate>.OnSaveFile() TemplateEditor<TerrainTemplate>.OnDelete() TemplateEditor<TerrainTemplate>.OnUpdate() TemplateEditor<TerrainTemplate>.OnNewTemplate() TemplateEditor<TerrainTemplate>.Undo() TemplateEditor<TerrainTemplate>.Redo() TemplateEditor<TerrainTemplate>.Dispose(bool) TemplateEditor<TerrainTemplate>.splitVertical UndoCloneTab<NamedCollection<TerrainTemplate>>.Content UndoCloneTab<NamedCollection<TerrainTemplate>>.OnChange() UndoCloneTab<NamedCollection<TerrainTemplate>>.OnUndo() UndoCloneTab<NamedCollection<TerrainTemplate>>.OnRedo() UndoTab<NamedCollection<TerrainTemplate>>.buttonUndo UndoTab<NamedCollection<TerrainTemplate>>.buttonRedo UndoTab<NamedCollection<TerrainTemplate>>.UndoBackups UndoTab<NamedCollection<TerrainTemplate>>.RedoBackups Tab.TabClosed Tab._overwrite Tab._fullPath Tab.Changed Tab.ToastProvider Tab.NameUI Tab.FilePath Tab.FocusDefaultControl() Tab.OnClose() Tab.Open(IToastProvider) Tab.Hide() Tab.RequestClose() Tab.ForceClose() Tab.SaveFile() Tab.Delete() UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[])"
  },
  "api/FrameOfReference.Editor.World.html": {
    "href": "api/FrameOfReference.Editor.World.html",
    "title": "Namespace FrameOfReference.Editor.World | OmegaEngine",
    "summary": "Namespace FrameOfReference.Editor.World Namespaces FrameOfReference.Editor.World.Commands Classes EntityEditor Allows the user to edit EntityTemplates EntityEditorDesignerShim Intermediate dummy class for TemplateEditor<T> to prevent WinForms designer confusion with generics MapEditor Allows the user to edit game maps TerrainEditor Allows the user to edit TerrainTemplates TerrainEditorDesignerShim Intermediate dummy class for TemplateEditor<T> to prevent WinForms designer confusion with generics"
  },
  "api/FrameOfReference.Editor.html": {
    "href": "api/FrameOfReference.Editor.html",
    "title": "Namespace FrameOfReference.Editor | OmegaEngine",
    "summary": "Namespace FrameOfReference.Editor Namespaces FrameOfReference.Editor.World Classes MainForm The main window of the editor, container for the editor tabs. Program WelcomeForm Displays an introduction text for new users"
  },
  "api/FrameOfReference.Game.html": {
    "href": "api/FrameOfReference.Game.html",
    "title": "Class Game | OmegaEngine",
    "summary": "Class Game Namespace FrameOfReference Assembly FrameOfReference.dll Represents a running instance of the game public class Game : GameBase, IDisposable Inheritance object RenderHost GameBase Game Implements IDisposable Inherited Members GameBase.GuiManager GameBase.Render(double) GameBase.ResetEngine() GameBase.BuildEngineConfig(bool) GameBase.ApplyGraphicsSettings() GameBase.Debug() GameBase.LoadDialog(string) GameBase.LoadModalDialog(string) GameBase.LoadSplashDialog(string) RenderHost.Form RenderHost.Disposed RenderHost.Engine RenderHost.Fullscreen RenderHost.Loading RenderHost.Dispose() RenderHost.Crash() RenderHost.Exit() RenderHost.ToFullscreen() RenderHost.ToWindowed(Size) RenderHost.UpdateStatus(string) RenderHost.KeyboardInputProvider RenderHost.MouseInputProvider RenderHost.TouchInputProvider RenderHost.AddInputReceiver(IInputReceiver) RenderHost.RemoveInputReceiver(IInputReceiver) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Game(Settings) Represents a running instance of the game public Game(Settings settings) Parameters settings Settings Properties CurrentPresenter The currently active presenter [LuaHide] public Presenter? CurrentPresenter { get; } Property Value Presenter CurrentSession The current game session [LuaHide] public Session? CurrentSession { get; } Property Value Session CurrentState The current state of the game [LuaHide] public GameState CurrentState { get; } Property Value GameState Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. GetElapsedGameTime(double) Determines the amount of elapsed game time from the amount of elapsed real time. protected override double GetElapsedGameTime(double elapsedTime) Parameters elapsedTime double Returns double GetSavegameNames() Lists the names of all stored Sessions. public IEnumerable<string> GetSavegameNames() Returns IEnumerable<string> Initialize() To be called after the window is ready and the Engine needs to be set up protected override bool Initialize() Returns bool true if the initialization worked, false if it failed and the app must be closed LoadMap(string) Loads a game map into CurrentSession and switches the CurrentState to InGame public void LoadMap(string name) Parameters name string The name of the map to load LoadMenu(string) Loads a map into FrameOfReference.Game._menuUniverse and switches the CurrentState to Menu public void LoadMenu(string name) Parameters name string The name of the map to load LoadSavegame(string) Loads a savegame from user's profile to replace the CurrentSession. public void LoadSavegame(string name) Parameters name string The name of the savegame to load. ModifyMap(string) Loads a game map into CurrentSession and switches the CurrentState to Modify public void ModifyMap(string name) Parameters name string The name of the map to load NewLua() Creates a new LuaInterface.Lua instance with commonly used objects preloaded. [LuaHide] public override Lua NewLua() Returns Lua Run() Shows the window and runs the render loop until Exit() is called. [LuaHide] public override void Run() SaveSavegame(string) Saves the CurrentSession as a savegame stored in the user's profile. public void SaveSavegame(string name) Parameters name string The name of the savegame to write. SwitchToGame() Switches the game to in-game mode public void SwitchToGame() Remarks If CurrentState is already InGame, nothing will happen. Loading may take a while, subsequent calls will be a bit faster because the Engine cache will still be hot SwitchToMenu() Switches to the main menu public void SwitchToMenu() Remarks If CurrentState is already Menu, nothing will happen. Loading will take a while on first call, subsequent calls will be very fast, because FrameOfReference.Game._menuUniverse is preserved SwitchToModify() Switches the game to map modification mode public void SwitchToModify() Remarks If CurrentState is already Modify, nothing will happen. Loading may take a while, subsequent calls will be a bit faster because the Engine cache will still be hot TogglePause() Toggles CurrentState between InGame and Pause public void TogglePause() Remarks When called while CurrentState is neither InGame nor Pause nothing happens"
  },
  "api/FrameOfReference.GameState.html": {
    "href": "api/FrameOfReference.GameState.html",
    "title": "Enum GameState | OmegaEngine",
    "summary": "Enum GameState Namespace FrameOfReference Assembly FrameOfReference.dll public enum GameState Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Benchmark = 3 The game is running an automatic benchmark InGame = 4 The game is normal playing mode Init = 0 The game is starting up Menu = 1 The game is in the main menu Modify = 5 The game is in a special live editing mode Pause = 2 The game is paused See Also CurrentState"
  },
  "api/FrameOfReference.Presentation.BenchmarkPresenter.html": {
    "href": "api/FrameOfReference.Presentation.BenchmarkPresenter.html",
    "title": "Class BenchmarkPresenter | OmegaEngine",
    "summary": "Class BenchmarkPresenter Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll Performs rendering for the benchmark mode public sealed class BenchmarkPresenter : Presenter, IPresenter<Universe>, IDisposable Inheritance object PresenterBase<Universe> CoordinatePresenter<Universe, Vector2> Presenter BenchmarkPresenter Implements IPresenter<Universe> IDisposable Inherited Members Presenter.WireframeTerrain Presenter.Initialize() Presenter.Terrain Presenter.RebuildTerrain() Presenter.CameraState Presenter.DimDown() Presenter.DimUp() CoordinatePresenter<Universe, Vector2>.Initialize() CoordinatePresenter<Universe, Vector2>.WireframeEntities CoordinatePresenter<Universe, Vector2>.BoundingSphereEntities CoordinatePresenter<Universe, Vector2>.BoundingBoxEntities PresenterBase<Universe>.View PresenterBase<Universe>.Universe PresenterBase<Universe>.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors BenchmarkPresenter(Engine, Universe, Action<string>) Creates a new benchmark presenter public BenchmarkPresenter(Engine engine, Universe universe, Action<string> callback) Parameters engine Engine The engine to use for rendering universe Universe The universe to display callback Action<string> A delegate to execute after the benchmark is complete with the path of the result file Methods HookIn() Hooks the View into Views public override void HookIn() Remarks Will internally call Initialize() first, if you didn't HookOut() Hooks the View out of Views public override void HookOut()"
  },
  "api/FrameOfReference.Presentation.Config.ControlsSettings.html": {
    "href": "api/FrameOfReference.Presentation.Config.ControlsSettings.html",
    "title": "Class ControlsSettings | OmegaEngine",
    "summary": "Class ControlsSettings Namespace FrameOfReference.Presentation.Config Assembly FrameOfReference.Presentation.dll Stores settings for the user controls (mouse, keyboard, etc.). public sealed class ControlsSettings Inheritance object ControlsSettings Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties InvertMouse Invert the mouse axes public bool InvertMouse { get; set; } Property Value bool Events Changed Occurs when a setting in this group is changed. public event Action Changed Event Type Action See Also Controls"
  },
  "api/FrameOfReference.Presentation.Config.Settings.html": {
    "href": "api/FrameOfReference.Presentation.Config.Settings.html",
    "title": "Class Settings | OmegaEngine",
    "summary": "Class Settings Namespace FrameOfReference.Presentation.Config Assembly FrameOfReference.Presentation.dll Stores settings for the application public sealed class Settings : SettingsBase Inheritance object SettingsBase Settings Inherited Members SettingsBase.General SettingsBase.Display SettingsBase.Graphics SettingsBase.Editor object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Controls Stores settings for the user controls (mouse, keyboard, etc.). public ControlsSettings Controls { get; set; } Property Value ControlsSettings Current The currently active set of settings public static Settings Current { get; } Property Value Settings Methods AddChangeHandler(Action) Registers a handler to be invoked when any of the settings have been changed. protected override void AddChangeHandler(Action handler) Parameters handler Action Config() Displays a configuration interface for the settings, allowing easy manipulation of values public void Config() EnableAutoSave() Configures Current settings to be automatically saved when they are changed. public static void EnableAutoSave() LoadCurrent() Loads the current settings from an automatically located XML file [LuaGlobal(Name = \"LoadSettings\", Description = \"Loads the current settings from an automatically located XML file\")] public static Settings LoadCurrent() Returns Settings Remarks Any errors are logged and then ignored. SaveCurrent() Saves the current settings to an automatically located XML file [LuaGlobal(Name = \"SaveSettings\", Description = \"Saves the current settings to an automatically located XML file\")] public static void SaveCurrent() Remarks Any errors are logged and then ignored."
  },
  "api/FrameOfReference.Presentation.Config.html": {
    "href": "api/FrameOfReference.Presentation.Config.html",
    "title": "Namespace FrameOfReference.Presentation.Config | OmegaEngine",
    "summary": "Namespace FrameOfReference.Presentation.Config Classes ControlsSettings Stores settings for the user controls (mouse, keyboard, etc.). Settings Stores settings for the application"
  },
  "api/FrameOfReference.Presentation.EditorPresenter.html": {
    "href": "api/FrameOfReference.Presentation.EditorPresenter.html",
    "title": "Class EditorPresenter | OmegaEngine",
    "summary": "Class EditorPresenter Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll Displays a map for editing public sealed class EditorPresenter : InteractivePresenter, IPresenter<Universe>, IDisposable, IInputReceiver Inheritance object PresenterBase<Universe> CoordinatePresenter<Universe, Vector2> Presenter InteractivePresenter EditorPresenter Implements IPresenter<Universe> IDisposable IInputReceiver Inherited Members InteractivePresenter.SelectedPositionables InteractivePresenter.SwingCameraTo(CameraState<Vector2>) InteractivePresenter.SwingCameraTo(Vector2) InteractivePresenter.SwingCameraTo(PositionableRenderable) InteractivePresenter.TakeOverSelection() InteractivePresenter.PerspectiveChange(Point, int, int) InteractivePresenter.DoubleClick(MouseEventArgs) Presenter.WireframeTerrain Presenter.Terrain Presenter.RebuildTerrain() Presenter.CameraState Presenter.DimDown() Presenter.DimUp() CoordinatePresenter<Universe, Vector2>.Initialize() CoordinatePresenter<Universe, Vector2>.WireframeEntities CoordinatePresenter<Universe, Vector2>.BoundingSphereEntities CoordinatePresenter<Universe, Vector2>.BoundingBoxEntities PresenterBase<Universe>.View PresenterBase<Universe>.Universe PresenterBase<Universe>.HookIn() PresenterBase<Universe>.HookOut() PresenterBase<Universe>.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors EditorPresenter(Engine, Universe, bool) Creates a new editor presenter public EditorPresenter(Engine engine, Universe universe, bool lighting) Parameters engine Engine The engine to use for rendering universe Universe The universe to display lighting bool Shall lighting be used for rendering? Properties MaxCameraRadius The value for MaxRadius. protected override double MaxCameraRadius { get; } Property Value double TerrainBrush Controls the shape and size of the area that is visually highlighted for TerrainPainting. public TerrainBrush? TerrainBrush { get; set; } Property Value TerrainBrush? Remarks Raise the TerrainPaint event instead of selecting Positionable<TCoordinates>s when set to a value other than null. Methods AreaSelection(Rectangle, bool, bool) Called when the user is selecting an area on the screen. public override void AreaSelection(Rectangle area, bool accumulate, bool done) Parameters area Rectangle The selected area in pixels. The bottom-right corner is always the last point selected by the user, therefore the box may be inverted. accumulate bool true when the user wants the new selection to be added to the old one. done bool True when the user has finished his selection (e.g. released the mouse). Click(MouseEventArgs, bool) Called when the user clicked something (not dragged!). public override void Click(MouseEventArgs e, bool accumulate) Parameters e MouseEventArgs The original event arguments from the click. accumulate bool true when the user wants the action to have an accumulative effect (usually for selections). GetCollisionBox() Calculates a collision Box from the SlimDX.BoundingBoxs of pickable PositionableRenderables. public Box GetCollisionBox() Returns Box GetCollisionCircle() Calculates a collision Circle from the SlimDX.BoundingSpheres of pickable PositionableRenderables. public Circle GetCollisionCircle() Returns Circle Hover(Point) Called when the user is hovering above a point on the screen. public override void Hover(Point target) Parameters target Point The point the user is hovering over in pixels. Initialize() Generate Renderables from the Universe and keeps everything in sync using events public override void Initialize() Remarks Should be called before HookIn() is used Exceptions FileNotFoundException A required Asset file could not be found. IOException There was an error reading an Asset file. InvalidDataException An Asset file contains invalid data. MovePositionables(IEnumerable<Positionable<Vector2>>, Vector2) Informs observers that one or more Positionable<TCoordinates>s are to be moved to a new position. protected override void MovePositionables(IEnumerable<Positionable<Vector2>> positionables, Vector2 target) Parameters positionables IEnumerable<Positionable<Vector2>> The Positionable<TCoordinates>s to be moved. target Vector2 The terrain position to move the positionables to. Remarks This replaces InteractivePresenters pathfinding based movement with a callback event. RegisterRenderablesSync() Hook to configure RenderablesSync and LightsSync. protected override void RegisterRenderablesSync() Events PostionableMove Occurs when an Positionable<TCoordinates> is to be moved. public event PostionableMoveHandler? PostionableMove Event Type PostionableMoveHandler TerrainPaint Occurs when the user selects an area while TerrainBrush is set to a value other than null. Passes the coordinates in world space. public event TerrainPaint? TerrainPaint Event Type TerrainPaint"
  },
  "api/FrameOfReference.Presentation.InGamePresenter.html": {
    "href": "api/FrameOfReference.Presentation.InGamePresenter.html",
    "title": "Class InGamePresenter | OmegaEngine",
    "summary": "Class InGamePresenter Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll Main in-game interaction public sealed class InGamePresenter : InteractivePresenter, IPresenter<Universe>, IDisposable, IInputReceiver Inheritance object PresenterBase<Universe> CoordinatePresenter<Universe, Vector2> Presenter InteractivePresenter InGamePresenter Implements IPresenter<Universe> IDisposable IInputReceiver Inherited Members InteractivePresenter.Initialize() InteractivePresenter.SelectedPositionables InteractivePresenter.SwingCameraTo(CameraState<Vector2>) InteractivePresenter.SwingCameraTo(Vector2) InteractivePresenter.SwingCameraTo(PositionableRenderable) InteractivePresenter.TakeOverSelection() InteractivePresenter.PerspectiveChange(Point, int, int) InteractivePresenter.Hover(Point) InteractivePresenter.AreaSelection(Rectangle, bool, bool) InteractivePresenter.Click(MouseEventArgs, bool) InteractivePresenter.DoubleClick(MouseEventArgs) Presenter.WireframeTerrain Presenter.Terrain Presenter.RebuildTerrain() Presenter.CameraState Presenter.DimDown() Presenter.DimUp() CoordinatePresenter<Universe, Vector2>.Initialize() CoordinatePresenter<Universe, Vector2>.WireframeEntities CoordinatePresenter<Universe, Vector2>.BoundingSphereEntities CoordinatePresenter<Universe, Vector2>.BoundingBoxEntities PresenterBase<Universe>.View PresenterBase<Universe>.Universe PresenterBase<Universe>.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors InGamePresenter(Engine, Universe) Creates a new presenter for the actual running game public InGamePresenter(Engine engine, Universe universe) Parameters engine Engine The engine to use for rendering universe Universe The universe to display Methods HookIn() Hooks the View into Views public override void HookIn() Remarks Will internally call Initialize() first, if you didn't HookOut() Hooks the View out of Views public override void HookOut() LockOn(string) Sets SelectedPositionables to a single specific Entity and forces the Camera to stay close to it. public void LockOn(string name) Parameters name string The Name of a Entity stored in the Universe. MovePositionables(IEnumerable<Positionable<Vector2>>, Vector2) Moves one or more Positionable<TCoordinates>s to a new position. protected override void MovePositionables(IEnumerable<Positionable<Vector2>> positionables, Vector2 target) Parameters positionables IEnumerable<Positionable<Vector2>> The Positionable<TCoordinates>s to be moved. target Vector2 The terrain position to move the positionables to. PickPositionables(IEnumerable<Positionable<Vector2>>, bool) Adds one or more Positionable<TCoordinates>s to SelectedPositionables. protected override void PickPositionables(IEnumerable<Positionable<Vector2>> positionables, bool accumulate) Parameters positionables IEnumerable<Positionable<Vector2>> The selected Positionable<TCoordinates>s. accumulate bool true when the user wants the new selection to be added to the old one. PrepareSave() Writes back data to Universe so that state gets stored in savegames. public void PrepareSave() ReleaseLock() Releases a camera lock applied by LockOn(string). public void ReleaseLock() SwingCameraTo(string) Switches from the current camera view to a new view using a cinematic effect. public void SwingCameraTo(string name) Parameters name string The Name of a CameraState<TCoordinates> stored in the Universe."
  },
  "api/FrameOfReference.Presentation.InteractivePresenter.html": {
    "href": "api/FrameOfReference.Presentation.InteractivePresenter.html",
    "title": "Class InteractivePresenter | OmegaEngine",
    "summary": "Class InteractivePresenter Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll Handles the visual representation of FrameOfReference.World content where the user can manually control the perspective public abstract class InteractivePresenter : Presenter, IPresenter<Universe>, IDisposable, IInputReceiver Inheritance object PresenterBase<Universe> CoordinatePresenter<Universe, Vector2> Presenter InteractivePresenter Implements IPresenter<Universe> IDisposable IInputReceiver Derived EditorPresenter InGamePresenter Inherited Members Presenter.WireframeTerrain Presenter.Terrain Presenter.RebuildTerrain() Presenter.CreateCamera(CameraState<Vector2>) Presenter.MaxCameraRadius Presenter.CameraController(DoubleVector3) Presenter.CameraState Presenter.DimDown() Presenter.DimUp() Presenter.RegisterRenderComponent<TComponent>(Presenter.RenderComponentToEngine<TComponent>) Presenter.UpdateRepresentation(Positionable<Vector2>, IPositionable) Presenter.UpdateRepresentation(Entity, PositionableRenderable) Presenter.UpdateRepresentation(Entity, PointLight) Presenter.RegisterRenderablesSync() Presenter.UpdateLighting() CoordinatePresenter<Universe, Vector2>.Initialize() CoordinatePresenter<Universe, Vector2>.RenderablesSync CoordinatePresenter<Universe, Vector2>.LightsSync CoordinatePresenter<Universe, Vector2>.RegisterRenderablesSync() CoordinatePresenter<Universe, Vector2>.WireframeEntities CoordinatePresenter<Universe, Vector2>.BoundingSphereEntities CoordinatePresenter<Universe, Vector2>.BoundingBoxEntities CoordinatePresenter<Universe, Vector2>.Dispose(bool) PresenterBase<Universe>.Engine PresenterBase<Universe>.Scene PresenterBase<Universe>.View PresenterBase<Universe>.Universe PresenterBase<Universe>.Initialized PresenterBase<Universe>.HookIn() PresenterBase<Universe>.HookOut() PresenterBase<Universe>.SkyboxFileFormat PresenterBase<Universe>.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors InteractivePresenter(Engine, Universe) Creates a new interactive presenter protected InteractivePresenter(Engine engine, Universe universe) Parameters engine Engine The engine to use for rendering universe Universe The universe to display Properties SelectedPositionables The Positionable<TCoordinates>s the user has selected with the mouse public MonitoredCollection<Positionable<Vector2>> SelectedPositionables { get; } Property Value MonitoredCollection<Positionable<Vector2>> Methods AreaSelection(Rectangle, bool, bool) Called when the user is selecting an area on the screen. public virtual void AreaSelection(Rectangle area, bool accumulate, bool done) Parameters area Rectangle The selected area in pixels. The bottom-right corner is always the last point selected by the user, therefore the box may be inverted. accumulate bool true when the user wants the new selection to be added to the old one. done bool True when the user has finished his selection (e.g. released the mouse). Click(MouseEventArgs, bool) Called when the user clicked something (not dragged!). public virtual void Click(MouseEventArgs e, bool accumulate) Parameters e MouseEventArgs The original event arguments from the click. accumulate bool true when the user wants the action to have an accumulative effect (usually for selections). Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. DoubleClick(MouseEventArgs) Called when the user double-clicked something. public virtual void DoubleClick(MouseEventArgs e) Parameters e MouseEventArgs The original event arguments from the click. Hover(Point) Called when the user is hovering above a point on the screen. public virtual void Hover(Point target) Parameters target Point The point the user is hovering over in pixels. Initialize() Generate Renderables from the Universe and keeps everything in sync using events public override void Initialize() Remarks Should be called before HookIn() is used Exceptions FileNotFoundException A required Asset file could not be found. IOException There was an error reading an Asset file. InvalidDataException An Asset file contains invalid data. MovePositionables(IEnumerable<Positionable<Vector2>>, Vector2) Moves one or more Positionable<TCoordinates>s to a new position. protected abstract void MovePositionables(IEnumerable<Positionable<Vector2>> positionables, Vector2 target) Parameters positionables IEnumerable<Positionable<Vector2>> The Positionable<TCoordinates>s to be moved. target Vector2 The terrain position to move the positionables to. PerspectiveChange(Point, int, int) Called when the user changes the view perspective. public void PerspectiveChange(Point pan, int rotation, int zoom) Parameters pan Point Horizontal XY-panning in pixels. rotation int Horizontal rotation in pixels. zoom int Vertical zooming in pixels. Greater than 0 to zoom in; less than 0 to zoom out. PickPositionables(IEnumerable<Positionable<Vector2>>, bool) Adds one or more Positionable<TCoordinates>s to SelectedPositionables. protected virtual void PickPositionables(IEnumerable<Positionable<Vector2>> positionables, bool accumulate) Parameters positionables IEnumerable<Positionable<Vector2>> The selected Positionable<TCoordinates>s. accumulate bool true when the user wants the new selection to be added to the old one. SwingCameraTo(CameraState<Vector2>?) Switches from the current camera view to a new view using a cinematic effect. public void SwingCameraTo(CameraState<Vector2>? cameraState = null) Parameters cameraState CameraState<Vector2> The destination state of the camera; null for default (looking at the center of the terrain). SwingCameraTo(PositionableRenderable) Swings the camera to look at a specific PositionableRenderable. public void SwingCameraTo(PositionableRenderable target) Parameters target PositionableRenderable SwingCameraTo(Vector2) Swings the camera to look at a specific set of 2D coordinates. public void SwingCameraTo(Vector2 target) Parameters target Vector2 TakeOverSelection() Turns all currently selected Entitys into player-controlled characters. public void TakeOverSelection()"
  },
  "api/FrameOfReference.Presentation.MenuPresenter.html": {
    "href": "api/FrameOfReference.Presentation.MenuPresenter.html",
    "title": "Class MenuPresenter | OmegaEngine",
    "summary": "Class MenuPresenter Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll Displays the background world for the main menu public sealed class MenuPresenter : Presenter, IPresenter<Universe>, IDisposable Inheritance object PresenterBase<Universe> CoordinatePresenter<Universe, Vector2> Presenter MenuPresenter Implements IPresenter<Universe> IDisposable Inherited Members Presenter.WireframeTerrain Presenter.Initialize() Presenter.Terrain Presenter.RebuildTerrain() Presenter.CameraState Presenter.DimDown() Presenter.DimUp() CoordinatePresenter<Universe, Vector2>.Initialize() CoordinatePresenter<Universe, Vector2>.WireframeEntities CoordinatePresenter<Universe, Vector2>.BoundingSphereEntities CoordinatePresenter<Universe, Vector2>.BoundingBoxEntities PresenterBase<Universe>.View PresenterBase<Universe>.Universe PresenterBase<Universe>.HookIn() PresenterBase<Universe>.HookOut() PresenterBase<Universe>.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors MenuPresenter(Engine, Universe) Creates a new background presenter for the main menu public MenuPresenter(Engine engine, Universe universe) Parameters engine Engine The engine to use for rendering universe Universe The universe to display Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector."
  },
  "api/FrameOfReference.Presentation.PostionableMoveHandler.html": {
    "href": "api/FrameOfReference.Presentation.PostionableMoveHandler.html",
    "title": "Delegate PostionableMoveHandler | OmegaEngine",
    "summary": "Delegate PostionableMoveHandler Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll public delegate void PostionableMoveHandler(IEnumerable<Positionable<Vector2>> positionables, Vector2 target) Parameters positionables IEnumerable<Positionable<Vector2>> The Positionable<TCoordinates>s to be moved. target Vector2 The terrain position to move the entities to. Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) See Also PostionableMove"
  },
  "api/FrameOfReference.Presentation.Presenter.RenderComponentToEngine-1.html": {
    "href": "api/FrameOfReference.Presentation.Presenter.RenderComponentToEngine-1.html",
    "title": "Delegate Presenter.RenderComponentToEngine<TComponent> | OmegaEngine",
    "summary": "Delegate Presenter.RenderComponentToEngine<TComponent> Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll A callback for mapping a Render component to an Engine representation. protected delegate PositionableRenderable Presenter.RenderComponentToEngine<TComponent>(Entity entity, TComponent component) where TComponent : Render Parameters entity Entity The entity containing the Render component. component TComponent The Render component to visualize using the Engine. Returns PositionableRenderable The generated Engine representation. Type Parameters TComponent The specific type of Render component to handle. Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[])"
  },
  "api/FrameOfReference.Presentation.Presenter.html": {
    "href": "api/FrameOfReference.Presentation.Presenter.html",
    "title": "Class Presenter | OmegaEngine",
    "summary": "Class Presenter Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll Handles the visual representation of FrameOfReference.World content in the OmegaEngine public abstract class Presenter : CoordinatePresenter<Universe, Vector2>, IPresenter<Universe>, IDisposable Inheritance object PresenterBase<Universe> CoordinatePresenter<Universe, Vector2> Presenter Implements IPresenter<Universe> IDisposable Derived BenchmarkPresenter InteractivePresenter MenuPresenter Inherited Members CoordinatePresenter<Universe, Vector2>.Initialize() CoordinatePresenter<Universe, Vector2>.RenderablesSync CoordinatePresenter<Universe, Vector2>.LightsSync CoordinatePresenter<Universe, Vector2>.RegisterRenderablesSync() CoordinatePresenter<Universe, Vector2>.WireframeEntities CoordinatePresenter<Universe, Vector2>.BoundingSphereEntities CoordinatePresenter<Universe, Vector2>.BoundingBoxEntities CoordinatePresenter<Universe, Vector2>.Dispose(bool) PresenterBase<Universe>.Engine PresenterBase<Universe>.Scene PresenterBase<Universe>.View PresenterBase<Universe>.Universe PresenterBase<Universe>.Initialized PresenterBase<Universe>.HookIn() PresenterBase<Universe>.HookOut() PresenterBase<Universe>.SkyboxFileFormat PresenterBase<Universe>.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Presenter(Engine, Universe) Creates a new presenter. protected Presenter(Engine engine, Universe universe) Parameters engine Engine The engine to use for rendering. universe Universe The game world to present. Properties CameraState Retrieves the current state of the Camera for storage in the Universe. public CameraState<Vector2>? CameraState { get; } Property Value CameraState<Vector2> The current state of the Camera or null if it can not be determined at this time (e.g. cinematic animation in progress). MaxCameraRadius The value for MaxRadius. protected virtual double MaxCameraRadius { get; } Property Value double Terrain The OmegaEngine representation of Terrain public Terrain? Terrain { get; } Property Value Terrain WireframeTerrain Render the Terrain in wireframe-mode public bool WireframeTerrain { get; set; } Property Value bool Methods CameraController(DoubleVector3) Ensures the camera does not go under or outside the Terrain. protected virtual double CameraController(DoubleVector3 coordinates) Parameters coordinates DoubleVector3 Returns double The minimum height the camera must have. CreateCamera(CameraState<Vector2>?) Creates a new camera based on a state usually loaded from the Universe. protected Camera CreateCamera(CameraState<Vector2>? state = null) Parameters state CameraState<Vector2> The state to place the new camera in; null for default (looking at the center of the terrain). Returns Camera The newly created Camera. DimDown() Dims in the screen down. public override void DimDown() DimUp() Dims in the screen back up. public override void DimUp() Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. Initialize() Generate Renderables from the Universe and keeps everything in sync using events public override void Initialize() Remarks Should be called before HookIn() is used Exceptions FileNotFoundException A required Asset file could not be found. IOException There was an error reading an Asset file. InvalidDataException An Asset file contains invalid data. RebuildTerrain() Rebuilds the terrain from Terrain to reflect any modifications performed. public void RebuildTerrain() RegisterRenderComponent<TComponent>(RenderComponentToEngine<TComponent>) Registers a callback for converting a Render component to an Engine representation. protected void RegisterRenderComponent<TComponent>(Presenter.RenderComponentToEngine<TComponent> create) where TComponent : Render Parameters create Presenter.RenderComponentToEngine<TComponent> The callback for mapping a Render component to an Engine representation. Type Parameters TComponent The specific type of Render component to handle. RegisterRenderablesSync() Hook to configure RenderablesSync and LightsSync. protected override void RegisterRenderablesSync() UpdateLighting() Updates FrameOfReference.Presentation.Presenter._lightSun and FrameOfReference.Presentation.Presenter._lightMoon based on the light phase in Universe. protected void UpdateLighting() UpdateRepresentation(Positionable<Vector2>, IPositionable) Applies the position of a Model element to a View representation. protected void UpdateRepresentation(Positionable<Vector2> element, IPositionable representation) Parameters element Positionable<Vector2> representation IPositionable UpdateRepresentation(Entity, PointLight) Applies the position and rotation of a Model element to a View representation. protected void UpdateRepresentation(Entity element, PointLight representation) Parameters element Entity representation PointLight UpdateRepresentation(Entity, PositionableRenderable) Applies the position and rotation of a Model element to a View representation. protected void UpdateRepresentation(Entity element, PositionableRenderable representation) Parameters element Entity representation PositionableRenderable"
  },
  "api/FrameOfReference.Presentation.Statistics.html": {
    "href": "api/FrameOfReference.Presentation.Statistics.html",
    "title": "Class Statistics | OmegaEngine",
    "summary": "Class Statistics Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll Represents a set of TestCases that can be executed, recorded and serialized. public class Statistics Inheritance object Statistics Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Statistics() Base-constructor for XML serialization. Do not call manually! public Statistics() Statistics(string, string, Universe) Creates a set of TestCases based on BenchmarkPoint<TCoordinates>s in a Universe. public Statistics(string gameVersion, string engineVersion, Universe universe) Parameters gameVersion string The version number of the game. engineVersion string The version number of the engine. universe Universe The Universe containing the BenchmarkPoint<TCoordinates>s. Fields TestCases The set of TestCases. public TestCase[] TestCases Field Value TestCase[] Properties EngineVersion The version number of the engine. public string EngineVersion { get; set; } Property Value string GameVersion The version number of the game. public string GameVersion { get; set; } Property Value string"
  },
  "api/FrameOfReference.Presentation.TerrainPaint.html": {
    "href": "api/FrameOfReference.Presentation.TerrainPaint.html",
    "title": "Delegate TerrainPaint | OmegaEngine",
    "summary": "Delegate TerrainPaint Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll public delegate void TerrainPaint(Vector2 terrainCoords, bool done) Parameters terrainCoords Vector2 The terrain coordinates in world space. done bool True when the user has finished his painting (e.g. released the mouse). Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) See Also TerrainPaint"
  },
  "api/FrameOfReference.Presentation.TestCase.html": {
    "href": "api/FrameOfReference.Presentation.TestCase.html",
    "title": "Struct TestCase | OmegaEngine",
    "summary": "Struct TestCase Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll A specific test-case (with target and graphics settings) to profile. public struct TestCase Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields AntiAliasing Run this test-case with 2x anti-aliasing. public bool AntiAliasing Field Value bool AverageFps The average \"frames per second\". public float AverageFps Field Value float AverageFrameMs The average \"milliseconds per frames\". public float AverageFrameMs Field Value float GraphicsSettings Boolean flags for Graphics. public TestGraphicsSettings GraphicsSettings Field Value TestGraphicsSettings HighRes Run this test-case with twice the default benchmark resolution. public bool HighRes Field Value bool Screenshot Create a screenshot of the rendering of this test-case? public bool Screenshot Field Value bool Target The camera settings to use. public BenchmarkPoint<Vector2> Target Field Value BenchmarkPoint<Vector2> TestGraphicsSettingsUpperBound The exclusive upper bound for values valid for GraphicsSettings. public const int TestGraphicsSettingsUpperBound = 8 Field Value int WaterEffects What kind of effects to display on water (e.g. reflections). public WaterEffectsType WaterEffects Field Value WaterEffectsType"
  },
  "api/FrameOfReference.Presentation.TestGraphicsSettings.html": {
    "href": "api/FrameOfReference.Presentation.TestGraphicsSettings.html",
    "title": "Enum TestGraphicsSettings | OmegaEngine",
    "summary": "Enum TestGraphicsSettings Namespace FrameOfReference.Presentation Assembly FrameOfReference.Presentation.dll Boolean flags for Graphics [Flags] public enum TestGraphicsSettings Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Anisotropic = 1 Activate anisotropic texture filtering. DoubleSampling = 2 Activate terrain texture double sampling. PostScreenEffects = 4 Activate post-screen effects. See Also GraphicsSettings"
  },
  "api/FrameOfReference.Presentation.html": {
    "href": "api/FrameOfReference.Presentation.html",
    "title": "Namespace FrameOfReference.Presentation | OmegaEngine",
    "summary": "Namespace FrameOfReference.Presentation Namespaces FrameOfReference.Presentation.Config Classes BenchmarkPresenter Performs rendering for the benchmark mode EditorPresenter Displays a map for editing InGamePresenter Main in-game interaction InteractivePresenter Handles the visual representation of FrameOfReference.World content where the user can manually control the perspective MenuPresenter Displays the background world for the main menu Presenter Handles the visual representation of FrameOfReference.World content in the OmegaEngine Statistics Represents a set of TestCases that can be executed, recorded and serialized. Structs TestCase A specific test-case (with target and graphics settings) to profile. Enums TestGraphicsSettings Boolean flags for Graphics Delegates PostionableMoveHandler Presenter.RenderComponentToEngine<TComponent> A callback for mapping a Render component to an Engine representation. TerrainPaint"
  },
  "api/FrameOfReference.Program.html": {
    "href": "api/FrameOfReference.Program.html",
    "title": "Class Program | OmegaEngine",
    "summary": "Class Program Namespace FrameOfReference Assembly FrameOfReference.dll public static class Program Inheritance object Program Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Args The arguments this application was launched with. public static Arguments Args { get; } Property Value Arguments Methods UpdateLocale() Updates the localization used by the application public static void UpdateLocale()"
  },
  "api/FrameOfReference.World.CameraState-1.html": {
    "href": "api/FrameOfReference.World.CameraState-1.html",
    "title": "Class CameraState<TCoordinates> | OmegaEngine",
    "summary": "Class CameraState<TCoordinates> Namespace FrameOfReference.World Assembly FrameOfReference.World.dll Stores the position and direction of the camera in the game. public class CameraState<TCoordinates> : Positionable<TCoordinates>, ICloneable, IChangeNotify<Positionable<TCoordinates>> where TCoordinates : struct Type Parameters TCoordinates Data type for storing position coordinates of objects in the game world. Inheritance object Positionable<TCoordinates> CameraState<TCoordinates> Implements ICloneable IChangeNotify<Positionable<TCoordinates>> Derived BenchmarkPoint<TCoordinates> Inherited Members Positionable<TCoordinates>.Changed Positionable<TCoordinates>.OnChanged() Positionable<TCoordinates>.ChangedRebuild Positionable<TCoordinates>.OnChangedRebuild() Positionable<TCoordinates>.Name Positionable<TCoordinates>.ToString() Positionable<TCoordinates>.Position Positionable<TCoordinates>.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Radius The camera's distance from the focused position. public float Radius { get; set; } Property Value float Rotation The horizontal rotation of the view direction in degrees. public float Rotation { get; set; } Property Value float See Also CurrentCamera"
  },
  "api/FrameOfReference.World.Components.Box.html": {
    "href": "api/FrameOfReference.World.Components.Box.html",
    "title": "Class Box | OmegaEngine",
    "summary": "Class Box Namespace FrameOfReference.World.Components Assembly FrameOfReference.World.dll Collision-detection using an axis-aligned box. public class Box : Collision<Vector2>, ICloneable Inheritance object Collision<Vector2> Box Implements ICloneable Inherited Members Collision<Vector2>.ToString() Collision<Vector2>.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Area The area covered by this box. [Browsable(false)] public RectangleF Area { get; } Property Value RectangleF Maximum The upper right corner of the box (originating from the body's position). public Vector2 Maximum { get; set; } Property Value Vector2 Minimum The lower left corner of the box (originating from the body's position). public Vector2 Minimum { get; set; } Property Value Vector2 Methods CollisionTest(Quadrangle, float) Determines whether a certain area lies within the box. public override bool CollisionTest(Quadrangle area, float rotation) Parameters area Quadrangle The area to check for collision in entity space. rotation float How the box shall be rotated before performing the collision test. Returns bool true if area does collide with the box, false. CollisionTest(Vector2, float) Determines whether a certain point lies within the box. public override bool CollisionTest(Vector2 point, float rotation) Parameters point Vector2 The point to check for collision in entity space. rotation float How the box shall be rotated before performing the collision test. Returns bool true if point does collide with the box, false otherwise."
  },
  "api/FrameOfReference.World.Components.Circle.html": {
    "href": "api/FrameOfReference.World.Components.Circle.html",
    "title": "Class Circle | OmegaEngine",
    "summary": "Class Circle Namespace FrameOfReference.World.Components Assembly FrameOfReference.World.dll Collision-detection using a simple uniform circle. public class Circle : Collision<Vector2>, ICloneable Inheritance object Collision<Vector2> Circle Implements ICloneable Inherited Members Collision<Vector2>.ToString() Collision<Vector2>.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Radius The radius of the circle. public float Radius { get; set; } Property Value float Methods CollisionTest(Quadrangle, float) Determines whether a certain area lies within a circle. public override bool CollisionTest(Quadrangle area, float rotation) Parameters area Quadrangle The area to check for collision in entity space. rotation float This is ignored for circles. Returns bool true if area does collide with the circle, false. CollisionTest(Vector2, float) Determines whether a certain point lies within a circle. public override bool CollisionTest(Vector2 point, float rotation) Parameters point Vector2 The point to check for collision in entity space. rotation float This is ignored for circles. Returns bool true if the point does collide with the circle, false."
  },
  "api/FrameOfReference.World.Components.html": {
    "href": "api/FrameOfReference.World.Components.html",
    "title": "Namespace FrameOfReference.World.Components | OmegaEngine",
    "summary": "Namespace FrameOfReference.World.Components Classes Box Collision-detection using an axis-aligned box. Circle Collision-detection using a simple uniform circle."
  },
  "api/FrameOfReference.World.Constants.html": {
    "href": "api/FrameOfReference.World.Constants.html",
    "title": "Class Constants | OmegaEngine",
    "summary": "Class Constants Namespace FrameOfReference.World Assembly FrameOfReference.World.dll public static class Constants Inheritance object Constants Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields AppName The complete name of the application public const string AppName = \"Frame of Reference\" Field Value string AppNameShort The short version of the application name (used for EXE name, AppModel IDs, etc.) public const string AppNameShort = \"FrameOfReference\" Field Value string"
  },
  "api/FrameOfReference.World.Positionables.BenchmarkPoint-1.html": {
    "href": "api/FrameOfReference.World.Positionables.BenchmarkPoint-1.html",
    "title": "Class BenchmarkPoint<TCoordinates> | OmegaEngine",
    "summary": "Class BenchmarkPoint<TCoordinates> Namespace FrameOfReference.World.Positionables Assembly FrameOfReference.World.dll A marker that controls camera positions for the benchmark mode of the game. public class BenchmarkPoint<TCoordinates> : CameraState<TCoordinates>, ICloneable, IChangeNotify<Positionable<TCoordinates>> where TCoordinates : struct Type Parameters TCoordinates Data type for storing position coordinates of objects in the game world. Inheritance object Positionable<TCoordinates> CameraState<TCoordinates> BenchmarkPoint<TCoordinates> Implements ICloneable IChangeNotify<Positionable<TCoordinates>> Inherited Members CameraState<TCoordinates>.Radius CameraState<TCoordinates>.Rotation Positionable<TCoordinates>.Changed Positionable<TCoordinates>.OnChanged() Positionable<TCoordinates>.ChangedRebuild Positionable<TCoordinates>.OnChangedRebuild() Positionable<TCoordinates>.Name Positionable<TCoordinates>.ToString() Positionable<TCoordinates>.Position Positionable<TCoordinates>.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties TestParticleSystem Cycle through particle system quality settings here (will take 2x as long). public bool TestParticleSystem { get; set; } Property Value bool TestWater Cycle through different water quality settings here (will take 3x as long). public bool TestWater { get; set; } Property Value bool"
  },
  "api/FrameOfReference.World.Positionables.Entity.html": {
    "href": "api/FrameOfReference.World.Positionables.Entity.html",
    "title": "Class Entity | OmegaEngine",
    "summary": "Class Entity Namespace FrameOfReference.World.Positionables Assembly FrameOfReference.World.dll An entity that can be placed on a Terrain<TTemplate>. public sealed class Entity : EntityBase<Vector2, EntityTemplate>, ICloneable, IChangeNotify<Positionable<Vector2>>, IUpdateable, ITemplated Inheritance object Positionable<Vector2> EntityBase<Vector2, EntityTemplate> Entity Implements ICloneable IChangeNotify<Positionable<Vector2>> IUpdateable ITemplated Inherited Members EntityBase<Vector2, EntityTemplate>.TemplateName EntityBase<Vector2, EntityTemplate>.TemplateData EntityBase<Vector2, EntityTemplate>.MaskTemplateData() EntityBase<Vector2, EntityTemplate>.Update(double) EntityBase<Vector2, EntityTemplate>.CurrentPath EntityBase<Vector2, EntityTemplate>.ToString() EntityBase<Vector2, EntityTemplate>.Clone() Positionable<Vector2>.Changed Positionable<Vector2>.ChangedRebuild Positionable<Vector2>.Name Positionable<Vector2>.ToString() Positionable<Vector2>.Position Positionable<Vector2>.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties ActiveWaypointIndex The Waypoints index of the Waypoint this entity is currently moving towards; -1 for no Waypoint. [Browsable(false)] public int ActiveWaypointIndex { get; set; } Property Value int IsPlayerControlled true if this entity is controlled by a human player, false if it is controlled by the computer. public bool IsPlayerControlled { get; set; } Property Value bool Rotation The horizontal rotation of the view direction in degrees. public float Rotation { get; set; } Property Value float Waypoints The Waypoints associated with this entity ordered by ActivationTime. [Browsable(false)] public List<Waypoint> Waypoints { get; } Property Value List<Waypoint> Methods CollisionTest(Quadrangle) Determines whether a certain area collides with this entity (based on its Collision<TCoordinates> component). public bool CollisionTest(Quadrangle area) Parameters area Quadrangle The area to check for collision in world space. Returns bool true if the area does collide with this entity, false otherwise. CollisionTest(Vector2) Determines whether a certain point collides with this entity (based on its Collision<TCoordinates> component). public bool CollisionTest(Vector2 point) Parameters point Vector2 The point to check for collision in world space. Returns bool true if the point does collide with this entity, false otherwise. GetCurrentWaypointIndex(double) Determines the currently active Waypoints entry. public int GetCurrentWaypointIndex(double gameTime) Parameters gameTime double The current GameTime value. Returns int The currently active Waypoint; null if none is active. Update(double) Updates the position and other attributes of this entity. public override void Update(double elapsedTime) Parameters elapsedTime double How much game time in seconds has elapsed since this method was last called."
  },
  "api/FrameOfReference.World.Positionables.Trigger.html": {
    "href": "api/FrameOfReference.World.Positionables.Trigger.html",
    "title": "Class Trigger | OmegaEngine",
    "summary": "Class Trigger Namespace FrameOfReference.World.Positionables Assembly FrameOfReference.World.dll Executes Lua scripts on proximity or timers. public sealed class Trigger : Positionable<Vector2>, ICloneable, IChangeNotify<Positionable<Vector2>> Inheritance object Positionable<Vector2> Trigger Implements ICloneable IChangeNotify<Positionable<Vector2>> Inherited Members Positionable<Vector2>.Changed Positionable<Vector2>.ChangedRebuild Positionable<Vector2>.Name Positionable<Vector2>.ToString() Positionable<Vector2>.Position Positionable<Vector2>.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties DependsOn The name of another Trigger that has to be triggered before this one can be. public string? DependsOn { get; set; } Property Value string DueTime The GameTime by which this trigger should have been activated. public double DueTime { get; set; } Property Value double OnActivation A Lua script to execute when TargetEntity gets within Range. [FileType(\"Lua\")] public string? OnActivation { get; set; } Property Value string OnTimeout A Lua script to execute if the trigger was not activated by DueTime. [FileType(\"Lua\")] public string? OnTimeout { get; set; } Property Value string Range The maximum distance at which an Entity activates this trigger. public float Range { get; set; } Property Value float TargetEntity The name of the Entity whose proximity causes this trigger to activate. public string? TargetEntity { get; set; } Property Value string WasTriggered Indicates whether this trigger has already been triggered by TargetEntity or has timed out. public bool WasTriggered { get; set; } Property Value bool Methods IsInRange(Positionable<Vector2>) Determines whether an entity is within range of this trigger. public bool IsInRange(Positionable<Vector2> entity) Parameters entity Positionable<Vector2> Returns bool"
  },
  "api/FrameOfReference.World.Positionables.Waypoint.html": {
    "href": "api/FrameOfReference.World.Positionables.Waypoint.html",
    "title": "Class Waypoint | OmegaEngine",
    "summary": "Class Waypoint Namespace FrameOfReference.World.Positionables Assembly FrameOfReference.World.dll A marker used to control automated Entity movement. public class Waypoint : Positionable<Vector2>, ICloneable, IChangeNotify<Positionable<Vector2>> Inheritance object Positionable<Vector2> Waypoint Implements ICloneable IChangeNotify<Positionable<Vector2>> Inherited Members Positionable<Vector2>.Changed Positionable<Vector2>.ChangedRebuild Positionable<Vector2>.OnChangedRebuild() Positionable<Vector2>.Name Positionable<Vector2>.ToString() Positionable<Vector2>.Position Positionable<Vector2>.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties ActivationTime The GameTime when Entitys start walking towards this waypoint. public double ActivationTime { get; set; } Property Value double ArrivalTime The GameTime when Entitys reach this waypoint. Set automatically by HandleWaypoints(Entity, double). public double ArrivalTime { get; set; } Property Value double ArrivalTimeSpecified Indicates whether ArrivalTime has been set. [Browsable(false)] public bool ArrivalTimeSpecified { get; set; } Property Value bool OriginPosition The position where an Entity walking towards this waypoint started off. Set automatically by HandleWaypoints(Entity, double). public Vector2 OriginPosition { get; set; } Property Value Vector2 OriginPositionSpecified Indicates whether OriginPosition has been set. [Browsable(false)] public bool OriginPositionSpecified { get; set; } Property Value bool TargetEntity The name of the Entity this waypoint is for. public string? TargetEntity { get; set; } Property Value string Methods OnChanged() To be called when a property relevant for rendering has changed. protected override void OnChanged()"
  },
  "api/FrameOfReference.World.Positionables.html": {
    "href": "api/FrameOfReference.World.Positionables.html",
    "title": "Namespace FrameOfReference.World.Positionables | OmegaEngine",
    "summary": "Namespace FrameOfReference.World.Positionables Classes BenchmarkPoint<TCoordinates> A marker that controls camera positions for the benchmark mode of the game. Entity An entity that can be placed on a Terrain<TTemplate>. Trigger Executes Lua scripts on proximity or timers. Waypoint A marker used to control automated Entity movement."
  },
  "api/FrameOfReference.World.Session.html": {
    "href": "api/FrameOfReference.World.Session.html",
    "title": "Class Session | OmegaEngine",
    "summary": "Class Session Namespace FrameOfReference.World Assembly FrameOfReference.World.dll Represents a game session (i.e. a game actually being played). It is equivalent to the content of a savegame. public sealed class Session : Session<Universe> Inheritance object Session<Universe> Session Inherited Members Session<Universe>.Universe Session<Universe>.MapSourceFile Session<Universe>.TimeWarpFactor object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Session() Base-constructor for XML serialization. Do not call manually! public Session() Session(Universe) Creates a new game session based upon a given Universe. public Session(Universe baseUniverse) Parameters baseUniverse Universe The universe to base the new game session on. Fields FileExt The file extensions when this class is stored as a file. public const string FileExt = \".FrameOfReferenceSave\" Field Value string Properties LeftoverGameTime GameTime time left over from the last Update(double) call due to the fixed update step size. public double LeftoverGameTime { get; set; } Property Value double Lua The scripting engine used to execute story scripts. public Lua? Lua { get; set; } Property Value Lua TimeTravelInProgress Indicates whwther a TimeTravel(double) request is currently being processed. [Browsable(false)] public bool TimeTravelInProgress { get; set; } Property Value bool Methods Load(string) Loads a Session from an encrypted XML file (savegame). public static Session Load(string path) Parameters path string The file to load from. Returns Session The loaded Session. Exceptions IOException A problem occurred while reading the file. UnauthorizedAccessException Read access to the file is not permitted. InvalidOperationException A problem occurred while deserializing the XML data. Save(string) Saves this session in an encrypted XML file (savegame). public override void Save(string path) Parameters path string The file to save in. Exceptions IOException A problem occurred while writing the file. UnauthorizedAccessException Write access to the file is not permitted. TimeTravel(double) Like UpdateTo(double), but interpolates between the current and the target time smoothly. public void TimeTravel(double gameTime) Parameters gameTime double The target value for GameTime. Update(double) Updates the underlying Universe. public override double Update(double elapsedRealTime) Parameters elapsedRealTime double How much real time in seconds has elapsed since this method was last called. Returns double The elapsed game time (real time multiplied by TimeWarpFactor) UpdateTo(double) Updates the world to a specific point in game time. public void UpdateTo(double gameTime) Parameters gameTime double The target value for GameTime."
  },
  "api/FrameOfReference.World.Templates.EntityTemplate.html": {
    "href": "api/FrameOfReference.World.Templates.EntityTemplate.html",
    "title": "Class EntityTemplate | OmegaEngine",
    "summary": "Class EntityTemplate Namespace FrameOfReference.World.Templates Assembly FrameOfReference.World.dll A collection of components used as a prototype for constructing new Entitys. public class EntityTemplate : EntityTemplateBase<EntityTemplate>, INamed, IHighlightColor, ICloneable, IComparable<EntityTemplate> Inheritance object Template<EntityTemplate> EntityTemplateBase<EntityTemplate> EntityTemplate Implements INamed IHighlightColor ICloneable IComparable<EntityTemplate> Inherited Members EntityTemplateBase<EntityTemplate>.Render EntityTemplateBase<EntityTemplate>.Movement Template<EntityTemplate>.Name Template<EntityTemplate>.HighlightColor Template<EntityTemplate>.Description Template<EntityTemplate>.ToString() Template<EntityTemplate>.FileName Template<EntityTemplate>.All Template<EntityTemplate>.LoadAll() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Collision Controls how EntityBase<TCoordinates, TTemplate>s occupy space around them. [Browsable(false)] public Collision<Vector2>? Collision { get; set; } Property Value Collision<Vector2> Methods Clone() Creates a deep copy of this EntityTemplate. public override EntityTemplate Clone() Returns EntityTemplate The cloned EntityTemplate."
  },
  "api/FrameOfReference.World.Templates.TerrainTemplate.html": {
    "href": "api/FrameOfReference.World.Templates.TerrainTemplate.html",
    "title": "Class TerrainTemplate | OmegaEngine",
    "summary": "Class TerrainTemplate Namespace FrameOfReference.World.Templates Assembly FrameOfReference.World.dll Defines a type of terrain (texture, effects on units, etc.). public sealed class TerrainTemplate : Template<TerrainTemplate>, INamed, IHighlightColor, ICloneable, IComparable<TerrainTemplate> Inheritance object Template<TerrainTemplate> TerrainTemplate Implements INamed IHighlightColor ICloneable IComparable<TerrainTemplate> Inherited Members Template<TerrainTemplate>.Name Template<TerrainTemplate>.HighlightColor Template<TerrainTemplate>.Description Template<TerrainTemplate>.ToString() Template<TerrainTemplate>.Clone() Template<TerrainTemplate>.FileName Template<TerrainTemplate>.All Template<TerrainTemplate>.LoadAll() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Color The mini-map color for this terrain type. Should be unique. [LuaHide] public Color Color { get; set; } Property Value Color Remarks Is not serialized/stored, ColorValue is used for that. ColorValue Used for XML serialization. [LuaHide] [Browsable(false)] public XColor ColorValue { get; set; } Property Value XColor See Also Color MovementAbility How well can units walk on this ground? 0=not at all; 1=with full speed public float MovementAbility { get; set; } Property Value float Texture The filename of the ground texture. [Browsable(false)] public string? Texture { get; set; } Property Value string"
  },
  "api/FrameOfReference.World.Templates.html": {
    "href": "api/FrameOfReference.World.Templates.html",
    "title": "Namespace FrameOfReference.World.Templates | OmegaEngine",
    "summary": "Namespace FrameOfReference.World.Templates Classes EntityTemplate A collection of components used as a prototype for constructing new Entitys. TerrainTemplate Defines a type of terrain (texture, effects on units, etc.)."
  },
  "api/FrameOfReference.World.Universe.html": {
    "href": "api/FrameOfReference.World.Universe.html",
    "title": "Class Universe | OmegaEngine",
    "summary": "Class Universe Namespace FrameOfReference.World Assembly FrameOfReference.World.dll Represents a world with a height-map based Terrain. public sealed class Universe : CoordinateUniverse<Vector2>, IUniverse Inheritance object UniverseBase CoordinateUniverse<Vector2> Universe Implements IUniverse Inherited Members CoordinateUniverse<Vector2>.Pathfinder UniverseBase.SkyboxChanged UniverseBase.Skybox UniverseBase.GameTime UniverseBase.SourceFile object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Universe() Base-constructor for XML serialization. Do not call manually! public Universe() Universe(Terrain<TerrainTemplate>) Creates a new Universe with a terrain. public Universe(Terrain<TerrainTemplate> terrain) Parameters terrain Terrain<TerrainTemplate> The terrain for the new Universe. Fields FileExt The file extensions when this class is stored as a file. public const string FileExt = \".FrameOfReferenceMap\" Field Value string Properties AmbientColor The color of the ambient light (background light that is always visible and has no direction). public Color AmbientColor { get; set; } Property Value Color Remarks Is not serialized/stored, AmbientColorValue is used for that. AmbientColorValue Used for XML serialization. [LuaHide] [Browsable(false)] public XColor AmbientColorValue { get; set; } Property Value XColor See Also AmbientColor Bleach Is the fog active? public bool Bleach { get; set; } Property Value bool ColorCorrectionDawn Color correction values to apply at dawn. public ColorCorrection ColorCorrectionDawn { get; set; } Property Value ColorCorrection ColorCorrectionDusk Color correction values to apply at dusk. public ColorCorrection ColorCorrectionDusk { get; set; } Property Value ColorCorrection ColorCorrectionMidnight Color correction values to apply at midnight. public ColorCorrection ColorCorrectionMidnight { get; set; } Property Value ColorCorrection ColorCorrectionNoon Color correction values to apply at noon. public ColorCorrection ColorCorrectionNoon { get; set; } Property Value ColorCorrection CurrentCamera The current position and direction of the camera in the game. [Browsable(false)] public CameraState<Vector2>? CurrentCamera { get; set; } Property Value CameraState<Vector2> Remarks This is updated only when leaving the game, not continuously. Fog Is the fog active? public bool Fog { get; set; } Property Value bool FogColor The color of the fog. public Color FogColor { get; set; } Property Value Color Remarks Is not serialized/stored, FogColorValue is used for that. FogColorValue Used for XML serialization. [LuaHide] [Browsable(false)] public XColor FogColorValue { get; set; } Property Value XColor See Also FogColor FogDistance The maximum distance one can look through the fog. public float FogDistance { get; set; } Property Value float LightPhase A value between 0 and 4 representing the current sun and moon positions. (0 = dawn, 1 = noon, 2 = dusk, 3 = midnight) [FloatRange(0, 4)] public float LightPhase { get; set; } Property Value float LightPhaseSpeedFactor The speed with which the LightPhase is incremented. public float LightPhaseSpeedFactor { get; set; } Property Value float MaxTraversableSlope The maximum slope the IPathfinder<TCoordinates> considers traversable. public int MaxTraversableSlope { get; set; } Property Value int MoonColor The color of the diffuse light (normal directional light) of the second moon. public Color MoonColor { get; set; } Property Value Color Remarks Is not serialized/stored, MoonColorValue is used for that. MoonColorValue Used for XML serialization. [LuaHide] [Browsable(false)] public XColor MoonColorValue { get; set; } Property Value XColor See Also MoonColor MoonInclination The angle of inclination of the second moon's path away from the horizon towards south in degrees. public float MoonInclination { get; set; } Property Value float Positionables A collection of all Positionable<TCoordinates>s in this CoordinateUniverse<TCoordinates>. [Browsable(false)] public override MonitoredCollection<Positionable<Vector2>> Positionables { get; } Property Value MonitoredCollection<Positionable<Vector2>> SunColor The color of the diffuse light (normal directional light) of the sun. public Color SunColor { get; set; } Property Value Color Remarks Is not serialized/stored, SunColorValue is used for that. SunColorValue Used for XML serialization. [LuaHide] [Browsable(false)] public XColor SunColorValue { get; set; } Property Value XColor See Also SunColor SunInclination The angle of inclination of the sun's path away from the horizon towards south in degrees. public float SunInclination { get; set; } Property Value float Terrain The Terrain on which Entitys are placed. [Browsable(false)] public Terrain<TerrainTemplate> Terrain { get; set; } Property Value Terrain<TerrainTemplate> Remarks Is not serialized/stored, TerrainSerialize is used for that. Exceptions InvalidOperationException The Terrain could not be properly loaded from the file. TerrainSerialize Used for XML serialization. [LuaHide] [Browsable(false)] public Terrain<TerrainTemplate> TerrainSerialize { get; set; } Property Value Terrain<TerrainTemplate> Methods FromContent(string) Loads a Universe from the game content source via the ContentManager. public static Universe FromContent(string id) Parameters id string The ID of the Universe to load. Returns Universe The loaded Universe. GetCamera(string) Retrieves an CameraState<TCoordinates> from Positionables by its name. public CameraState<Vector2>? GetCamera(string name) Parameters name string Returns CameraState<Vector2> The first matching CameraState<TCoordinates>; null if there is no match. GetEntity(string) Retrieves an Entity from Positionables by its name. public Entity? GetEntity(string name) Parameters name string Returns Entity The first matching Entity; null if there is no match. GetTrigger(string) Retrieves an Trigger from Positionables by its name. public Trigger? GetTrigger(string name) Parameters name string Returns Trigger The first matching Trigger; null if there is no match. Load(string) Loads a Universe from a compressed XML file (map file). public static Universe Load(string path) Parameters path string The file to load from. Returns Universe The loaded Universe. Exceptions IOException A problem occurred while reading the file. UnauthorizedAccessException Read access to the file is not permitted. InvalidOperationException A problem occurred while deserializing the XML data. MakeAllNpc() Turns all Entitys into NPCs. public void MakeAllNpc() MakePlayerControlled(string) Turns a specific Entity into a player-controlled character. public void MakePlayerControlled(string name) Parameters name string Exceptions KeyNotFoundException Entity not found. PlayerMove(Entity, Vector2) Makes a player-controlled Entity move towards a target. public void PlayerMove(Entity entity, Vector2 target) Parameters entity Entity target Vector2 Save(string) Saves this CoordinateUniverse<TCoordinates> in a map file. public override void Save(string path) Parameters path string The file to save in. Exceptions IOException A problem occurred while writing the file. UnauthorizedAccessException Write access to the file is not permitted. UnwrapWaypoints() Moves Waypoint from Waypoints to Positionables. Call to prepare for editing. public void UnwrapWaypoints() Update(IUpdateable, double) Updates a single IUpdateable. protected override void Update(IUpdateable updateable, double elapsedGameTime) Parameters updateable IUpdateable elapsedGameTime double Update(double) Updates the universe. public override void Update(double elapsedGameTime) Parameters elapsedGameTime double How much game time in seconds has elapsed since this method was last called. Events LightingChanged Occurs when LightPhase, AmbientColor, SunColor, ColorCorrectionDawn, ColorCorrectionNoon or ColorCorrectionDusk, ColorCorrectionMidnight was changed. public event Action? LightingChanged Event Type Action"
  },
  "api/FrameOfReference.World.html": {
    "href": "api/FrameOfReference.World.html",
    "title": "Namespace FrameOfReference.World | OmegaEngine",
    "summary": "Namespace FrameOfReference.World Namespaces FrameOfReference.World.Components FrameOfReference.World.Positionables FrameOfReference.World.Templates Classes CameraState<TCoordinates> Stores the position and direction of the camera in the game. Constants Session Represents a game session (i.e. a game actually being played). It is equivalent to the content of a savegame. Universe Represents a world with a height-map based Terrain."
  },
  "api/FrameOfReference.html": {
    "href": "api/FrameOfReference.html",
    "title": "Namespace FrameOfReference | OmegaEngine",
    "summary": "Namespace FrameOfReference Frame of Reference is the official sample game for the OmegaEngine. It is intended as a sample/reference for developers working on other games. Namespaces FrameOfReference.Editor FrameOfReference.Presentation FrameOfReference.World Classes Game Represents a running instance of the game Program Enums GameState"
  },
  "api/OmegaEngine.Assets.Asset.html": {
    "href": "api/OmegaEngine.Assets.Asset.html",
    "title": "Class Asset | OmegaEngine",
    "summary": "Class Asset Namespace OmegaEngine.Assets Assembly OmegaEngine.dll Data loaded from a file and cached for use by one or more Renderables, Sounds, etc.. public abstract class Asset : IReferenceCount, IDisposable, INamed, IComparable<Asset> Inheritance object Asset Implements IReferenceCount IDisposable INamed IComparable<Asset> Derived XMesh XSound XTexture Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Disposed Was this asset already disposed? [Browsable(false)] public bool Disposed { get; } Property Value bool Name The filename public required string Name { get; set; } Property Value string ReferenceCount How many Renderables use this asset [Browsable(false)] public int ReferenceCount { get; } Property Value int Remarks When this hits zero you can call Dispose() Methods Dispose() Disposes the internal DirectX resources of this asset. public void Dispose() Remarks Will be automatically called by Clean() if ReferenceCount is zero. Dispose(bool) To be called by Dispose() and the object destructor. protected virtual void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. ~Asset() protected ~Asset() HoldReference() Increments the ReferenceCount by one. public virtual void HoldReference() ReleaseReference() Decrements the ReferenceCount by one. public virtual void ReleaseReference() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. See Also GetAsset<T>(string)"
  },
  "api/OmegaEngine.Assets.CacheManager.html": {
    "href": "api/OmegaEngine.Assets.CacheManager.html",
    "title": "Class CacheManager | OmegaEngine",
    "summary": "Class CacheManager Namespace OmegaEngine.Assets Assembly OmegaEngine.dll Keeps a cache of Assets that have been loaded and provides type-safe access to them. public sealed class CacheManager : IDisposable Inheritance object CacheManager Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods Clean() Removes all Assets from the cache that have no references any more. public void Clean() Dispose() Calls Clean() and then checks if any Asset was not released. public void Dispose() ~CacheManager() protected ~CacheManager() See Also Cache"
  },
  "api/OmegaEngine.Assets.IReferenceCount.html": {
    "href": "api/OmegaEngine.Assets.IReferenceCount.html",
    "title": "Interface IReferenceCount | OmegaEngine",
    "summary": "Interface IReferenceCount Namespace OmegaEngine.Assets Assembly OmegaEngine.dll Represents an object that tracks whether it is still needed by increasing and decreasing a reference counter. public interface IReferenceCount Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods HoldReference() Increments the reference count by one. void HoldReference() ReleaseReference() Decrements the reference count by one. void ReleaseReference()"
  },
  "api/OmegaEngine.Assets.XAnimatedMesh.html": {
    "href": "api/OmegaEngine.Assets.XAnimatedMesh.html",
    "title": "Class XAnimatedMesh | OmegaEngine",
    "summary": "Class XAnimatedMesh Namespace OmegaEngine.Assets Assembly OmegaEngine.dll An animated mesh loaded from an .X file. public class XAnimatedMesh : XMesh, IReferenceCount, IDisposable, INamed, IComparable<Asset> Inheritance object Asset XMesh XAnimatedMesh Implements IReferenceCount IDisposable INamed IComparable<Asset> Inherited Members XMesh.Materials XMesh.Mesh XMesh.BoundingSphere XMesh.BoundingBox XMesh.HoldReference() XMesh.ReleaseReference() Asset.Name Asset.ToString() Asset.ReferenceCount Asset.Disposed Asset.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors XAnimatedMesh(Engine, Stream, string) Loads an animated mesh from an .X file. protected XAnimatedMesh(Engine engine, Stream stream, string meshName) Parameters engine Engine The Engine providing rendering capabilities. stream Stream The .X file to load the mesh from. meshName string The name of the mesh. This is used for finding associated textures. Remarks This should only be called from within Get(Engine, string?) to prevent unnecessary duplicates. Exceptions InvalidDataException stream does not contain a valid animated mesh. Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. Get(Engine, string?) Returns a cached XAnimatedMesh or creates a new one if the requested ID is not cached. public static XAnimatedMesh? Get(Engine engine, string? id) Parameters engine Engine The Engine providing the cache and rendering capabilities. id string The ID of the asset to be returned. Returns XAnimatedMesh The requested asset; null if id was empty. Remarks Remember to call Clean() when done, otherwise this object will never be released. Exceptions FileNotFoundException The specified file could not be found. IOException There was an error reading the file. UnauthorizedAccessException Read access to the file is not permitted. InvalidDataException The file does not contain a valid animated mesh. See Also AnimatedModel"
  },
  "api/OmegaEngine.Assets.XMesh.html": {
    "href": "api/OmegaEngine.Assets.XMesh.html",
    "title": "Class XMesh | OmegaEngine",
    "summary": "Class XMesh Namespace OmegaEngine.Assets Assembly OmegaEngine.dll A mesh loaded from an .X file. public class XMesh : Asset, IReferenceCount, IDisposable, INamed, IComparable<Asset> Inheritance object Asset XMesh Implements IReferenceCount IDisposable INamed IComparable<Asset> Derived XAnimatedMesh Inherited Members Asset.Name Asset.ToString() Asset.ReferenceCount Asset.Disposed Asset.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors XMesh(Engine, Stream, string) Loads a static mesh from an .X file. protected XMesh(Engine engine, Stream stream, string meshName) Parameters engine Engine The Engine providing rendering capabilities. stream Stream The .X file to load the mesh from. meshName string The name of the mesh. This is used for finding associated textures. Remarks This should only be called by Get(Engine, string?) to prevent unnecessary duplicates. Exceptions InvalidDataException stream does not contain a valid mesh. Fields Materials Materials (diffuse/normal/height/specular map, lighting settings) associated with the mesh public readonly XMaterial[] Materials Field Value XMaterial[] Properties BoundingBox A bounding box surrounding this mesh public BoundingBox BoundingBox { get; protected set; } Property Value BoundingBox BoundingSphere A bounding sphere surrounding this mesh public BoundingSphere BoundingSphere { get; protected set; } Property Value BoundingSphere Mesh public Mesh Mesh { get; } Property Value Mesh Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. Get(Engine, string?) Returns a cached XMesh or creates a new one if the requested ID is not cached. public static XMesh? Get(Engine engine, string? id) Parameters engine Engine The Engine providing the cache and rendering capabilities. id string The ID of the asset to be returned. Returns XMesh The requested asset; null if id was empty. Remarks Remember to call Clean() when done, otherwise this object will never be released. Exceptions FileNotFoundException The specified file could not be found. IOException There was an error reading the file. UnauthorizedAccessException Read access to the file is not permitted. InvalidDataException The file does not contain a valid mesh. HoldReference() Increments the ReferenceCount by one. public override void HoldReference() ReleaseReference() Decrements the ReferenceCount by one. public override void ReleaseReference() See Also Model"
  },
  "api/OmegaEngine.Assets.XOggSound.html": {
    "href": "api/OmegaEngine.Assets.XOggSound.html",
    "title": "Class XOggSound | OmegaEngine",
    "summary": "Class XOggSound Namespace OmegaEngine.Assets Assembly OmegaEngine.dll A sound loaded from an OGG Vorbis file. public class XOggSound : XSound, IReferenceCount, IDisposable, INamed, IComparable<Asset> Inheritance object Asset XSound XOggSound Implements IReferenceCount IDisposable INamed IComparable<Asset> Inherited Members XSound.SoundData XSound.SoundFormat XSound.Dispose(bool) Asset.Name Asset.ToString() Asset.ReferenceCount Asset.HoldReference() Asset.ReleaseReference() Asset.Disposed Asset.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors XOggSound(Stream) Loads a sound from an OGG file. protected XOggSound(Stream stream) Parameters stream Stream The OGG file to load the sound from. Remarks This should only be called by Get(Engine, string?) to prevent unnecessary duplicates. Exceptions InvalidDataException stream does not contain a valid Ogg Vorbis sound file. Methods Get(Engine, string?) Returns a cached XOggSound or creates a new one if the requested ID is not cached. public static XOggSound? Get(Engine engine, string? id) Parameters engine Engine The Engine providing the cache. id string The ID of the asset to be returned. Returns XOggSound The requested asset; null if id was empty. Remarks Remember to call Clean() when done, otherwise this object will never be released. Exceptions FileNotFoundException The specified file could not be found. IOException There was an error reading the file. UnauthorizedAccessException Read access to the file is not permitted. InvalidDataException The file does not contain valid Ogg Vorbis sound data."
  },
  "api/OmegaEngine.Assets.XSound.html": {
    "href": "api/OmegaEngine.Assets.XSound.html",
    "title": "Class XSound | OmegaEngine",
    "summary": "Class XSound Namespace OmegaEngine.Assets Assembly OmegaEngine.dll Abstract base class for sound assets. public abstract class XSound : Asset, IReferenceCount, IDisposable, INamed, IComparable<Asset> Inheritance object Asset XSound Implements IReferenceCount IDisposable INamed IComparable<Asset> Derived XOggSound XWaveSound Inherited Members Asset.Name Asset.ToString() Asset.ReferenceCount Asset.HoldReference() Asset.ReleaseReference() Asset.Disposed Asset.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties SoundData public Stream SoundData { get; protected set; } Property Value Stream SoundFormat public WaveFormat SoundFormat { get; protected set; } Property Value WaveFormat Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. Get(Engine, string?) Returns a cached XWaveSound or XOggSound (based on the file ending) or creates a new one if the requested ID is not cached. public static XSound? Get(Engine engine, string? id) Parameters engine Engine The Engine providing the cache. id string The ID of the asset to be returned. Returns XSound The requested asset; null if id was empty. Remarks Remember to call Clean() when done, otherwise this object will never be released. Exceptions FileNotFoundException The specified file could not be found. IOException There was an error reading the file. UnauthorizedAccessException Read access to the file is not permitted. InvalidDataException The file does not contain valid sound data."
  },
  "api/OmegaEngine.Assets.XTexture.html": {
    "href": "api/OmegaEngine.Assets.XTexture.html",
    "title": "Class XTexture | OmegaEngine",
    "summary": "Class XTexture Namespace OmegaEngine.Assets Assembly OmegaEngine.dll A texture loaded from one of DirectX's natively supported image formats (PNG, JPG, DDS, ...). public class XTexture : Asset, IDisposable, INamed, IComparable<Asset>, ITextureProvider, IReferenceCount Inheritance object Asset XTexture Implements IDisposable INamed IComparable<Asset> ITextureProvider IReferenceCount Inherited Members Asset.Name Asset.ToString() Asset.ReferenceCount Asset.HoldReference() Asset.ReleaseReference() Asset.Disposed Asset.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors XTexture(Engine, Stream) Loads a texture from an image file. protected XTexture(Engine engine, Stream stream) Parameters engine Engine The Engine providing rendering capabilities. stream Stream The image file to load the texture from. Remarks This should only be called by Get(Engine, string?, bool) to prevent unnecessary duplicates. Exceptions InvalidDataException stream does not contain a texture file. Properties Texture The SlimDX.Direct3D9.Texture inside this asset. public Texture Texture { get; } Property Value Texture Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. Get(Engine, string?, bool) Returns a cached XTexture or creates a new one if the requested ID is not cached. public static XTexture? Get(Engine engine, string? id, bool meshTexture = false) Parameters engine Engine The Engine providing the cache and rendering capabilities. id string The ID of the asset to be returned. meshTexture bool Shall the texture be loaded from the meshes directory instead of the textures directory? Returns XTexture The requested asset; null if id was empty. Remarks Remember to call Clean() when done, otherwise this object will never be released. Exceptions FileNotFoundException The specified file could not be found. IOException There was an error reading the file. UnauthorizedAccessException Read access to the file is not permitted. InvalidDataException The file does not contain a valid texture. Operators implicit operator Texture(XTexture) Convert a XTexture into its contained SlimDX.Direct3D9.Texture. public static implicit operator Texture(XTexture xTexture) Parameters xTexture XTexture Returns Texture"
  },
  "api/OmegaEngine.Assets.XWaveSound.html": {
    "href": "api/OmegaEngine.Assets.XWaveSound.html",
    "title": "Class XWaveSound | OmegaEngine",
    "summary": "Class XWaveSound Namespace OmegaEngine.Assets Assembly OmegaEngine.dll A sound loaded from a WAVE file. public class XWaveSound : XSound, IReferenceCount, IDisposable, INamed, IComparable<Asset> Inheritance object Asset XSound XWaveSound Implements IReferenceCount IDisposable INamed IComparable<Asset> Inherited Members XSound.SoundData XSound.SoundFormat XSound.Dispose(bool) Asset.Name Asset.ToString() Asset.ReferenceCount Asset.HoldReference() Asset.ReleaseReference() Asset.Disposed Asset.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors XWaveSound(Stream) Loads a sound from an WAVE file. protected XWaveSound(Stream stream) Parameters stream Stream The WAVE file to load the sound from. Remarks This should only be called by Get(Engine, string?) to prevent unnecessary duplicates. Exceptions InvalidDataException stream does not contain a valid WAVE sound file. Methods Get(Engine, string?) Returns a cached XWaveSound or creates a new one if the requested ID is not cached. public static XWaveSound? Get(Engine engine, string? id) Parameters engine Engine The Engine providing the cache. id string The ID of the asset to be returned. Returns XWaveSound The requested asset; null if id was empty. Remarks Remember to call Clean() when done, otherwise this object will never be released. Exceptions FileNotFoundException The specified file could not be found. IOException There was an error reading the file. UnauthorizedAccessException Read access to the file is not permitted. InvalidDataException The file does not contain valid WAVE sound data."
  },
  "api/OmegaEngine.Assets.html": {
    "href": "api/OmegaEngine.Assets.html",
    "title": "Namespace OmegaEngine.Assets | OmegaEngine",
    "summary": "Namespace OmegaEngine.Assets Loading and caching file-based assets (textures, models, etc.). Classes Asset Data loaded from a file and cached for use by one or more Renderables, Sounds, etc.. CacheManager Keeps a cache of Assets that have been loaded and provides type-safe access to them. XAnimatedMesh An animated mesh loaded from an .X file. XMesh A mesh loaded from an .X file. XOggSound A sound loaded from an OGG Vorbis file. XSound Abstract base class for sound assets. XTexture A texture loaded from one of DirectX's natively supported image formats (PNG, JPG, DDS, ...). XWaveSound A sound loaded from a WAVE file. Interfaces IReferenceCount Represents an object that tracks whether it is still needed by increasing and decreasing a reference counter."
  },
  "api/OmegaEngine.Audio.MusicManager.html": {
    "href": "api/OmegaEngine.Audio.MusicManager.html",
    "title": "Class MusicManager | OmegaEngine",
    "summary": "Class MusicManager Namespace OmegaEngine.Audio Assembly OmegaEngine.dll Manages the playback of Song in the background controlled by themes. public sealed class MusicManager : IDisposable Inheritance object MusicManager Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Playing Is music currently being played? public bool Playing { get; } Property Value bool Methods AddSong(string, params string[]) Adds a new song to the list public void AddSong(string id, params string[] themes) Parameters id string The file name of the song themes string[] The names of all themes the song is associated to Exceptions InvalidOperationException This song was already loaded. IOException There was a problem loading the song. Dispose() Disposes all Songs maintained by this MusicManager public void Dispose() ~MusicManager() protected ~MusicManager() LoadLibrary(string) Populates the music manager with songs listed in a library file public void LoadLibrary(string id) Parameters id string The ID of the library file to load PlaySong(string) Plays a specific song public void PlaySong(string id) Parameters id string The name of the song to play PlayTheme(string) Starts playing random songs from a certain theme public void PlayTheme(string theme) Parameters theme string The name of the new theme - must not be null Stop(bool) Stops the currently playing song public void Stop(bool fade) Parameters fade bool True to fade out the music instead of immediately cutting it off SwitchTheme(string?) Switches to a new theme, but doesn't interrupt the current song public void SwitchTheme(string? theme) Parameters theme string The name of the new theme; may be null Update() Plays the next song from the current theme (if any) if the last one stopped public void Update()"
  },
  "api/OmegaEngine.Audio.Song.html": {
    "href": "api/OmegaEngine.Audio.Song.html",
    "title": "Class Song | OmegaEngine",
    "summary": "Class Song Namespace OmegaEngine.Audio Assembly OmegaEngine.dll A streamed sound that is played in the background as music. public class Song : EngineElement, IDisposable, IAudio Inheritance object EngineElement Song Implements IDisposable IAudio Inherited Members EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Song(string) Loads a song from an OGG file public Song(string id) Parameters id string The OGG file to load the song from Exceptions IOException There was a problem loading the song. Properties ID The ID of this song public string ID { get; } Property Value string Looping Is this sound set to loop? public bool Looping { get; } Property Value bool Playing Is this sound currently being played? public bool Playing { get; } Property Value bool Volume The playback volume for the asset. public int Volume { get; set; } Property Value int Methods OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() StartPlayback(bool) Starts the song playback public void StartPlayback(bool looping) Parameters looping bool StopPlayback() Stops the song playback public void StopPlayback()"
  },
  "api/OmegaEngine.Audio.Sound.html": {
    "href": "api/OmegaEngine.Audio.Sound.html",
    "title": "Class Sound | OmegaEngine",
    "summary": "Class Sound Namespace OmegaEngine.Audio Assembly OmegaEngine.dll A memory-cached sound that is played on-demand. public class Sound : EngineElement, IDisposable, IAudio Inheritance object EngineElement Sound Implements IDisposable IAudio Derived Sound3D Inherited Members EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Sound(XSound) Sets up a new Sound based on an XSound asset. public Sound(XSound sound) Parameters sound XSound The XSound asset to get the audio data from. Fields Asset A reference to the asset providing the data for this sound. protected readonly XSound Asset Field Value XSound SoundBuffer The sound buffer containing the decoded data ready for playback. protected SecondarySoundBuffer SoundBuffer Field Value SecondarySoundBuffer Properties Looping Is this sound set to loop? public bool Looping { get; } Property Value bool Playing Is this sound currently being played? public bool Playing { get; } Property Value bool Volume The playback volume for the asset. public int Volume { get; set; } Property Value int Methods OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() StartPlayback(bool) Starts the sound playback public virtual void StartPlayback(bool looping) Parameters looping bool StopPlayback() Stops the sound playback public virtual void StopPlayback()"
  },
  "api/OmegaEngine.Audio.Sound3D.html": {
    "href": "api/OmegaEngine.Audio.Sound3D.html",
    "title": "Class Sound3D | OmegaEngine",
    "summary": "Class Sound3D Namespace OmegaEngine.Audio Assembly OmegaEngine.dll A memory-cached sound that is played on-demand simulating a position in 3D-space. public class Sound3D : Sound, IDisposable, IAudio, IPositionable Inheritance object EngineElement Sound Sound3D Implements IDisposable IAudio IPositionable Inherited Members Sound.Asset Sound.SoundBuffer Sound.Playing Sound.Looping Sound.Volume Sound.OnEngineSet() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Sound3D(XSound) Sets up a new Sound based on an XSound asset. public Sound3D(XSound sound) Parameters sound XSound The XSound asset to get the audio data from. Properties Position The sound's position in world space public DoubleVector3 Position { get; set; } Property Value DoubleVector3 Methods OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() StartPlayback(bool) Starts the sound playback public override void StartPlayback(bool looping) Parameters looping bool StopPlayback() Stops the sound playback public override void StopPlayback()"
  },
  "api/OmegaEngine.Audio.html": {
    "href": "api/OmegaEngine.Audio.html",
    "title": "Namespace OmegaEngine.Audio | OmegaEngine",
    "summary": "Namespace OmegaEngine.Audio 3D sound and music playback. Classes MusicManager Manages the playback of Song in the background controlled by themes. Song A streamed sound that is played in the background as music. Sound A memory-cached sound that is played on-demand. Sound3D A memory-cached sound that is played on-demand simulating a position in 3D-space."
  },
  "api/OmegaEngine.Collections.IPoolable-1.html": {
    "href": "api/OmegaEngine.Collections.IPoolable-1.html",
    "title": "Interface IPoolable<T> | OmegaEngine",
    "summary": "Interface IPoolable<T> Namespace OmegaEngine.Collections Assembly OmegaEngine.dll An interface items must implement to be addable to Pool<T>. Poolable items directly store a reference to their successor. public interface IPoolable<T> where T : class, IPoolable<T> Type Parameters T The type of items to store in Pool<T>. Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties NextElement A reference to the next element in the Pool<T> chain. T NextElement { get; set; } Property Value T"
  },
  "api/OmegaEngine.Collections.Pool-1.html": {
    "href": "api/OmegaEngine.Collections.Pool-1.html",
    "title": "Class Pool<T> | OmegaEngine",
    "summary": "Class Pool<T> Namespace OmegaEngine.Collections Assembly OmegaEngine.dll A very fast pseudo-collection (it does not implement IEnumerable<T>) that supports fast adding at the beginning. public sealed class Pool<T> : IPoolable<T> where T : class, IPoolable<T> Type Parameters T The type of items to store in the pool. Inheritance object Pool<T> Implements IPoolable<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks An item can always only be in one pool at any given time. Properties Count Gets the number of elements contained in the pool public int Count { get; } Property Value int The number of elements contained in the pool Methods Add(T) Adds an item to the beginning pool public void Add(T item) Parameters item T The object to add to the pool Exceptions ArgumentException item is already in a pool. Clear() Removes all items from the pool public void Clear() Contains(T) Determines whether the pool contains a specific value. public bool Contains(T item) Parameters item T The object to locate in the pool Returns bool true if item is found in the pool; otherwise, false. ForEach(Action<T>) Performs the specified action on each element of the pool public void ForEach(Action<T> action) Parameters action Action<T> A delegate to perform on each element of the pool Remove(T) Removes the first occurrence of a specific object from the pool public bool Remove(T item) Parameters item T The object to remove from the pool Returns bool true if item was successfully removed from the buffer list; otherwise, false. This method also returns false if item is not found in the original pool Remarks Not all too fast, try to avoid using this RemoveAll(Action<T>) Removes all the items in the buffer one-by-one, executing action after each removal. public void RemoveAll(Action<T> action) Parameters action Action<T> A delegate that is executed right after an item is removed. Remarks Ideal for moving all elements to a new data structure. RemoveFirst(Predicate<T>) Removes the first item in the buffer that satisfies the condition defined by predicate. public void RemoveFirst(Predicate<T> predicate) Parameters predicate Predicate<T> A delegate that defines the condition to check for. Remarks Ideal for selectively picking the first suitable element from the pool. RemoveWhere(Predicate<T>) Removes all the items in the buffer that satisfy the condition defined by predicate. public void RemoveWhere(Predicate<T> predicate) Parameters predicate Predicate<T> A delegate that defines the condition to check for. Remarks Ideal for selectively picking all suitable elements from the pool."
  },
  "api/OmegaEngine.Collections.html": {
    "href": "api/OmegaEngine.Collections.html",
    "title": "Namespace OmegaEngine.Collections | OmegaEngine",
    "summary": "Namespace OmegaEngine.Collections Specialized collection types supplementing . Classes Pool<T> A very fast pseudo-collection (it does not implement IEnumerable<T>) that supports fast adding at the beginning. Interfaces IPoolable<T> An interface items must implement to be addable to Pool<T>. Poolable items directly store a reference to their successor."
  },
  "api/OmegaEngine.DebugConsole.html": {
    "href": "api/OmegaEngine.DebugConsole.html",
    "title": "Class DebugConsole | OmegaEngine",
    "summary": "Class DebugConsole Namespace OmegaEngine Assembly OmegaEngine.dll Provides a generic debug console powered by the Log system and Lua scripting. public class DebugConsole : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form DebugConsole Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors DebugConsole(Lua) public DebugConsole(Lua lua) Parameters lua Lua Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/OmegaEngine.Engine.html": {
    "href": "api/OmegaEngine.Engine.html",
    "title": "Class Engine | OmegaEngine",
    "summary": "Class Engine Namespace OmegaEngine Assembly OmegaEngine.dll Provides central control for 3D rendering, sound management, asset caching, etc. public sealed class Engine : EngineElement, IDisposable Inheritance object EngineElement Engine Implements IDisposable Inherited Members EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods EngineUtilsAnimation.DimDown(Engine) EngineUtilsAnimation.DimUp(Engine) EngineUtilsAnimation.FadeIn(Engine) EngineUtilsAnimation.Interpolate(Engine, double, double, Action<double>, double, bool) EngineUtilsDraw.DrawBoundingBox(Engine, BoundingBox) EngineUtilsDraw.DrawBoundingSphere(Engine, BoundingSphere) EngineUtilsDraw.DrawQuadColored(Engine, Color) EngineUtilsDraw.DrawQuadShader(Engine) EngineUtilsDraw.DrawQuadTextured(Engine) EngineUtilsDraw.DrawRectangleOutline(Engine, Rectangle, Color) XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Engine(Control, EngineConfig) Initializes the Engine and its components. public Engine(Control target, EngineConfig config) Parameters target Control The Control the engine should draw onto. config EngineConfig Settings for initializing the engine. Exceptions NotSupportedException The graphics card does not meet the engine's minimum requirements. Direct3D9NotFoundException Throw if required DirectX version is missing. Direct3DX9NotFoundException Throw if required DirectX version is missing. Direct3D9Exception Internal errors occurred while initializing the graphics card. DirectSoundException Internal errors occurred while initializing the sound card. Properties Anisotropic Use anisotropic texture filtering public bool Anisotropic { get; set; } Property Value bool See Also Anisotropic AudioDevice The DirectSound device [LuaHide] public DirectSound AudioDevice { get; } Property Value DirectSound Cache The central cache used for all graphics and sound assets. public CacheManager Cache { get; } Property Value CacheManager Capabilities Methods for determining the rendering capabilities of the graphics hardware. public EngineCapabilities Capabilities { get; } Property Value EngineCapabilities Config The settings the engine was initialized with. public EngineConfig Config { get; set; } Property Value EngineConfig Remarks Changing this will cause the engine to reset on the next Render() call DefaultShader A shader used for default lighting public GeneralShader DefaultShader { get; } Property Value GeneralShader Device The Direct3D device. Use State instead of manipulating this directly when possible. [LuaHide] public Device Device { get; } Property Value Device Effects Turn specific rendering effects in the engine on or off. public EngineEffects Effects { get; } Property Value EngineEffects FadeExtra Is ExtraRender faded along with the scene? public bool FadeExtra { get; set; } Property Value bool FadeLevel The level of scene fading from 0 (fully visible) to 255 (invisible). public int FadeLevel { get; set; } Property Value int LastFrameGameTime How many seconds of game time have elapsed since the last frame started drawing. public double LastFrameGameTime { get; } Property Value double Music Controls the playback of music (theme-selection, cross-fading, etc.) public MusicManager Music { get; } Property Value MusicManager NeedsReset The engine will be reset on the next Render() call public bool NeedsReset { get; } Property Value bool Remarks Do not try to add new assets while this is true! Just run Render() to fix the problem. Performance Tracks the performance/speed of the engine. public EnginePerformance Performance { get; } Property Value EnginePerformance RenderSize The size of the render target public Size RenderSize { get; set; } Property Value Size RenderViewport The viewport for the render target public Viewport RenderViewport { get; } Property Value Viewport ResourceCulture The culture used for loading the assembly resources. public static CultureInfo ResourceCulture { get; set; } Property Value CultureInfo ShaderDir The base directory where shader files are stored public string ShaderDir { get; } Property Value string State Used by Renderable implementations to manipulate the graphics render state. Should not be manipulated manually. public EngineState State { get; } Property Value EngineState Target The Control the engine draws onto. [LuaHide] public Control Target { get; } Property Value Control TotalGameTime How many seconds of game time have elapsed in total. public double TotalGameTime { get; } Property Value double Version The version number of the engine. public static Version Version { get; } Property Value Version Views A list of all views to be rendered by the engine public ICollection<View> Views { get; } Property Value ICollection<View> Remarks Will be disposed when Dispose() is called. Methods Debug() Displays a debug interface for the engine, allowing easy manipulation of Views, Renderable, etc. public void Debug() DebugClose() Closes the windows displayed by Debug() public void DebugClose() OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() Render() Renders all Views. Tracks elapsed game time automatically. public void Render() Render(double, bool) Renders all Views. Uses external game time tracking. public void Render(double elapsedGameTime, bool noPresent = false) Parameters elapsedGameTime double How many seconds of game time have elapsed since the last frame was drawn. noPresent bool true to suppress actually displaying the render output at the end. Screenshot(string) Saves the current screen at its current resolution public void Screenshot(string filename) Parameters filename string The file name to save the screenshot too Screenshot(string, Size) Saves the current screen at a scaled resolution public void Screenshot(string filename, Size size) Parameters filename string The file name to save the screenshot too size Size The size to scale the resolution down too Screenshot(string, int, int) Saves the current screen at a scaled resolution as JPG public void Screenshot(string filename, int width, int height) Parameters filename string The file name to save the screenshot too width int The width to scale the resolution down too height int The height to scale the resolution down too Events DeviceLost Occurs after the Device was lost. This usually happens when switching to or from fullscreen mode. public event Action? DeviceLost Event Type Action DeviceReset Occurs after the Device was reset. This needs to be done to continue using it after DeviceLost. public event Action? DeviceReset Event Type Action ExtraRender Allows the integration of external render processes at the end of the Engine's presentation scheme. public event Action? ExtraRender Event Type Action PostRender Occurs once for every frame after rendering public event Action? PostRender Event Type Action PreRender Occurs once for every frame before rendering. public event Action? PreRender Event Type Action"
  },
  "api/OmegaEngine.EngineCapabilities.html": {
    "href": "api/OmegaEngine.EngineCapabilities.html",
    "title": "Class EngineCapabilities | OmegaEngine",
    "summary": "Class EngineCapabilities Namespace OmegaEngine Assembly OmegaEngine.dll Methods for determining the rendering capabilities of the graphics hardware. public sealed class EngineCapabilities Inheritance object EngineCapabilities Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Anisotropic Does the hardware the engine is running on support anisotropic texture filtering? public bool Anisotropic { get; } Property Value bool See Also Anisotropic DisplayModes A list of all supported monitor resolutions. public DisplayModeCollection DisplayModes { get; } Property Value DisplayModeCollection DoubleSampling Does the hardware the engine is running on support terrain texture double sampling? public bool DoubleSampling { get; } Property Value bool See Also DoubleSampling Hardware Information about the hardware of this computer. public Hardware Hardware { get; } Property Value Hardware HardwareVertexProcessing Does the graphics support hardware transformation and lighting? public bool HardwareVertexProcessing { get; } Property Value bool MaxAA The highest supported anti-aliasing level public int MaxAA { get; } Property Value int MaxShaderModel The maximum shader model version to be used (2.a is replaced by 2.0.1, 2.b is replaced by 2.0.2) public Version MaxShaderModel { get; } Property Value Version PerPixelEffects Does the hardware the engine is running on support per-pixel effects? public bool PerPixelEffects { get; } Property Value bool See Also PerPixelLighting NormalMapping PostScreenEffects PureDevice Does the graphics support rasterization, transform, lighting, and shading in hardware? public bool PureDevice { get; } Property Value bool SupportedAA A comma-separated list of all supported anti-aliasing levels public string SupportedAA { get; } Property Value string Methods CheckAA(int) Checks whether the graphics card supports a certain level of anti-aliasing public bool CheckAA(int sample) Parameters sample int The sample level to check Returns bool true if the level is supported CheckAA(int, int) Checks whether the graphics card supports a certain level of anti-aliasing public static bool CheckAA(int adapter, int sample) Parameters adapter int The adapter to check sample int The sample level to check Returns bool true if the level is supported CheckResolution(int, int) Checks whether the graphics card supports a certain monitor resolution public bool CheckResolution(int width, int height) Parameters width int The resolution width height int The resolution height Returns bool true if the level is supported CheckResolution(int, int, int) Checks whether the graphics card supports a certain monitor resolution public static bool CheckResolution(int adapter, int width, int height) Parameters adapter int The adapter to check width int The resolution width height int The resolution height Returns bool true if the level is supported"
  },
  "api/OmegaEngine.EngineConfig.html": {
    "href": "api/OmegaEngine.EngineConfig.html",
    "title": "Struct EngineConfig | OmegaEngine",
    "summary": "Struct EngineConfig Namespace OmegaEngine Assembly OmegaEngine.dll Stores settings for initializing Engine public struct EngineConfig Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Adapter The graphics adapter to use for rendering public int Adapter { readonly get; set; } Property Value int AntiAliasing The level of anti-aliasing to be employed public int AntiAliasing { readonly get; set; } Property Value int ForceShaderModel Forces the usage of a certain shader model version without checking the hardware capabilities - requires restart to become effective public Version? ForceShaderModel { readonly get; set; } Property Value Version Fullscreen Shall the engine run in fullscreen mode? public bool Fullscreen { readonly get; set; } Property Value bool TargetSize The size of the render target = the monitor resolution public Size TargetSize { readonly get; set; } Property Value Size VSync Should the framerate be locked to the monitor's vertical sync rate? public bool VSync { readonly get; set; } Property Value bool See Also Config"
  },
  "api/OmegaEngine.EngineEffects.html": {
    "href": "api/OmegaEngine.EngineEffects.html",
    "title": "Class EngineEffects | OmegaEngine",
    "summary": "Class EngineEffects Namespace OmegaEngine Assembly OmegaEngine.dll Turn specific rendering effects in the Engine on or off. public sealed class EngineEffects Inheritance object EngineEffects Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties DoubleSampling Sample terrain textures twice with different texture coordinates for better image quality public bool DoubleSampling { get; set; } Property Value bool See Also DoubleSampling NormalMapping Use normal mapping public bool NormalMapping { get; set; } Property Value bool See Also PerPixelEffects PerPixelLighting Use per-pixel lighting public bool PerPixelLighting { get; set; } Property Value bool See Also PerPixelEffects PostScreenEffects Use post-screen effects public bool PostScreenEffects { get; set; } Property Value bool See Also PerPixelEffects WaterEffects The effects to be display on water (e.g. reflections) public WaterEffectsType WaterEffects { get; set; } Property Value WaterEffectsType"
  },
  "api/OmegaEngine.EngineElement.html": {
    "href": "api/OmegaEngine.EngineElement.html",
    "title": "Class EngineElement | OmegaEngine",
    "summary": "Class EngineElement Namespace OmegaEngine Assembly OmegaEngine.dll A common base class for all objects that need an Engine instance. public abstract class EngineElement : IDisposable Inheritance object EngineElement Implements IDisposable Derived Song Sound Engine Renderable Scene Shader View Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Engine The Engine instance used by this object. Must be set before using the object. May not be changed once it has been set! [Browsable(false)] public Engine Engine { get; set; } Property Value Engine Exceptions InvalidOperationException Trying to read the engine before it has been set. IsDisposed Indicates whether this object has been disposed and can therefore no longer be used. [Browsable(false)] public bool IsDisposed { get; } Property Value bool IsEngineSet true if the Engine has been set. [Browsable(false)] public bool IsEngineSet { get; } Property Value bool Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~EngineElement() protected ~EngineElement() OnDispose() Hook that is called when the object needs to dispose its internal resources. protected virtual void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected virtual void OnEngineSet() RegisterChild(EngineElement?, bool) Registers a child EngineElement for automatic Engine setting and Dispose() calling. protected void RegisterChild(EngineElement? element, bool autoDispose = true) Parameters element EngineElement The EngineElement to register. Silently ignores null. autoDispose bool Controls whether the element is automatically disposed when Dispose() is called. Remarks This method is thread-safe. UnregisterChild(EngineElement?) Unregisters a child EngineElement (opposite of RegisterChild(EngineElement?, bool)). protected void UnregisterChild(EngineElement? element) Parameters element EngineElement The EngineElement to unregister. Silently ignores null."
  },
  "api/OmegaEngine.EnginePerformance.html": {
    "href": "api/OmegaEngine.EnginePerformance.html",
    "title": "Class EnginePerformance | OmegaEngine",
    "summary": "Class EnginePerformance Namespace OmegaEngine Assembly OmegaEngine.dll Tracks the performance/speed of the Engine. public sealed class EnginePerformance Inheritance object EnginePerformance Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Fps Frames per second; auto-calculated by the engine. public float Fps { get; } Property Value float FrameMs Average milliseconds per frame - auto-calculated by the engine. public float FrameMs { get; } Property Value float TotalFrames How many frames the engine has rendered since it was started. public long TotalFrames { get; } Property Value long Methods LogFrame(string, FrameLog) Logs a complete frame for performance profiling. public void LogFrame(string path, FrameLog logMode = FrameLog.CpuGpu) Parameters path string The path of the file to store the log in. logMode FrameLog Controls how the frame log is captured."
  },
  "api/OmegaEngine.EngineState.html": {
    "href": "api/OmegaEngine.EngineState.html",
    "title": "Class EngineState | OmegaEngine",
    "summary": "Class EngineState Namespace OmegaEngine Assembly OmegaEngine.dll Represents the current graphics render state of the Device. public sealed class EngineState Inheritance object EngineState Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields AdditivBlending Value for AlphaBlend to apply additive blending (use color map) public const int AdditivBlending = 257 Field Value int AlphaChannel Value for AlphaBlend to use alpha channel for transparency (augmented with alpha testing) public const int AlphaChannel = 256 Field Value int BinaryAlphaChannel Value for AlphaBlend to use alpha channel for binary alpha testing public const int BinaryAlphaChannel = -256 Field Value int Invisible Value for AlphaBlend to make something completely transparent (i.e., invisible) public const int Invisible = 255 Field Value int Opaque Value for AlphaBlend to use no alpha blending public const int Opaque = 0 Field Value int Properties AlphaBlend The level of transparency from 0 (solid) to 255 (invisible), AlphaChannel, BinaryAlphaChannel or AdditivBlending public int AlphaBlend { get; set; } Property Value int CullMode The current culling mode used for rendering public Cull CullMode { get; set; } Property Value Cull FfpLighting Controls whether fixed-function pipeline lighting is used at the moment instead of SurfaceShaders public bool FfpLighting { get; set; } Property Value bool FillMode Controls how vertexes are filled (normal, wireframe, dotted) public FillMode FillMode { get; set; } Property Value FillMode Fog Shall a linear fog effect be applied? public bool Fog { get; set; } Property Value bool FogColor The color of the fog public Color FogColor { get; set; } Property Value Color FogEnd The distance at which the linear fog shall have obscured everything public float FogEnd { get; set; } Property Value float FogStart The distance at which the linear fog shall start public float FogStart { get; set; } Property Value float ProjectionTransform The currently active projection transformation matrix public Matrix ProjectionTransform { get; set; } Property Value Matrix UserClipPlane The currently active user clip plane; default SlimDX.Plane for none public Plane UserClipPlane { get; set; } Property Value Plane Remarks When rendering without SurfaceShaders the clip plane must be in world space. When rendering with SurfaceShaders it must be in camera space. ViewTransform The currently active view transformation matrix public Matrix ViewTransform { get; set; } Property Value Matrix WorldTransform The currently active world transformation matrix public Matrix WorldTransform { get; set; } Property Value Matrix ZBufferMode Controls how the ZBuffer works public ZBufferMode ZBufferMode { get; set; } Property Value ZBufferMode Methods SetTexture(ITextureProvider) Sets the currently active texture for the first texture stage. public void SetTexture(ITextureProvider texture) Parameters texture ITextureProvider The object providing the texture. Remarks Corresponds to calling SetTexture(int, BaseTexture) with the texture stage parameter set to 0. SetVertexBuffer(VertexBuffer) Sets a SlimDX.Direct3D9.VertexBuffer with a fixed-function vertex format as the current active stream source. public void SetVertexBuffer(VertexBuffer buffer) Parameters buffer VertexBuffer The SlimDX.Direct3D9.VertexBuffer with a fixed-function vertex format."
  },
  "api/OmegaEngine.EngineUtilsAnimation.html": {
    "href": "api/OmegaEngine.EngineUtilsAnimation.html",
    "title": "Class EngineUtilsAnimation | OmegaEngine",
    "summary": "Class EngineUtilsAnimation Namespace OmegaEngine Assembly OmegaEngine.dll Provides simple animation helpers for the Engine. public static class EngineUtilsAnimation Inheritance object EngineUtilsAnimation Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DimDown(Engine) Dims in the screen down public static void DimDown(this Engine engine) Parameters engine Engine DimUp(Engine) Dims in the screen back up public static void DimUp(this Engine engine) Parameters engine Engine FadeIn(Engine) Fades in the screen from total black in one second public static void FadeIn(this Engine engine) Parameters engine Engine Interpolate(Engine, double, double, Action<double>, double, bool) Automatically interpolates between two numeric values while rendering public static void Interpolate(this Engine engine, double start, double target, Action<double> callback, double duration = 1, bool trigonometric = true) Parameters engine Engine The engine to use for rendering start double The value to start off with target double The value to end up at callback Action<double> The delegate to call for with the updated interpolated value each frame duration double The time for complete transition in seconds trigonometric bool true smooth (trigonometric) and false for linear interpolation"
  },
  "api/OmegaEngine.EngineUtilsDraw.html": {
    "href": "api/OmegaEngine.EngineUtilsDraw.html",
    "title": "Class EngineUtilsDraw | OmegaEngine",
    "summary": "Class EngineUtilsDraw Namespace OmegaEngine Assembly OmegaEngine.dll Provides simple draw helpers for the Engine. public static class EngineUtilsDraw Inheritance object EngineUtilsDraw Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DrawBoundingBox(Engine, BoundingBox) Display a SlimDX.BoundingBox as a wireframe model public static void DrawBoundingBox(this Engine engine, BoundingBox box) Parameters engine Engine The engine to use for rendering box BoundingBox The box to be display DrawBoundingSphere(Engine, BoundingSphere) Display a SlimDX.BoundingSphere as a wireframe model public static void DrawBoundingSphere(this Engine engine, BoundingSphere sphere) Parameters engine Engine The engine to use for rendering sphere BoundingSphere The sphere to be display DrawQuadColored(Engine, Color) Draws a colored quad filling the current SlimDX.Direct3D9.Viewport using TransformedColored - useful for fading public static void DrawQuadColored(this Engine engine, Color color) Parameters engine Engine The engine to use for rendering color Color The color of the quad DrawQuadShader(Engine) Draw a textured quad filling the current SlimDX.Direct3D9.Viewport using PositionTextured - useful for PostShader public static void DrawQuadShader(this Engine engine) Parameters engine Engine The engine to use for rendering DrawQuadTextured(Engine) Draw a textured quad filling the current SlimDX.Direct3D9.Viewport using TransformedTextured public static void DrawQuadTextured(this Engine engine) Parameters engine Engine The engine to use for rendering DrawRectangleOutline(Engine, Rectangle, Color) Draws a 2D colored rectangle outline public static void DrawRectangleOutline(this Engine engine, Rectangle rectangle, Color color) Parameters engine Engine The engine to use for rendering rectangle Rectangle The rectangle to draw color Color The color to draw the rectangle in"
  },
  "api/OmegaEngine.Foundation.Design.AngleControl.html": {
    "href": "api/OmegaEngine.Foundation.Design.AngleControl.html",
    "title": "Class AngleControl | OmegaEngine",
    "summary": "Class AngleControl Namespace OmegaEngine.Foundation.Design Assembly OmegaEngine.Foundation.dll Allows the input of angles between 0 and 360 degrees by clicking in a circle. public class AngleControl : UserControl, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl AngleControl Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.Dispose(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors AngleControl() public AngleControl() Properties Angle The angle between 0 and 360 degrees. public float Angle { get; set; } Property Value float Range An optional limit to the valid degree values. (Limits beyond 0° and 360° are ignored.) public FloatRangeAttribute? Range { get; set; } Property Value FloatRangeAttribute Methods OnMouseDown(MouseEventArgs) Raises the MouseDown event. protected override void OnMouseDown(MouseEventArgs e) Parameters e MouseEventArgs A MouseEventArgs that contains the event data. OnMouseMove(MouseEventArgs) Raises the MouseMove event. protected override void OnMouseMove(MouseEventArgs e) Parameters e MouseEventArgs A MouseEventArgs that contains the event data. OnPaint(PaintEventArgs) Raises the Paint event. protected override void OnPaint(PaintEventArgs e) Parameters e PaintEventArgs A PaintEventArgs that contains the event data."
  },
  "api/OmegaEngine.Foundation.Design.AngleEditor.html": {
    "href": "api/OmegaEngine.Foundation.Design.AngleEditor.html",
    "title": "Class AngleEditor | OmegaEngine",
    "summary": "Class AngleEditor Namespace OmegaEngine.Foundation.Design Assembly OmegaEngine.Foundation.dll An editor that can be associated with float properties representing angles between 0 and 360 degrees. Uses AngleControl. public class AngleEditor : FloatEditor Inheritance object UITypeEditor FloatEditor AngleEditor Inherited Members FloatEditor.GetEditStyle(ITypeDescriptorContext) FloatEditor.EditValue(ITypeDescriptorContext, IServiceProvider, object) UITypeEditor.EditValue(IServiceProvider, object) UITypeEditor.GetEditStyle() UITypeEditor.GetPaintValueSupported() UITypeEditor.PaintValue(object, Graphics, Rectangle) UITypeEditor.IsDropDownResizable object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods EditValue(float, FloatRangeAttribute, IWindowsFormsEditorService) Displays the UI to edit the float value. protected override float EditValue(float value, FloatRangeAttribute range, IWindowsFormsEditorService editorService) Parameters value float The current value. range FloatRangeAttribute The range of valid values the user can select. editorService IWindowsFormsEditorService The editor service used to display the dropdown control. Returns float The value set by the user. EditValue(float, IWindowsFormsEditorService) Displays the UI to edit the float value. protected override float EditValue(float value, IWindowsFormsEditorService editorService) Parameters value float The current value. editorService IWindowsFormsEditorService The editor service used to display the dropdown control. Returns float The value set by the user. GetPaintValueSupported(ITypeDescriptorContext?) Indicates whether the specified context supports painting a representation of an object's value within the specified context. public override bool GetPaintValueSupported(ITypeDescriptorContext? context) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that can be used to gain additional context information. Returns bool true if PaintValue(object, Graphics, Rectangle) is implemented; otherwise, false. PaintValue(PaintValueEventArgs) Paints a representation of the value of an object using the specified PaintValueEventArgs. public override void PaintValue(PaintValueEventArgs e) Parameters e PaintValueEventArgs A PaintValueEventArgs that indicates what to paint and where to paint it. See Also FloatRangeAttribute"
  },
  "api/OmegaEngine.Foundation.Design.CodeEditor.html": {
    "href": "api/OmegaEngine.Foundation.Design.CodeEditor.html",
    "title": "Class CodeEditor | OmegaEngine",
    "summary": "Class CodeEditor Namespace OmegaEngine.Foundation.Design Assembly OmegaEngine.Foundation.dll An editor that can be associated with string properties. Uses ICSharpCode.TextEditor.TextEditorControl. public class CodeEditor : UITypeEditor Inheritance object UITypeEditor CodeEditor Inherited Members UITypeEditor.EditValue(IServiceProvider, object) UITypeEditor.GetEditStyle() UITypeEditor.GetPaintValueSupported() UITypeEditor.GetPaintValueSupported(ITypeDescriptorContext) UITypeEditor.PaintValue(object, Graphics, Rectangle) UITypeEditor.PaintValue(PaintValueEventArgs) UITypeEditor.IsDropDownResizable object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods EditValue(ITypeDescriptorContext?, IServiceProvider?, object?) Edits the specified object's value using the editor style indicated by the GetEditStyle() method. public override object? EditValue(ITypeDescriptorContext? context, IServiceProvider? provider, object? value) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that can be used to gain additional context information. provider IServiceProvider An IServiceProvider that this editor can use to obtain services. value object The object to edit. Returns object The new value of the object. If the value of the object has not changed, this should return the same object it was passed. GetEditStyle(ITypeDescriptorContext?) Gets the editor style used by the EditValue(IServiceProvider, object) method. public override UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext? context) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that can be used to gain additional context information. Returns UITypeEditorEditStyle A UITypeEditorEditStyle value that indicates the style of editor used by the EditValue(IServiceProvider, object) method. If the UITypeEditor does not support this method, then GetEditStyle() will return None. See Also FileTypeAttribute"
  },
  "api/OmegaEngine.Foundation.Design.FileTypeAttribute.html": {
    "href": "api/OmegaEngine.Foundation.Design.FileTypeAttribute.html",
    "title": "Class FileTypeAttribute | OmegaEngine",
    "summary": "Class FileTypeAttribute Namespace OmegaEngine.Foundation.Design Assembly OmegaEngine.Foundation.dll Stores the file type describing the kind of data a property stores. Controls the behaviour of CodeEditor. [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field)] [PublicAPI] public sealed class FileTypeAttribute : Attribute, _Attribute Inheritance object Attribute FileTypeAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors FileTypeAttribute(string) Creates a new file type attribute. public FileTypeAttribute(string fileType) Parameters fileType string The name of the file type (e.g. XML, JavaScript, Lua). Properties FileType The name of the file type (e.g. XML, JavaScript, Lua). public string FileType { get; } Property Value string"
  },
  "api/OmegaEngine.Foundation.Design.FloatEditor.html": {
    "href": "api/OmegaEngine.Foundation.Design.FloatEditor.html",
    "title": "Class FloatEditor | OmegaEngine",
    "summary": "Class FloatEditor Namespace OmegaEngine.Foundation.Design Assembly OmegaEngine.Foundation.dll Abstract base class for drop-down PropertyGrid editors that can be associated with float properties. public abstract class FloatEditor : UITypeEditor Inheritance object UITypeEditor FloatEditor Derived AngleEditor SliderEditor Inherited Members UITypeEditor.EditValue(IServiceProvider, object) UITypeEditor.GetEditStyle() UITypeEditor.GetPaintValueSupported() UITypeEditor.GetPaintValueSupported(ITypeDescriptorContext) UITypeEditor.PaintValue(object, Graphics, Rectangle) UITypeEditor.PaintValue(PaintValueEventArgs) UITypeEditor.IsDropDownResizable object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods EditValue(ITypeDescriptorContext?, IServiceProvider?, object?) Edits the specified object's value using the editor style indicated by the GetEditStyle() method. public override object EditValue(ITypeDescriptorContext? context, IServiceProvider? provider, object? value) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that can be used to gain additional context information. provider IServiceProvider An IServiceProvider that this editor can use to obtain services. value object The object to edit. Returns object The new value of the object. If the value of the object has not changed, this should return the same object it was passed. EditValue(float, FloatRangeAttribute, IWindowsFormsEditorService) Displays the UI to edit the float value. protected abstract float EditValue(float value, FloatRangeAttribute range, IWindowsFormsEditorService editorService) Parameters value float The current value. range FloatRangeAttribute The range of valid values the user can select. editorService IWindowsFormsEditorService The editor service used to display the dropdown control. Returns float The value set by the user. EditValue(float, IWindowsFormsEditorService) Displays the UI to edit the float value. protected abstract float EditValue(float value, IWindowsFormsEditorService editorService) Parameters value float The current value. editorService IWindowsFormsEditorService The editor service used to display the dropdown control. Returns float The value set by the user. GetEditStyle(ITypeDescriptorContext?) Gets the editor style used by the EditValue(IServiceProvider, object) method. public override UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext? context) Parameters context ITypeDescriptorContext An ITypeDescriptorContext that can be used to gain additional context information. Returns UITypeEditorEditStyle A UITypeEditorEditStyle value that indicates the style of editor used by the EditValue(IServiceProvider, object) method. If the UITypeEditor does not support this method, then GetEditStyle() will return None."
  },
  "api/OmegaEngine.Foundation.Design.FloatRangeAttribute.html": {
    "href": "api/OmegaEngine.Foundation.Design.FloatRangeAttribute.html",
    "title": "Class FloatRangeAttribute | OmegaEngine",
    "summary": "Class FloatRangeAttribute Namespace OmegaEngine.Foundation.Design Assembly OmegaEngine.Foundation.dll Stores the minimum and maximum values allowed for a float field or property. Controls the behaviour of AngleEditor. [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field)] public sealed class FloatRangeAttribute : Attribute, _Attribute Inheritance object Attribute FloatRangeAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors FloatRangeAttribute(float, float) Creates a new float range attribute. public FloatRangeAttribute(float minimum, float maximum) Parameters minimum float The minimum value the field or property may have. maximum float The maximum value the field or property may have. Properties Maximum The maximum value the field or property may have. public float Maximum { get; } Property Value float Minimum The minimum value the field or property may have. public float Minimum { get; } Property Value float"
  },
  "api/OmegaEngine.Foundation.Design.SliderEditor.html": {
    "href": "api/OmegaEngine.Foundation.Design.SliderEditor.html",
    "title": "Class SliderEditor | OmegaEngine",
    "summary": "Class SliderEditor Namespace OmegaEngine.Foundation.Design Assembly OmegaEngine.Foundation.dll An editor that can be associated with float properties with values between 0 and 3 to provide a TrackBar interface. public class SliderEditor : FloatEditor Inheritance object UITypeEditor FloatEditor SliderEditor Inherited Members FloatEditor.GetEditStyle(ITypeDescriptorContext) FloatEditor.EditValue(ITypeDescriptorContext, IServiceProvider, object) UITypeEditor.EditValue(IServiceProvider, object) UITypeEditor.GetEditStyle() UITypeEditor.GetPaintValueSupported() UITypeEditor.GetPaintValueSupported(ITypeDescriptorContext) UITypeEditor.PaintValue(object, Graphics, Rectangle) UITypeEditor.PaintValue(PaintValueEventArgs) UITypeEditor.IsDropDownResizable object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods EditValue(float, FloatRangeAttribute, IWindowsFormsEditorService) Displays the UI to edit the float value. protected override float EditValue(float value, FloatRangeAttribute range, IWindowsFormsEditorService editorService) Parameters value float The current value. range FloatRangeAttribute The range of valid values the user can select. editorService IWindowsFormsEditorService The editor service used to display the dropdown control. Returns float The value set by the user. EditValue(float, IWindowsFormsEditorService) Displays the UI to edit the float value. protected override float EditValue(float value, IWindowsFormsEditorService editorService) Parameters value float The current value. editorService IWindowsFormsEditorService The editor service used to display the dropdown control. Returns float The value set by the user."
  },
  "api/OmegaEngine.Foundation.Design.html": {
    "href": "api/OmegaEngine.Foundation.Design.html",
    "title": "Namespace OmegaEngine.Foundation.Design | OmegaEngine",
    "summary": "Namespace OmegaEngine.Foundation.Design Helpers for WinForms data binding. Classes AngleControl Allows the input of angles between 0 and 360 degrees by clicking in a circle. AngleEditor An editor that can be associated with float properties representing angles between 0 and 360 degrees. Uses AngleControl. CodeEditor An editor that can be associated with string properties. Uses ICSharpCode.TextEditor.TextEditorControl. FileTypeAttribute Stores the file type describing the kind of data a property stores. Controls the behaviour of CodeEditor. FloatEditor Abstract base class for drop-down PropertyGrid editors that can be associated with float properties. FloatRangeAttribute Stores the minimum and maximum values allowed for a float field or property. Controls the behaviour of AngleEditor. SliderEditor An editor that can be associated with float properties with values between 0 and 3 to provide a TrackBar interface."
  },
  "api/OmegaEngine.Foundation.Geometry.ByteGrid.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.ByteGrid.html",
    "title": "Class ByteGrid | OmegaEngine",
    "summary": "Class ByteGrid Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll A 2D grid of byte values that can be stored in grayscale PNG files. public class ByteGrid : Grid<byte> Inheritance object Grid<byte> ByteGrid Inherited Members Grid<byte>.Data Grid<byte>.Width Grid<byte>.Height Grid<byte>.this[int, int] Grid<byte>.ClampedRead(int, int) Grid<byte>.Save(string) Grid<byte>.Save(Stream) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ByteGrid(byte[,]) A 2D grid of values that can be stored in PNG files. public ByteGrid(byte[,] data) Parameters data byte[,] Used as the internal array (no defensive copy). Do not modify once passing in! ByteGrid(int, int) Creates a new empty grid. public ByteGrid(int width, int height) Parameters width int The width of the grid (number of values along the X axis). height int The height of the grid (number of values along the Y axis). Methods GenerateBitmap() Generates a bitmap representation of the grid. public override Bitmap GenerateBitmap() Returns Bitmap IsInRange(float, float) Returns true if the specified coordinates are within the bounds of the grid. public bool IsInRange(float x, float y) Parameters x float y float Returns bool Load(Stream) Loads a grid from a PNG stream. public static ByteGrid Load(Stream stream) Parameters stream Stream Returns ByteGrid SampledRead(float, float) Performs bilinear interpolation to get values lying between discrete grid points. public float SampledRead(float x, float y) Parameters x float y float Returns float"
  },
  "api/OmegaEngine.Foundation.Geometry.ByteVector4.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.ByteVector4.html",
    "title": "Struct ByteVector4 | OmegaEngine",
    "summary": "Struct ByteVector4 Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll Defines a four-component vector with byte accuracy. public struct ByteVector4 : IEquatable<ByteVector4> Implements IEquatable<ByteVector4> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods VectorMath.ByteToAngle(ByteVector4) XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ByteVector4(byte, byte, byte, byte) Defines a four-component vector with byte accuracy. public ByteVector4(byte x, byte y, byte z, byte w) Parameters x byte The X component. y byte The Y component. z byte The Z component. w byte The W component. Properties W Gets or sets the W component of the vector. public byte W { readonly get; set; } Property Value byte X Gets or sets the X component of the vector. public byte X { readonly get; set; } Property Value byte Y Gets or sets the Y component of the vector. public byte Y { readonly get; set; } Property Value byte Z Gets or sets the Z component of the vector. public byte Z { readonly get; set; } Property Value byte Methods Equals(ByteVector4) Indicates whether the current object is equal to another object of the same type. public bool Equals(ByteVector4 other) Parameters other ByteVector4 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(ByteVector4, ByteVector4) public static bool operator ==(ByteVector4 left, ByteVector4 right) Parameters left ByteVector4 right ByteVector4 Returns bool operator !=(ByteVector4, ByteVector4) public static bool operator !=(ByteVector4 left, ByteVector4 right) Parameters left ByteVector4 right ByteVector4 Returns bool"
  },
  "api/OmegaEngine.Foundation.Geometry.ByteVector4Grid.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.ByteVector4Grid.html",
    "title": "Class ByteVector4Grid | OmegaEngine",
    "summary": "Class ByteVector4Grid Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll A 2D grid of ByteVector4 values that can be stored in ARGB PNG files. public class ByteVector4Grid : Grid<ByteVector4> Inheritance object Grid<ByteVector4> ByteVector4Grid Inherited Members Grid<ByteVector4>.Data Grid<ByteVector4>.Width Grid<ByteVector4>.Height Grid<ByteVector4>.this[int, int] Grid<ByteVector4>.ClampedRead(int, int) Grid<ByteVector4>.Save(string) Grid<ByteVector4>.Save(Stream) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ByteVector4Grid(ByteVector4[,]) A 2D grid of values that can be stored in PNG files. public ByteVector4Grid(ByteVector4[,] data) Parameters data ByteVector4[,] Used as the internal array (no defensive copy). Do not modify once passing in! ByteVector4Grid(int, int) Creates a new empty grid. public ByteVector4Grid(int width, int height) Parameters width int The width of the grid (number of values along the X axis). height int The height of the grid (number of values along the Y axis). Methods GenerateBitmap() Generates a bitmap representation of the grid. public override Bitmap GenerateBitmap() Returns Bitmap Load(Stream) Loads a grid from a PNG stream. public static ByteVector4Grid Load(Stream stream) Parameters stream Stream Returns ByteVector4Grid"
  },
  "api/OmegaEngine.Foundation.Geometry.DoublePlane.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.DoublePlane.html",
    "title": "Struct DoublePlane | OmegaEngine",
    "summary": "Struct DoublePlane Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll Defines a plane in three dimensions with double distance accuracy. [TypeConverter(typeof(DoublePlaneConverter))] public struct DoublePlane : IEquatable<DoublePlane> Implements IEquatable<DoublePlane> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors DoublePlane(DoubleVector3, Vector3) Defines a plane in three dimensions with double distance accuracy. public DoublePlane(DoubleVector3 point, Vector3 normal) Parameters point DoubleVector3 A point that lies along the plane. normal Vector3 The normal vector of the plane. Properties Normal The normal vector of the plane. public Vector3 Normal { get; set; } Property Value Vector3 Point A point that lies along the plane. public readonly DoubleVector3 Point { get; } Property Value DoubleVector3 Methods ApplyOffset(DoubleVector3) Returns a single-precision standard SlimDX.Plane after subtracting an offset value. public Plane ApplyOffset(DoubleVector3 offset) Parameters offset DoubleVector3 This value is subtracted from the double-precision data before it is casted to single-precision. Returns Plane The newly positioned SlimDX.Plane. Equals(DoublePlane) Indicates whether the current object is equal to another object of the same type. public bool Equals(DoublePlane other) Parameters other DoublePlane An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(DoublePlane, DoublePlane) public static bool operator ==(DoublePlane left, DoublePlane right) Parameters left DoublePlane right DoublePlane Returns bool operator !=(DoublePlane, DoublePlane) public static bool operator !=(DoublePlane left, DoublePlane right) Parameters left DoublePlane right DoublePlane Returns bool"
  },
  "api/OmegaEngine.Foundation.Geometry.DoubleVector3.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.DoubleVector3.html",
    "title": "Struct DoubleVector3 | OmegaEngine",
    "summary": "Struct DoubleVector3 Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll Defines a three-component vector with double accuracy. [TypeConverter(typeof(DoubleVector3Converter))] public struct DoubleVector3 : IEquatable<DoubleVector3> Implements IEquatable<DoubleVector3> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods VectorMath.RotateAroundAxis(DoubleVector3, DoubleVector3, double) XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors DoubleVector3(double, double, double) Creates a new vector. public DoubleVector3(double x, double y, double z) Parameters x double The X component. y double The Y component. z double The Z component. Properties X Gets or sets the X component of the vector. public double X { readonly get; set; } Property Value double Y Gets or sets the Y component of the vector. public double Y { readonly get; set; } Property Value double Z Gets or sets the Z component of the vector. public double Z { readonly get; set; } Property Value double Methods ApplyOffset(DoubleVector3) Returns a single-precision standard Vector3 after subtracting an offset value public Vector3 ApplyOffset(DoubleVector3 offset) Parameters offset DoubleVector3 This value is subtracting from the double-precision data before it is casted to single-precision Returns Vector3 The relative value CrossProduct(DoubleVector3) Calculates the cross product of this vector and other. public DoubleVector3 CrossProduct(DoubleVector3 other) Parameters other DoubleVector3 The second vector to calculate the cross product with. Returns DoubleVector3 DotProduct(DoubleVector3) Calculates the dot product of this vector and other. public double DotProduct(DoubleVector3 other) Parameters other DoubleVector3 The second vector to calculate the dot product with. Returns double Equals(DoubleVector3) Indicates whether the current object is equal to another object of the same type. public bool Equals(DoubleVector3 other) Parameters other DoubleVector3 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. Flatten() Maps X to X and Z to -Y. Drops Y. public Vector2 Flatten() Returns Vector2 GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Length() Calculates the length of the vector. public double Length() Returns double Normalize() Returns a copy of the vector scaled to a length of 1. public DoubleVector3 Normalize() Returns DoubleVector3 ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator +(DoubleVector3, DoubleVector3) Add DoubleVector3 to DoubleVector3 public static DoubleVector3 operator +(DoubleVector3 vector1, DoubleVector3 vector2) Parameters vector1 DoubleVector3 vector2 DoubleVector3 Returns DoubleVector3 operator +(DoubleVector3, Vector3) Add DoubleVector3 to SlimDX.Vector3 public static DoubleVector3 operator +(DoubleVector3 vector1, Vector3 vector2) Parameters vector1 DoubleVector3 vector2 Vector3 Returns DoubleVector3 operator +(Vector3, DoubleVector3) Add SlimDX.Vector3 to DoubleVector3 public static DoubleVector3 operator +(Vector3 vector1, DoubleVector3 vector2) Parameters vector1 Vector3 vector2 DoubleVector3 Returns DoubleVector3 operator /(DoubleVector3, double) Divide DoubleVector3 with double public static DoubleVector3 operator /(DoubleVector3 vector, double scalar) Parameters vector DoubleVector3 scalar double Returns DoubleVector3 operator /(DoubleVector3, float) Divide DoubleVector3 with float public static DoubleVector3 operator /(DoubleVector3 vector, float scalar) Parameters vector DoubleVector3 scalar float Returns DoubleVector3 operator ==(DoubleVector3, DoubleVector3) public static bool operator ==(DoubleVector3 left, DoubleVector3 right) Parameters left DoubleVector3 right DoubleVector3 Returns bool explicit operator Vector3(DoubleVector3) Convert DoubleVector3 into SlimDX.Vector3 public static explicit operator Vector3(DoubleVector3 vector) Parameters vector DoubleVector3 Returns Vector3 explicit operator DoubleVector3(Vector3) Convert SlimDX.Vector3 into DoubleVector3 public static explicit operator DoubleVector3(Vector3 vector) Parameters vector Vector3 Returns DoubleVector3 operator !=(DoubleVector3, DoubleVector3) public static bool operator !=(DoubleVector3 left, DoubleVector3 right) Parameters left DoubleVector3 right DoubleVector3 Returns bool operator *(DoubleVector3, double) Multiply DoubleVector3 with double public static DoubleVector3 operator *(DoubleVector3 vector, double scalar) Parameters vector DoubleVector3 scalar double Returns DoubleVector3 operator *(DoubleVector3, float) Multiply DoubleVector3 with float public static DoubleVector3 operator *(DoubleVector3 vector, float scalar) Parameters vector DoubleVector3 scalar float Returns DoubleVector3 operator *(double, DoubleVector3) Multiply DoubleVector3 with double public static DoubleVector3 operator *(double scalar, DoubleVector3 vector) Parameters scalar double vector DoubleVector3 Returns DoubleVector3 operator *(float, DoubleVector3) Multiply DoubleVector3 with float public static DoubleVector3 operator *(float scalar, DoubleVector3 vector) Parameters scalar float vector DoubleVector3 Returns DoubleVector3 operator -(DoubleVector3, DoubleVector3) Subtract DoubleVector3 from DoubleVector3 public static DoubleVector3 operator -(DoubleVector3 vector1, DoubleVector3 vector2) Parameters vector1 DoubleVector3 vector2 DoubleVector3 Returns DoubleVector3 operator -(DoubleVector3, Vector3) Subtract DoubleVector3 from SlimDX.Vector3 public static DoubleVector3 operator -(DoubleVector3 vector1, Vector3 vector2) Parameters vector1 DoubleVector3 vector2 Vector3 Returns DoubleVector3 operator -(Vector3, DoubleVector3) Subtract DoubleVector3 from SlimDX.Vector3 public static DoubleVector3 operator -(Vector3 vector1, DoubleVector3 vector2) Parameters vector1 Vector3 vector2 DoubleVector3 Returns DoubleVector3"
  },
  "api/OmegaEngine.Foundation.Geometry.ExpandableRectangleArray-1.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.ExpandableRectangleArray-1.html",
    "title": "Class ExpandableRectangleArray<T> | OmegaEngine",
    "summary": "Class ExpandableRectangleArray<T> Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll Builds a rectangle array that can grow in any direction. public class ExpandableRectangleArray<T> where T : struct Type Parameters T The type of elements to store in the array. Inheritance object ExpandableRectangleArray<T> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties TotalArea The total area the rectangle currently encompasses. public Rectangle TotalArea { get; } Property Value Rectangle Methods AddFirst(Point, T[,]) Insert a new subset array before any existing entries growing the rectangle as necessary. public void AddFirst(Point start, T[,] array) Parameters start Point The top-left coordinates of the area to insert the array into. array T[,] The array to insert. Do not modify this array after calling this method! AddLast(Point, T[,]) Insert a new subset array after any existing entries growing the rectangle as necessary. public void AddLast(Point start, T[,] array) Parameters start Point The top-left coordinates of the area to insert the array into. array T[,] The array to insert. Do not modify this array after calling this method! GetArray() Returns the smallest possible array that encompasses all inserted subsets. Blanks between subsets are filled with the default value for T. public T[,] GetArray() Returns T[,] An array containing the copyed data. Size will be determined by TotalArea. GetArray(Grid<T>) Returns the smallest possible array that encompasses all inserted subsets and can be backed by a base array. [Pure] public T[,] GetArray(Grid<T> baseValues) Parameters baseValues Grid<T> An array to query for values to fill the blanks left between subsets. Returns T[,] An array containing the copyed data. Size will be trimmed if baseValues is too small. GetArray(T[,]) Returns the smallest possible array that encompasses all inserted subsets and can be backed by a base array. public T[,] GetArray(T[,] baseValues) Parameters baseValues T[,] An array to query for values to fill the blanks left between subsets. Returns T[,] An array containing the copyed data. Size will be trimmed if baseValues is too small."
  },
  "api/OmegaEngine.Foundation.Geometry.Grid-1.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.Grid-1.html",
    "title": "Class Grid<T> | OmegaEngine",
    "summary": "Class Grid<T> Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll A 2D grid of values that can be stored in PNG files. public abstract class Grid<T> where T : struct Type Parameters T The type of values stored in the grid. Inheritance object Grid<T> Derived ByteGrid ByteVector4Grid NibbleGrid Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Grid(int, int) Creates a new empty grid. protected Grid(int width, int height) Parameters width int The width of the grid (number of values along the X axis). height int The height of the grid (number of values along the Y axis). Grid(T[,]) A 2D grid of values that can be stored in PNG files. protected Grid(T[,] data) Parameters data T[,] Used as the internal array (no defensive copy). Do not modify once passing in! Fields Data The internal array containing the values. protected readonly T[,] Data Field Value T[,] Properties Height The height of the grid (number of values along the Y axis). public int Height { get; } Property Value int this[int, int] public virtual T this[int x, int y] { get; set; } Parameters x int y int Property Value T Width The width of the grid (number of values along the X axis). public int Width { get; } Property Value int Methods ClampedRead(int, int) Reads a value in the grid and automatically clamps out of bound values of x or y. public T ClampedRead(int x, int y) Parameters x int y int Returns T GenerateBitmap() Generates a bitmap representation of the grid. public abstract Bitmap GenerateBitmap() Returns Bitmap Save(Stream) Saves the grid to a PNG stream. public void Save(Stream stream) Parameters stream Stream Save(string) Saves the grid to a PNG file. public void Save(string path) Parameters path string"
  },
  "api/OmegaEngine.Foundation.Geometry.NibbleGrid.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.NibbleGrid.html",
    "title": "Class NibbleGrid | OmegaEngine",
    "summary": "Class NibbleGrid Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll A 2D grid of nibble (half a byte / 4 bits) values that can be stored in 16 colors PNG files. public class NibbleGrid : Grid<byte> Inheritance object Grid<byte> NibbleGrid Inherited Members Grid<byte>.Data Grid<byte>.Width Grid<byte>.Height Grid<byte>.ClampedRead(int, int) Grid<byte>.Save(string) Grid<byte>.Save(Stream) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors NibbleGrid(byte[,]) A 2D grid of values that can be stored in PNG files. public NibbleGrid(byte[,] data) Parameters data byte[,] Used as the internal array (no defensive copy). Do not modify once passing in! NibbleGrid(int, int) Creates a new empty grid. public NibbleGrid(int width, int height) Parameters width int The width of the grid (number of values along the X axis). height int The height of the grid (number of values along the Y axis). Properties this[int, int] Gets or sets a value in the grid. public override byte this[int x, int y] { get; set; } Parameters x int y int Property Value byte Exceptions IndexOutOfRangeException x or y are out of bounds. ArgumentOutOfRangeException A value larger than 15 is set. Methods GenerateBitmap() Generates a bitmap representation of the grid. public override Bitmap GenerateBitmap() Returns Bitmap Load(Stream) Loads a grid from a PNG stream. public static NibbleGrid Load(Stream stream) Parameters stream Stream Returns NibbleGrid Exceptions ArgumentOutOfRangeException Any of the colors in the imag is not part of the classic 16 colors palette."
  },
  "api/OmegaEngine.Foundation.Geometry.Quadrangle.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.Quadrangle.html",
    "title": "Struct Quadrangle | OmegaEngine",
    "summary": "Struct Quadrangle Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll A 2D polygon consisting of four points. [TypeConverter(typeof(QuadrangleConverter))] public readonly struct Quadrangle : IEquatable<Quadrangle> Implements IEquatable<Quadrangle> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Quadrangle(Vector2, Vector2, Vector2, Vector2) A 2D polygon consisting of four points. public Quadrangle(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4) Parameters p1 Vector2 p2 Vector2 p3 Vector2 p4 Vector2 Quadrangle(RectangleF) Creates a new quadrangle from a simple rectangle. public Quadrangle(RectangleF rectangle) Parameters rectangle RectangleF Quadrangle(float, float, float, float, float, float, float, float) Creates a new quadrangle. Counter-clockwise ordering is recommended. public Quadrangle(float p1X, float p1Y, float p2X, float p2Y, float p3X, float p3Y, float p4X, float p4Y) Parameters p1X float p1Y float p2X float p2Y float p3X float p3Y float p4X float p4Y float Properties Edge1 The edge from P1 to P2. public Vector2Ray Edge1 { get; } Property Value Vector2Ray Edge2 The edge from P2 to P3. public Vector2Ray Edge2 { get; } Property Value Vector2Ray Edge3 The edge from P3 to P4. public Vector2Ray Edge3 { get; } Property Value Vector2Ray Edge4 The edge from P4 to P1. public Vector2Ray Edge4 { get; } Property Value Vector2Ray P1 The coordinates of the first point; counter-clockwise ordering recommended. public Vector2 P1 { get; } Property Value Vector2 P2 The coordinates of the second point; counter-clockwise ordering recommended. public Vector2 P2 { get; } Property Value Vector2 P3 The coordinates of the third point; counter-clockwise ordering recommended. public Vector2 P3 { get; } Property Value Vector2 P4 The coordinates of the fourth point; counter-clockwise ordering recommended. public Vector2 P4 { get; } Property Value Vector2 Methods Equals(Quadrangle) Indicates whether the current object is equal to another object of the same type. public bool Equals(Quadrangle other) Parameters other Quadrangle An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. IntersectCircle(float) If the points are stored counter-clockwise and form a convex polygon, this will test if a circle with the origin (0;0) lies inside it. public bool IntersectCircle(float radius) Parameters radius float The rectangle to test for intersection. Returns bool true if the circle lies within the quadrangle. IntersectWith(Quadrangle) This will test if two quadrangles intersect with each other. Only works if both quadrangles are counter-clockwise and form a convex polygon. public bool IntersectWith(Quadrangle quadrangle) Parameters quadrangle Quadrangle The other quadrangle to test for intersection. Returns bool true if quadrangle intersects with this quadrangle. IntersectWith(Vector2) If the points are stored counter-clockwise and form a convex polygon, this will test if a point lies inside it. public bool IntersectWith(Vector2 point) Parameters point Vector2 The point to test for intersection. Returns bool true if point lies within the quadrangle. IntersectWith(RectangleF) If the points are stored counter-clockwise and form a convex polygon, this will test if a rectangle lies inside it. public bool IntersectWith(RectangleF rectangle) Parameters rectangle RectangleF The rectangle to test for intersection. Returns bool true if rectangle lies within the quadrangle. Offset(Vector2) Returns a new Quadrangle shifted by distance. public Quadrangle Offset(Vector2 distance) Parameters distance Vector2 This value is added to each corner position. Returns Quadrangle The shifted Quadrangle. Rotate(float) Returns a new Quadrangle rotated by rotation around the origin. public Quadrangle Rotate(float rotation) Parameters rotation float The angle to rotate by in degrees. Returns Quadrangle The rotated Quadrangle. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Quadrangle, Quadrangle) public static bool operator ==(Quadrangle left, Quadrangle right) Parameters left Quadrangle right Quadrangle Returns bool operator !=(Quadrangle, Quadrangle) public static bool operator !=(Quadrangle left, Quadrangle right) Parameters left Quadrangle right Quadrangle Returns bool"
  },
  "api/OmegaEngine.Foundation.Geometry.Vector2Ray.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.Vector2Ray.html",
    "title": "Struct Vector2Ray | OmegaEngine",
    "summary": "Struct Vector2Ray Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll Defines a ray in two dimensions, specified by a starting position and a direction. [TypeConverter(typeof(Vector2RayConverter))] public struct Vector2Ray : IEquatable<Vector2Ray> Implements IEquatable<Vector2Ray> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Vector2Ray(Vector2, Vector2) Defines a ray in two dimensions, specified by a starting position and a direction. public Vector2Ray(Vector2 position, Vector2 direction) Parameters position Vector2 A point along the ray. direction Vector2 A unit vector specifying the direction in which the ray is pointing (automatically normalized). Properties Direction A unit vector specifying the direction in which the ray is pointing (automatically normalized). public Vector2 Direction { get; set; } Property Value Vector2 Position A point along the ray. public readonly Vector2 Position { get; } Property Value Vector2 Methods Equals(Vector2Ray) Indicates whether the current object is equal to another object of the same type. public bool Equals(Vector2Ray other) Parameters other Vector2Ray An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Vector2Ray, Vector2Ray) public static bool operator ==(Vector2Ray left, Vector2Ray right) Parameters left Vector2Ray right Vector2Ray Returns bool operator !=(Vector2Ray, Vector2Ray) public static bool operator !=(Vector2Ray left, Vector2Ray right) Parameters left Vector2Ray right Vector2Ray Returns bool"
  },
  "api/OmegaEngine.Foundation.Geometry.VectorMath.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.VectorMath.html",
    "title": "Class VectorMath | OmegaEngine",
    "summary": "Class VectorMath Namespace OmegaEngine.Foundation.Geometry Assembly OmegaEngine.Foundation.dll Math helpers related to vectors. public static class VectorMath Inheritance object VectorMath Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods ByteToAngle(ByteVector4) Maps a vector of 0-255 byte values to a vector of 0�-180� angles in radians. [Pure] public static Vector4 ByteToAngle(this ByteVector4 vector) Parameters vector ByteVector4 Returns Vector4 ByteToAngle(byte) Maps a 0-255 byte value to a 0�-180� angle in radians. [Pure] public static double ByteToAngle(this byte b) Parameters b byte Returns double InterpolateTrigonometric(float, params Vector4[]) Performs smooth (trigonometric) interpolation between two or more values [Pure] public static Vector4 InterpolateTrigonometric(float factor, params Vector4[] values) Parameters factor float A factor between 0 and values.Length values Vector4[] The value checkpoints Returns Vector4 Lerp(DoubleVector3, DoubleVector3, double) Performs linear interpolation between two vectors. [Pure] public static DoubleVector3 Lerp(DoubleVector3 vector1, DoubleVector3 vector2, double factor) Parameters vector1 DoubleVector3 The starting vector. vector2 DoubleVector3 The ending vector. factor double Interpolation factor between 0 and 1. Returns DoubleVector3 The interpolated vector. Rotate(Vector2, float) Rotates a SlimDX.Vector2 by rotation around the origin. [Pure] public static Vector2 Rotate(this Vector2 value, float rotation) Parameters value Vector2 The original vector. rotation float The angle to rotate by in degrees. Returns Vector2 The rotated SlimDX.Vector2. RotateAroundAxis(DoubleVector3, DoubleVector3, double) Rotates a DoubleVector3 around an arbitrary axis. public static DoubleVector3 RotateAroundAxis(this DoubleVector3 value, DoubleVector3 axis, double rotation) Parameters value DoubleVector3 The original vector. axis DoubleVector3 The axis to rotate around. rotation double The angle to rotate by in degrees. Returns DoubleVector3 The rotated DoubleVector3. UnitVector(double, double) Calculates a unit vector using spherical coordinates. [Pure] public static Vector3 UnitVector(double inclination, double azimuth) Parameters inclination double Angle away from positive Z axis in radians. Values from 0 to Pi. azimuth double Angle away from positive X axis in radians. Values from 0 to 2*Pi. Returns Vector3"
  },
  "api/OmegaEngine.Foundation.Geometry.html": {
    "href": "api/OmegaEngine.Foundation.Geometry.html",
    "title": "Namespace OmegaEngine.Foundation.Geometry | OmegaEngine",
    "summary": "Namespace OmegaEngine.Foundation.Geometry Data structures describing geometric constructs like grids, vectors and planes. Classes ByteGrid A 2D grid of byte values that can be stored in grayscale PNG files. ByteVector4Grid A 2D grid of ByteVector4 values that can be stored in ARGB PNG files. ExpandableRectangleArray<T> Builds a rectangle array that can grow in any direction. Grid<T> A 2D grid of values that can be stored in PNG files. NibbleGrid A 2D grid of nibble (half a byte / 4 bits) values that can be stored in 16 colors PNG files. VectorMath Math helpers related to vectors. Structs ByteVector4 Defines a four-component vector with byte accuracy. DoublePlane Defines a plane in three dimensions with double distance accuracy. DoubleVector3 Defines a three-component vector with double accuracy. Quadrangle A 2D polygon consisting of four points. Vector2Ray Defines a ray in two dimensions, specified by a starting position and a direction."
  },
  "api/OmegaEngine.Foundation.Light.Attenuation.html": {
    "href": "api/OmegaEngine.Foundation.Light.Attenuation.html",
    "title": "Struct Attenuation | OmegaEngine",
    "summary": "Struct Attenuation Namespace OmegaEngine.Foundation.Light Assembly OmegaEngine.Foundation.dll Factors describing the attenuation of light intensity over distance. [TypeConverter(typeof(AttenuationConverter))] public struct Attenuation : IEquatable<Attenuation> Implements IEquatable<Attenuation> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Attenuation(float, float, float) Creates a new attenuation structure public Attenuation(float constant, float linear, float quadratic) Parameters constant float A constant factor multiplied with the color. linear float A constant factor multiplied with the color and the inverse distance. quadratic float A constant factor multiplied with the color and the inverse distance squared. Fields None Value for no attenuation over distance. public static readonly Attenuation None Field Value Attenuation Properties Constant A constant factor multiplied with the color. public float Constant { readonly get; set; } Property Value float Linear A constant factor multiplied with the color and the inverse distance. public float Linear { readonly get; set; } Property Value float Quadratic A constant factor multiplied with the color and the inverse distance squared. public float Quadratic { readonly get; set; } Property Value float Methods Equals(Attenuation) Indicates whether the current object is equal to another object of the same type. public bool Equals(Attenuation other) Parameters other Attenuation An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Attenuation, Attenuation) public static bool operator ==(Attenuation left, Attenuation right) Parameters left Attenuation right Attenuation Returns bool explicit operator Vector4(Attenuation) Convert Attenuation into SlimDX.Vector4 public static explicit operator Vector4(Attenuation attenuation) Parameters attenuation Attenuation Returns Vector4 explicit operator Attenuation(Vector4) Convert SlimDX.Vector4 into Attenuation public static explicit operator Attenuation(Vector4 vector) Parameters vector Vector4 Returns Attenuation operator !=(Attenuation, Attenuation) public static bool operator !=(Attenuation left, Attenuation right) Parameters left Attenuation right Attenuation Returns bool"
  },
  "api/OmegaEngine.Foundation.Light.ColorCorrection.html": {
    "href": "api/OmegaEngine.Foundation.Light.ColorCorrection.html",
    "title": "Struct ColorCorrection | OmegaEngine",
    "summary": "Struct ColorCorrection Namespace OmegaEngine.Foundation.Light Assembly OmegaEngine.Foundation.dll Color correction values for use in post-processing. [TypeConverter(typeof(ColorCorrectionConverter))] public struct ColorCorrection : IEquatable<ColorCorrection> Implements IEquatable<ColorCorrection> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ColorCorrection(float, float, float, float) Creates a new color correction structure. public ColorCorrection(float brightness = 1, float contrast = 1, float saturation = 1, float hue = 0) Parameters brightness float How bright the picture should be - values between 0 (black) and 5 (5x normal). contrast float The contrast level of the picture - values between -5 and 5. saturation float The color saturation level of the picture - values between -5 and 5. hue float The color hue rotation of the picture - values between 0 and 360. Fields Default No color change. public static readonly ColorCorrection Default Field Value ColorCorrection Properties Brightness How bright the picture should be - values between 0 (black) and 5 (5x normal). public float Brightness { get; set; } Property Value float Contrast The contrast level of the picture - values between -5 and 5. public float Contrast { get; set; } Property Value float Hue The color hue rotation of the picture - values between 0 and 360. public float Hue { get; set; } Property Value float Saturation The color saturation level of the picture - values between -5 and 5. public float Saturation { get; set; } Property Value float Methods Equals(ColorCorrection) Indicates whether the current object is equal to another object of the same type. public bool Equals(ColorCorrection other) Parameters other ColorCorrection An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. SinusInterpolate(float, params ColorCorrection[]) Performs smooth (sinus-based) interpolation between two or more value sets. [Pure] public static ColorCorrection SinusInterpolate(float factor, params ColorCorrection[] values) Parameters factor float A factor between 0 and values.Length. values ColorCorrection[] The value checkpoints. Returns ColorCorrection ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(ColorCorrection, ColorCorrection) public static bool operator ==(ColorCorrection left, ColorCorrection right) Parameters left ColorCorrection right ColorCorrection Returns bool explicit operator Vector4(ColorCorrection) Convert ColorCorrection into SlimDX.Vector4 public static explicit operator Vector4(ColorCorrection correction) Parameters correction ColorCorrection Returns Vector4 explicit operator ColorCorrection(Vector4) Convert SlimDX.Vector4 into see ColorCorrection public static explicit operator ColorCorrection(Vector4 vector) Parameters vector Vector4 Returns ColorCorrection operator !=(ColorCorrection, ColorCorrection) public static bool operator !=(ColorCorrection left, ColorCorrection right) Parameters left ColorCorrection right ColorCorrection Returns bool"
  },
  "api/OmegaEngine.Foundation.Light.ColorUtils.html": {
    "href": "api/OmegaEngine.Foundation.Light.ColorUtils.html",
    "title": "Class ColorUtils | OmegaEngine",
    "summary": "Class ColorUtils Namespace OmegaEngine.Foundation.Light Assembly OmegaEngine.Foundation.dll Convert colors to different formats, interpolate, invert, ... public static class ColorUtils Inheritance object ColorUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods DropAlpha(Color) Removes the alpha channel from the color (setting it to full opacity). [Pure] public static Color DropAlpha(this Color color) Parameters color Color Returns Color EqualsIgnoreAlpha(Color, Color) Compares two colors ignoring the alpha channel and the name [Pure] public static bool EqualsIgnoreAlpha(this Color color1, Color color2) Parameters color1 Color color2 Color Returns bool Interpolate(float, Color, Color) Interpolates between two colors [Pure] public static Color Interpolate(float factor, Color color1, Color color2) Parameters factor float The proportion of the two colors between 0 (only first color) and 1 (only second color) color1 Color The first color value color2 Color The second color value Returns Color"
  },
  "api/OmegaEngine.Foundation.Light.WaterEffectsType.html": {
    "href": "api/OmegaEngine.Foundation.Light.WaterEffectsType.html",
    "title": "Enum WaterEffectsType | OmegaEngine",
    "summary": "Enum WaterEffectsType Namespace OmegaEngine.Foundation.Light Assembly OmegaEngine.Foundation.dll The effects to be display on water (e.g. reflections). public enum WaterEffectsType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields None = 0 Don't apply any water effects (except simple alpha-blending) ReflectAll = 3 Refract objects below the water surface and reflect objects above ReflectTerrain = 2 Refract objects below the water surface and reflect the terrain RefractionOnly = 1 Refract objects below the water surface"
  },
  "api/OmegaEngine.Foundation.Light.XColor.html": {
    "href": "api/OmegaEngine.Foundation.Light.XColor.html",
    "title": "Struct XColor | OmegaEngine",
    "summary": "Struct XColor Namespace OmegaEngine.Foundation.Light Assembly OmegaEngine.Foundation.dll Stores ARGB-colors as byte values but also surfaces them as float values. public struct XColor : IEquatable<XColor> Implements IEquatable<XColor> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks This class can be used to serialize ARGB-color values (unlike Color all fields are writable). It provides implicit casts to and from Color. Constructors XColor(byte, byte, byte, byte) Stores ARGB-colors as byte values but also surfaces them as float values. public XColor(byte a, byte r, byte g, byte b) Parameters a byte r byte g byte b byte Remarks This class can be used to serialize ARGB-color values (unlike Color all fields are writable). It provides implicit casts to and from Color. XColor(float, float, float, float) public XColor(float red, float green, float blue, float alpha) Parameters red float green float blue float alpha float Properties A public byte A { readonly get; set; } Property Value byte Alpha public float Alpha { get; set; } Property Value float B public byte B { readonly get; set; } Property Value byte Blue public float Blue { get; set; } Property Value float G public byte G { readonly get; set; } Property Value byte Green public float Green { get; set; } Property Value float R public byte R { readonly get; set; } Property Value byte Red public float Red { get; set; } Property Value float Methods DropAlpha() Removes the alpha channel from the color (setting it to full opacity). [Pure] public XColor DropAlpha() Returns XColor Equals(XColor) Indicates whether the current object is equal to another object of the same type. public bool Equals(XColor other) Parameters other XColor An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToColor4() [Pure] public Color4 ToColor4() Returns Color4 ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(XColor, XColor) public static bool operator ==(XColor color1, XColor color2) Parameters color1 XColor color2 XColor Returns bool operator ==(XColor, Color) public static bool operator ==(XColor color1, Color color2) Parameters color1 XColor color2 Color Returns bool operator ==(Color, XColor) public static bool operator ==(Color color1, XColor color2) Parameters color1 Color color2 XColor Returns bool implicit operator Color(XColor) public static implicit operator Color(XColor color) Parameters color XColor Returns Color implicit operator XColor(Color) public static implicit operator XColor(Color color) Parameters color Color Returns XColor operator !=(XColor, XColor) public static bool operator !=(XColor color1, XColor color2) Parameters color1 XColor color2 XColor Returns bool operator !=(XColor, Color) public static bool operator !=(XColor color1, Color color2) Parameters color1 XColor color2 Color Returns bool operator !=(Color, XColor) public static bool operator !=(Color color1, XColor color2) Parameters color1 Color color2 XColor Returns bool"
  },
  "api/OmegaEngine.Foundation.Light.html": {
    "href": "api/OmegaEngine.Foundation.Light.html",
    "title": "Namespace OmegaEngine.Foundation.Light | OmegaEngine",
    "summary": "Namespace OmegaEngine.Foundation.Light Data structures describing lighting concepts such as color, attenuation and reflection. Classes ColorUtils Convert colors to different formats, interpolate, invert, ... Structs Attenuation Factors describing the attenuation of light intensity over distance. ColorCorrection Color correction values for use in post-processing. XColor Stores ARGB-colors as byte values but also surfaces them as float values. Enums WaterEffectsType The effects to be display on water (e.g. reflections)."
  },
  "api/OmegaEngine.Foundation.RandomUtils.html": {
    "href": "api/OmegaEngine.Foundation.RandomUtils.html",
    "title": "Class RandomUtils | OmegaEngine",
    "summary": "Class RandomUtils Namespace OmegaEngine.Foundation Assembly OmegaEngine.Foundation.dll Provides helper methods for creating different types of variables with random content. public static class RandomUtils Inheritance object RandomUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetRandomColor(Color, Color) Get a random color value between limit1 and limit2 [Pure] public static Color GetRandomColor(Color limit1, Color limit2) Parameters limit1 Color One limit for the color values limit2 Color The other limit for the color values Returns Color GetRandomDouble(double, double) Get a random double value between min and max [Pure] public static double GetRandomDouble(double min, double max) Parameters min double The minimum value max double The maximum value Returns double GetRandomFloat(float, float) Get a random float value between min and max [Pure] public static float GetRandomFloat(float min, float max) Parameters min float The minimum value max float The maximum value Returns float GetRandomInt(int, int) Get random a integer value [Pure] public static int GetRandomInt(int min, int max) Parameters min int The minimum value max int The maximum value Returns int GetRandomPointInsideSphere(float) Get a random Vector3 value that lies within a sphere with the given radius public static Vector3 GetRandomPointInsideSphere(float radius) Parameters radius float Returns Vector3 GetRandomVector3(Vector3, Vector3) Get a random Vector3 value between min and max [Pure] public static Vector3 GetRandomVector3(Vector3 min, Vector3 max) Parameters min Vector3 minimum for each component max Vector3 maximum for each component Returns Vector3"
  },
  "api/OmegaEngine.Foundation.Storage.ContentManager.html": {
    "href": "api/OmegaEngine.Foundation.Storage.ContentManager.html",
    "title": "Class ContentManager | OmegaEngine",
    "summary": "Class ContentManager Namespace OmegaEngine.Foundation.Storage Assembly OmegaEngine.Foundation.dll Provides a virtual file system for combining data from multiple directories (useful for modding). public static class ContentManager Inheritance object ContentManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields EnvVarNameBaseDir The name of an environment variable that can be used to configure the content manager. [PublicAPI] public const string EnvVarNameBaseDir = \"OMEGAENGINE_CONTENT\" Field Value string EnvVarNameModDir The name of an environment variable that can be used to configure the content manager. [PublicAPI] public const string EnvVarNameModDir = \"OMEGAENGINE_CONTENT_MOD\" Field Value string Properties BaseDir The base directory where content files are stored. public static DirectoryInfo BaseDir { get; set; } Property Value DirectoryInfo Remarks You can use the environment variable EnvVarNameBaseDir to set this value. When using the environment variable, you can also specify multiple directories to be overlaid. This property will then only expose the last directory. Exceptions DirectoryNotFoundException The specified directory could not be found. ModDir A directory overriding the base directory for creating mods. null if there is no active mod. public static DirectoryInfo? ModDir { get; set; } Property Value DirectoryInfo Remarks You can use the environment variable EnvVarNameModDir to set this value. When using the environment variable, you can also specify multiple directories to be overlaid. This property will then only expose the last directory. Exceptions DirectoryNotFoundException The specified directory could not be found. Methods CreateDirPath(string) Creates a path for a content directory (using the ModDir if available). public static string CreateDirPath(string type) Parameters type string The type of file (e.g. Textures, Sounds, ...). Returns string The absolute path to the requested directory. Exceptions DirectoryNotFoundException The specified directory could not be found. CreateFilePath(string, string) Creates a path for a content file (using ModDir if available). public static string CreateFilePath(string type, string id) Parameters type string The type of file (e.g. Textures, Sounds, ...). id string The file name of the content. Returns string The absolute path to the requested content file. DeleteModFile(string, string) Deletes a file in ModDir. Will not touch files in BaseDir. public static void DeleteModFile(string type, string id) Parameters type string The type of file (e.g. Textures, Sounds, ...). id string The file name of the content. Exceptions InvalidOperationException ModDir is not set. FileNotFoundException The specified file could not be found. IOException The specified file could not be deleted. UnauthorizedAccessException You have insufficient rights to delete the file. FileExists(string, string) Checks whether a certain content file exists. public static bool FileExists(string type, string id) Parameters type string The type of file (e.g. Textures, Sounds, ...). id string The file name of the content. Returns bool true if the requested content file exists. GetFileList(string, string) Gets a list of all files of a certain type public static NamedCollection<FileEntry> GetFileList(string type, string extension) Parameters type string The type of files you want (e.g. Textures, Sounds, ...) extension string The file extension to so search for Returns NamedCollection<FileEntry> A collection of strings with file IDs GetFilePath(string, string) Gets the file path for a content file public static string GetFilePath(string type, string id) Parameters type string The type of file (e.g. Textures, Sounds, ...). id string The file name of the content. Returns string The absolute path to the requested content file Exceptions FileNotFoundException The specified file could not be found. GetFileStream(string, string) Gets a reading stream for a content file public static Stream GetFileStream(string type, string id) Parameters type string The type of file (e.g. Textures, Sounds, ...). id string The file name of the content. Returns Stream The absolute path to the requested content file Exceptions FileNotFoundException The specified file could not be found. IOException There was an error reading the file. UnauthorizedAccessException Read access to the file is not permitted."
  },
  "api/OmegaEngine.Foundation.Storage.EmbeddedFile.html": {
    "href": "api/OmegaEngine.Foundation.Storage.EmbeddedFile.html",
    "title": "Struct EmbeddedFile | OmegaEngine",
    "summary": "Struct EmbeddedFile Namespace OmegaEngine.Foundation.Storage Assembly OmegaEngine.Foundation.dll Information about an additional file to be stored alongside an ZIP archive using XmlStorage. public struct EmbeddedFile Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors EmbeddedFile(string, Action<Stream>) Creates a new XML ZIP entry for reading public EmbeddedFile(string filename, Action<Stream> readDelegate) Parameters filename string The filename in the archive readDelegate Action<Stream> The delegate to be called when the data is ready to be read EmbeddedFile(string, int, Action<Stream>) Creates a new XML ZIP entry for writing public EmbeddedFile(string filename, int compressionLevel, Action<Stream> writeDelegate) Parameters filename string The filename in the archive compressionLevel int The level of compression (0-9) to apply to this entry writeDelegate Action<Stream> The delegate to be called when the data is ready to be written Properties CompressionLevel The level of compression (0-9) to apply to this entry public readonly int CompressionLevel { get; } Property Value int Filename The filename in the archive public readonly string Filename { get; } Property Value string StreamDelegate The delegate to be called when the data is ready to be read/written to/form a stream public readonly Action<Stream> StreamDelegate { get; } Property Value Action<Stream>"
  },
  "api/OmegaEngine.Foundation.Storage.FileEntry.html": {
    "href": "api/OmegaEngine.Foundation.Storage.FileEntry.html",
    "title": "Class FileEntry | OmegaEngine",
    "summary": "Class FileEntry Namespace OmegaEngine.Foundation.Storage Assembly OmegaEngine.Foundation.dll Describes a file returned by GetFileList(string, string). public sealed class FileEntry : INamed, IHighlightColor, IContextMenu, IEquatable<FileEntry>, IComparable<FileEntry> Inheritance object FileEntry Implements INamed IHighlightColor IContextMenu IEquatable<FileEntry> IComparable<FileEntry> Inherited Members object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties EntryType The kind of file entry this is (in relation to its mod status). public FileEntryType EntryType { get; set; } Property Value FileEntryType FileType The type of file (e.g. Textures, Sounds, ...). public string FileType { get; } Property Value string Remarks This is only used for file operations and not for sorting! HighlightColor The color to highlight this file entry with in list representations. Empty for Normal (no highlighting). Blue for Modified. Green for Added. Red for Deleted. public Color HighlightColor { get; } Property Value Color Name The relative file path. public string Name { get; set; } Property Value string Methods Equals(FileEntry?) Indicates whether the current object is equal to another object of the same type. public bool Equals(FileEntry? other) Parameters other FileEntry An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetContextMenu() Returns the context menu for this file entry; can be null. public ContextMenuStrip? GetContextMenu() Returns ContextMenuStrip GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/OmegaEngine.Foundation.Storage.FileEntryType.html": {
    "href": "api/OmegaEngine.Foundation.Storage.FileEntryType.html",
    "title": "Enum FileEntryType | OmegaEngine",
    "summary": "Enum FileEntryType Namespace OmegaEngine.Foundation.Storage Assembly OmegaEngine.Foundation.dll public enum FileEntryType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Added = 2 The file is not present in the main game and was added by a mod. Deleted = 3 The file was originally added by a mod but has now been deleted. Modified = 1 The file is present in the main game and was modified/overwritten by a mod. Normal = 0 The file is present in the main game and was not modified by a mod. See Also EntryType"
  },
  "api/OmegaEngine.Foundation.Storage.XmlStorageConfig.html": {
    "href": "api/OmegaEngine.Foundation.Storage.XmlStorageConfig.html",
    "title": "Class XmlStorageConfig | OmegaEngine",
    "summary": "Class XmlStorageConfig Namespace OmegaEngine.Foundation.Storage Assembly OmegaEngine.Foundation.dll Global configuration for XmlStorage. public static class XmlStorageConfig Inheritance object XmlStorageConfig Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Apply() Applies the configuration to XmlStorage. public static void Apply() Remarks Must be called before XmlStorage is used."
  },
  "api/OmegaEngine.Foundation.Storage.XmlZipStorage.html": {
    "href": "api/OmegaEngine.Foundation.Storage.XmlZipStorage.html",
    "title": "Class XmlZipStorage | OmegaEngine",
    "summary": "Class XmlZipStorage Namespace OmegaEngine.Foundation.Storage Assembly OmegaEngine.Foundation.dll Provides easy serialization to XML files wrapped in ZIP archives. public static class XmlZipStorage Inheritance object XmlZipStorage Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods LoadXmlZip<T>(Stream, string?, params EmbeddedFile[]) Loads an object from an XML file embedded in a ZIP archive. public static T LoadXmlZip<T>(Stream stream, string? password = null, params EmbeddedFile[] additionalFiles) where T : class Parameters stream Stream The ZIP archive to load. password string The password to use for decryption; null for no encryption. additionalFiles EmbeddedFile[] Additional files stored alongside the XML file in the ZIP archive to be read. Returns T The loaded object. Type Parameters T The type of object the XML stream shall be converted into. Exceptions ZipException A problem occurred while reading the ZIP data or if password is wrong. InvalidDataException A problem occurred while deserializing the XML data. LoadXmlZip<T>(string, string?, params EmbeddedFile[]) Loads an object from an XML file embedded in a ZIP archive. public static T LoadXmlZip<T>(string path, string? password = null, params EmbeddedFile[] additionalFiles) where T : class Parameters path string The ZIP archive to load. password string The password to use for decryption; null for no encryption. additionalFiles EmbeddedFile[] Additional files stored alongside the XML file in the ZIP archive to be read. Returns T The loaded object. Type Parameters T The type of object the XML stream shall be converted into. Remarks Uses AtomicRead internally. Exceptions IOException A problem occurred while reading the file. UnauthorizedAccessException Read access to the file is not permitted. ZipException A problem occurred while reading the ZIP data or if password is wrong. InvalidDataException A problem occurred while deserializing the XML data. SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) Saves an object in an XML file embedded in a ZIP archive. public static void SaveXmlZip<T>(this T data, Stream stream, string? password = null, params EmbeddedFile[] additionalFiles) where T : notnull Parameters data T The object to be stored. stream Stream The ZIP archive to be written. password string The password to use for encryption; null for no encryption. additionalFiles EmbeddedFile[] Additional files to be stored alongside the XML file in the ZIP archive; can be null. Type Parameters T The type of object to be saved in an XML stream. SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Saves an object in an XML file embedded in a ZIP archive. public static void SaveXmlZip<T>(this T data, string path, string? password = null, params EmbeddedFile[] additionalFiles) where T : notnull Parameters data T The object to be stored. path string The ZIP archive to be written. password string The password to use for encryption; null for no encryption. additionalFiles EmbeddedFile[] Additional files to be stored alongside the XML file in the ZIP archive; can be null. Type Parameters T The type of object to be saved in an XML stream. Remarks Uses AtomicWrite internally. Exceptions IOException A problem occurred while writing the file. UnauthorizedAccessException Write access to the file is not permitted."
  },
  "api/OmegaEngine.Foundation.Storage.html": {
    "href": "api/OmegaEngine.Foundation.Storage.html",
    "title": "Namespace OmegaEngine.Foundation.Storage | OmegaEngine",
    "summary": "Namespace OmegaEngine.Foundation.Storage Storage subsystem with virtual filesystem and serialization. Classes ContentManager Provides a virtual file system for combining data from multiple directories (useful for modding). FileEntry Describes a file returned by GetFileList(string, string). XmlStorageConfig Global configuration for XmlStorage. XmlZipStorage Provides easy serialization to XML files wrapped in ZIP archives. Structs EmbeddedFile Information about an additional file to be stored alongside an ZIP archive using XmlStorage. Enums FileEntryType"
  },
  "api/OmegaEngine.Foundation.html": {
    "href": "api/OmegaEngine.Foundation.html",
    "title": "Namespace OmegaEngine.Foundation | OmegaEngine",
    "summary": "Namespace OmegaEngine.Foundation Rendering-agnostic infrastructure used by OmegaEngine. NuGet package: OmegaEngine.Foundation Namespaces OmegaEngine.Foundation.Design Helpers for WinForms data binding. OmegaEngine.Foundation.Geometry Data structures describing geometric constructs like grids, vectors and planes. OmegaEngine.Foundation.Light Data structures describing lighting concepts such as color, attenuation and reflection. OmegaEngine.Foundation.Storage Storage subsystem with virtual filesystem and serialization. Classes RandomUtils Provides helper methods for creating different types of variables with random content."
  },
  "api/OmegaEngine.FrameLog.html": {
    "href": "api/OmegaEngine.FrameLog.html",
    "title": "Enum FrameLog | OmegaEngine",
    "summary": "Enum FrameLog Namespace OmegaEngine Assembly OmegaEngine.dll public enum FrameLog Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields CpuGpu = 2 Create a log of the frame stalling the GPU pipeline, measuring the CPU and GPU load CpuOnly = 1 Create a log of the frame without stalling the GPU pipeline, measuring only the CPU load Off = 0 Do not create a log of the frame See Also LogFrame(string, FrameLog)"
  },
  "api/OmegaEngine.Graphics.Cameras.Camera.html": {
    "href": "api/OmegaEngine.Graphics.Cameras.Camera.html",
    "title": "Class Camera | OmegaEngine",
    "summary": "Class Camera Namespace OmegaEngine.Graphics.Cameras Assembly OmegaEngine.dll Determines the perspective from which a Scene is displayed. public abstract class Camera : IPositionable Inheritance object Camera Implements IPositionable Derived CloneCamera MatrixCamera QuaternionCamera Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields PositionBaseCached protected DoubleVector3 PositionBaseCached Field Value DoubleVector3 PositionCached protected DoubleVector3 PositionCached Field Value DoubleVector3 ProjectionDirty Does OmegaEngine.Graphics.Cameras.Camera._projection need to be recalculated? protected bool ProjectionDirty Field Value bool SimpleViewCached protected Matrix SimpleViewCached Field Value Matrix ViewCached protected Matrix ViewCached Field Value Matrix ViewDirty Does ViewCached need to be recalculated? protected bool ViewDirty Field Value bool ViewFrustumDirty Does the view frustum need to be recalculated? protected bool ViewFrustumDirty Field Value bool Properties ClipPlane A custom clip plane behind which all objects are culled public DoublePlane ClipPlane { get; set; } Property Value DoublePlane CylindricalBillboard A rotation matrix for a faked cylindrical billboard effect protected Matrix CylindricalBillboard { get; } Property Value Matrix FarClip Maximum distance of objects to the camera public float FarClip { get; set; } Property Value float FieldOfView The view angle in degrees public float FieldOfView { get; set; } Property Value float FrustumCulling Shall the engine use view frustum culling to optimize the rendering performance? public bool FrustumCulling { get; set; } Property Value bool Name Text value to make it easier to identify a particular camera public string? Name { get; set; } Property Value string NearClip Minimum distance of objects to the camera public float NearClip { get; set; } Property Value float Position The camera's position in 3D-space public DoubleVector3 Position { get; set; } Property Value DoubleVector3 PositionBase A value that is subtracted from all positions (including the Camera's) before handing them to the graphics hardware public DoubleVector3 PositionBase { get; set; } Property Value DoubleVector3 Remarks Used to improve floating-point precision by keeping effective values small See Also IPositionableOffset SimpleView A left-handed view matrix with absolutely no translation information protected Matrix SimpleView { get; } Property Value Matrix SphericalBillboard A rotation matrix for a faked spherical billboard effect protected Matrix SphericalBillboard { get; } Property Value Matrix View A left-handed view matrix for the current camera setting protected Matrix View { get; } Property Value Matrix ViewInverse An inverted view matrix for the current camera setting protected Matrix ViewInverse { get; } Property Value Matrix ViewInverseTranspose An inverted and transposed view matrix for the current camera setting protected Matrix ViewInverseTranspose { get; } Property Value Matrix ViewTranspose A transposed view matrix for the current camera setting protected Matrix ViewTranspose { get; } Property Value Matrix Methods CacheSpecialMatrices() Calculate cached versions of special matrices (e.g. ViewInverse calculated from View) protected void CacheSpecialMatrices() PerspectiveChange(float, float, float, float) Called when the user changes the view perspective. public abstract void PerspectiveChange(float panX, float panY, float rotation, float zoom) Parameters panX float The number of pixels panned along the X-axis divided by the number of pixels of the longest side of the viewport. panY float The number of pixels panned along the Y-axis divided by the number of pixels of the longest side of the viewport. rotation float Horizontal rotation in degrees. zoom float Scaling factor; 1 for no change, must not be 0. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. UpdateProjection() Update OmegaEngine.Graphics.Cameras.Camera.Projection if necessary protected virtual void UpdateProjection() UpdateView() Update cached versions of View and related matrices if necessary protected abstract void UpdateView() See Also Camera"
  },
  "api/OmegaEngine.Graphics.Cameras.CinematicCamera.html": {
    "href": "api/OmegaEngine.Graphics.Cameras.CinematicCamera.html",
    "title": "Class CinematicCamera | OmegaEngine",
    "summary": "Class CinematicCamera Namespace OmegaEngine.Graphics.Cameras Assembly OmegaEngine.dll A camera that cinematically swings from one view to another. public class CinematicCamera : QuaternionCamera, IPositionable Inheritance object Camera QuaternionCamera CinematicCamera Implements IPositionable Inherited Members QuaternionCamera.ViewQuat Camera.ViewDirty Camera.ProjectionDirty Camera.ViewFrustumDirty Camera.Name Camera.ToString() Camera.PositionCached Camera.Position Camera.PositionBaseCached Camera.PositionBase Camera.ViewCached Camera.View Camera.SimpleViewCached Camera.SimpleView Camera.ViewInverse Camera.ViewTranspose Camera.ViewInverseTranspose Camera.SphericalBillboard Camera.CylindricalBillboard Camera.FieldOfView Camera.NearClip Camera.FarClip Camera.ClipPlane Camera.FrustumCulling Camera.CacheSpecialMatrices() Camera.UpdateProjection() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks \"Cinematic\" means that the movement starts slowly, speeds up dramatically and then slows down again before reaching the target. Constructors CinematicCamera(DoubleVector3, DoubleVector3, Quaternion, Quaternion, float, Engine) Creates a new cinematic camera for the engine public CinematicCamera(DoubleVector3 sourcePosition, DoubleVector3 targetPosition, Quaternion sourceQuat, Quaternion targetQuat, float duration, Engine engine) Parameters sourcePosition DoubleVector3 The initial camera position targetPosition DoubleVector3 The target camera position sourceQuat Quaternion The initial view as a quaternion targetQuat Quaternion The target view as a quaternion duration float The complete transition time in seconds engine Engine The Engine containing this camera Properties Moving Is this CinematicCamera currently moving? public bool Moving { get; } Property Value bool Methods PerspectiveChange(float, float, float, float) Called when the user changes the view perspective. public override void PerspectiveChange(float panX, float panY, float rotation, float zoom) Parameters panX float The number of pixels panned along the X-axis divided by the number of pixels of the longest side of the viewport. panY float The number of pixels panned along the Y-axis divided by the number of pixels of the longest side of the viewport. rotation float Horizontal rotation in degrees. zoom float Scaling factor; 1 for no change, must not be 0. UpdateView() Update cached versions of View and related matrices protected override void UpdateView()"
  },
  "api/OmegaEngine.Graphics.Cameras.CloneCamera.html": {
    "href": "api/OmegaEngine.Graphics.Cameras.CloneCamera.html",
    "title": "Class CloneCamera | OmegaEngine",
    "summary": "Class CloneCamera Namespace OmegaEngine.Graphics.Cameras Assembly OmegaEngine.dll A camera that imitates the perspective of another Camera. public class CloneCamera : Camera, IPositionable Inheritance object Camera CloneCamera Implements IPositionable Derived ReflectCamera Inherited Members Camera.ViewDirty Camera.ProjectionDirty Camera.ViewFrustumDirty Camera.Name Camera.ToString() Camera.PositionCached Camera.Position Camera.PositionBaseCached Camera.PositionBase Camera.ViewCached Camera.View Camera.SimpleViewCached Camera.SimpleView Camera.ViewInverse Camera.ViewTranspose Camera.ViewInverseTranspose Camera.SphericalBillboard Camera.CylindricalBillboard Camera.FieldOfView Camera.NearClip Camera.FarClip Camera.ClipPlane Camera.FrustumCulling Camera.CacheSpecialMatrices() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors CloneCamera(Camera) A camera that imitates the perspective of another Camera. public CloneCamera(Camera parentCamera) Parameters parentCamera Camera The parent camera to track Properties ParentCamera The parent camera to track public Camera ParentCamera { get; set; } Property Value Camera Methods PerspectiveChange(float, float, float, float) Called when the user changes the view perspective. public override void PerspectiveChange(float panX, float panY, float rotation, float zoom) Parameters panX float The number of pixels panned along the X-axis divided by the number of pixels of the longest side of the viewport. panY float The number of pixels panned along the Y-axis divided by the number of pixels of the longest side of the viewport. rotation float Horizontal rotation in degrees. zoom float Scaling factor; 1 for no change, must not be 0. UpdateProjection() Update cached versions of OmegaEngine.Graphics.Cameras.Camera.Projection and related matrices protected override void UpdateProjection() UpdateView() Update cached versions of View and related matrices protected override void UpdateView()"
  },
  "api/OmegaEngine.Graphics.Cameras.MatrixCamera.html": {
    "href": "api/OmegaEngine.Graphics.Cameras.MatrixCamera.html",
    "title": "Class MatrixCamera | OmegaEngine",
    "summary": "Class MatrixCamera Namespace OmegaEngine.Graphics.Cameras Assembly OmegaEngine.dll A camera that internally uses matrixes for representing rotations. public abstract class MatrixCamera : Camera, IPositionable Inheritance object Camera MatrixCamera Implements IPositionable Derived StrategyCamera TrackCamera Inherited Members Camera.ViewDirty Camera.ProjectionDirty Camera.ViewFrustumDirty Camera.Name Camera.ToString() Camera.PositionCached Camera.Position Camera.PositionBaseCached Camera.PositionBase Camera.ViewCached Camera.View Camera.SimpleViewCached Camera.SimpleView Camera.ViewInverse Camera.ViewTranspose Camera.ViewInverseTranspose Camera.SphericalBillboard Camera.CylindricalBillboard Camera.FieldOfView Camera.NearClip Camera.FarClip Camera.ClipPlane Camera.FrustumCulling Camera.PerspectiveChange(float, float, float, float) Camera.CacheSpecialMatrices() Camera.UpdateProjection() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Target The position the camera is looking at. public virtual DoubleVector3 Target { get; set; } Property Value DoubleVector3 UpVector A vector indicating the up-direction public Vector3 UpVector { get; protected set; } Property Value Vector3 Methods UpdateView() Update cached versions of View and related matrices; abstract, to be overwritten in subclass. protected override void UpdateView()"
  },
  "api/OmegaEngine.Graphics.Cameras.QuaternionCamera.html": {
    "href": "api/OmegaEngine.Graphics.Cameras.QuaternionCamera.html",
    "title": "Class QuaternionCamera | OmegaEngine",
    "summary": "Class QuaternionCamera Namespace OmegaEngine.Graphics.Cameras Assembly OmegaEngine.dll A camera that internally uses quaternions for representing rotations. public abstract class QuaternionCamera : Camera, IPositionable Inheritance object Camera QuaternionCamera Implements IPositionable Derived CinematicCamera Inherited Members Camera.ViewDirty Camera.ProjectionDirty Camera.ViewFrustumDirty Camera.Name Camera.ToString() Camera.PositionCached Camera.Position Camera.PositionBaseCached Camera.PositionBase Camera.ViewCached Camera.View Camera.SimpleViewCached Camera.SimpleView Camera.ViewInverse Camera.ViewTranspose Camera.ViewInverseTranspose Camera.SphericalBillboard Camera.CylindricalBillboard Camera.FieldOfView Camera.NearClip Camera.FarClip Camera.ClipPlane Camera.FrustumCulling Camera.PerspectiveChange(float, float, float, float) Camera.CacheSpecialMatrices() Camera.UpdateProjection() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties ViewQuat The current camera view as a quaternion [Browsable(false)] public Quaternion ViewQuat { get; set; } Property Value Quaternion Methods UpdateView() Update cached versions of View and related matrices; abstract, to be overwritten in subclass. protected override void UpdateView()"
  },
  "api/OmegaEngine.Graphics.Cameras.ReflectCamera.html": {
    "href": "api/OmegaEngine.Graphics.Cameras.ReflectCamera.html",
    "title": "Class ReflectCamera | OmegaEngine",
    "summary": "Class ReflectCamera Namespace OmegaEngine.Graphics.Cameras Assembly OmegaEngine.dll A camera that reflects the perspective of another Camera along a plane. public class ReflectCamera : CloneCamera, IPositionable Inheritance object Camera CloneCamera ReflectCamera Implements IPositionable Inherited Members CloneCamera.ParentCamera CloneCamera.PerspectiveChange(float, float, float, float) CloneCamera.UpdateProjection() Camera.ViewDirty Camera.ProjectionDirty Camera.ViewFrustumDirty Camera.Name Camera.ToString() Camera.PositionCached Camera.Position Camera.PositionBaseCached Camera.PositionBase Camera.ViewCached Camera.View Camera.SimpleViewCached Camera.SimpleView Camera.ViewInverse Camera.ViewTranspose Camera.ViewInverseTranspose Camera.SphericalBillboard Camera.CylindricalBillboard Camera.FieldOfView Camera.NearClip Camera.FarClip Camera.ClipPlane Camera.FrustumCulling Camera.CacheSpecialMatrices() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ReflectCamera(Camera, DoublePlane) A camera that reflects the perspective of another Camera along a plane. public ReflectCamera(Camera parentCamera, DoublePlane reflectPlane) Parameters parentCamera Camera The parent camera to track reflectPlane DoublePlane The plane along which to reflect the world Properties ReflectPlane A plane alongside which to reflect the camera view public DoublePlane ReflectPlane { get; set; } Property Value DoublePlane Methods UpdateView() Update cached versions of View and related matrices protected override void UpdateView()"
  },
  "api/OmegaEngine.Graphics.Cameras.StrategyCamera.html": {
    "href": "api/OmegaEngine.Graphics.Cameras.StrategyCamera.html",
    "title": "Class StrategyCamera | OmegaEngine",
    "summary": "Class StrategyCamera Namespace OmegaEngine.Graphics.Cameras Assembly OmegaEngine.dll A RTS-style camera with a rotatable horizontal view and an automatic vertical angle. public class StrategyCamera : MatrixCamera, IPositionable Inheritance object Camera MatrixCamera StrategyCamera Implements IPositionable Inherited Members MatrixCamera.UpVector Camera.ViewDirty Camera.ProjectionDirty Camera.ViewFrustumDirty Camera.Name Camera.ToString() Camera.PositionCached Camera.Position Camera.PositionBaseCached Camera.PositionBase Camera.ViewCached Camera.View Camera.SimpleViewCached Camera.SimpleView Camera.ViewInverse Camera.ViewTranspose Camera.ViewInverseTranspose Camera.SphericalBillboard Camera.CylindricalBillboard Camera.FieldOfView Camera.NearClip Camera.FarClip Camera.ClipPlane Camera.FrustumCulling Camera.CacheSpecialMatrices() Camera.UpdateProjection() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors StrategyCamera(double, double, float, float, Func<DoubleVector3, double>) A RTS-style camera with a rotatable horizontal view and an automatic vertical angle. public StrategyCamera(double minRadius, double maxRadius, float minAngle, float maxAngle, Func<DoubleVector3, double> heightController) Parameters minRadius double The minimum radius allowed. Also used as the initial radius. maxRadius double The maximum radius allowed. minAngle float The minimum vertical angle in degrees. Effective when Radius is equal to MinRadius. maxAngle float The maximum vertical angle in degrees. Effective when Radius is equal to MaxRadius. heightController Func<DoubleVector3, double> This delegate is called to control the minimum height of the strategy camera based on its 2D coordinates. Properties HorizontalRotation The horizontal rotation in degrees. public float HorizontalRotation { get; set; } Property Value float Remarks Must be a real number. MaxAngle The maximum vertical angle in degrees. Effective when Radius is equal to MaxRadius. public float MaxAngle { get; set; } Property Value float Remarks Must be a real number. MaxRadius The maximum radius allowed. public double MaxRadius { get; set; } Property Value double Remarks Must be a positive real number. MinAngle The minimum vertical angle in degrees. Effective when Radius is equal to MinRadius. public float MinAngle { get; set; } Property Value float Remarks Must be a real number. MinRadius The minimum radius allowed. public double MinRadius { get; set; } Property Value double Remarks Must be a positive real number. Radius The distance between the camera and the center of the focuses object. public double Radius { get; set; } Property Value double Remarks Must be a positive real number. Target The position the camera is looking at. public override DoubleVector3 Target { get; set; } Property Value DoubleVector3 Exceptions ArgumentOutOfRangeException The coordinates lie outside the range of the height-controlling terrain. Methods PerspectiveChange(float, float, float, float) Called when the user changes the view perspective. public override void PerspectiveChange(float panX, float panY, float rotation, float zoom) Parameters panX float The number of pixels panned along the X-axis divided by the number of pixels of the longest side of the viewport. panY float The number of pixels panned along the Y-axis divided by the number of pixels of the longest side of the viewport. rotation float Horizontal rotation in degrees. zoom float Scaling factor; 1 for no change, must not be 0. UpdateView() Update cached versions of View and related matrices. protected override void UpdateView()"
  },
  "api/OmegaEngine.Graphics.Cameras.TrackCamera.html": {
    "href": "api/OmegaEngine.Graphics.Cameras.TrackCamera.html",
    "title": "Class TrackCamera | OmegaEngine",
    "summary": "Class TrackCamera Namespace OmegaEngine.Graphics.Cameras Assembly OmegaEngine.dll A camera that can be rotated around a specific point in space. public sealed class TrackCamera : MatrixCamera, IPositionable Inheritance object Camera MatrixCamera TrackCamera Implements IPositionable Inherited Members MatrixCamera.Target MatrixCamera.UpVector Camera.Name Camera.ToString() Camera.Position Camera.PositionBase Camera.FieldOfView Camera.NearClip Camera.FarClip Camera.ClipPlane Camera.FrustumCulling object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TrackCamera(double, double) A camera that can be rotated around a specific point in space. public TrackCamera(double minRadius = 50, double maxRadius = 100) Parameters minRadius double The minimum radius allowed. Also used as the initial radius. maxRadius double The maximum radius allowed. Properties HorizontalRotation The horizontal rotation in degrees. public double HorizontalRotation { get; set; } Property Value double Remarks Must be a real number. MaxRadius The maximum radius allowed. public double MaxRadius { get; set; } Property Value double Remarks Must be a positive real number. MinRadius The minimum radius allowed. public double MinRadius { get; set; } Property Value double Remarks Must be a positive real number. Radius The distance between the camera and the center of the focuses object. public double Radius { get; set; } Property Value double Remarks Must be a positive real number. VerticalRotation The vertical rotation in degrees. public double VerticalRotation { get; set; } Property Value double Methods PerspectiveChange(float, float, float, float) Called when the user changes the view perspective. public override void PerspectiveChange(float panX, float panY, float rotation, float zoom) Parameters panX float The number of pixels panned along the X-axis divided by the number of pixels of the longest side of the viewport. panY float The number of pixels panned along the Y-axis divided by the number of pixels of the longest side of the viewport. rotation float Horizontal rotation in degrees. zoom float Scaling factor; 1 for no change, must not be 0. UpdateView() Update cached versions of View and related matrices. protected override void UpdateView()"
  },
  "api/OmegaEngine.Graphics.Cameras.html": {
    "href": "api/OmegaEngine.Graphics.Cameras.html",
    "title": "Namespace OmegaEngine.Graphics.Cameras | OmegaEngine",
    "summary": "Namespace OmegaEngine.Graphics.Cameras Different camera types for navigating the world. Classes Camera Determines the perspective from which a Scene is displayed. CinematicCamera A camera that cinematically swings from one view to another. CloneCamera A camera that imitates the perspective of another Camera. MatrixCamera A camera that internally uses matrixes for representing rotations. QuaternionCamera A camera that internally uses quaternions for representing rotations. ReflectCamera A camera that reflects the perspective of another Camera along a plane. StrategyCamera A RTS-style camera with a rotatable horizontal view and an automatic vertical angle. TrackCamera A camera that can be rotated around a specific point in space."
  },
  "api/OmegaEngine.Graphics.DirectionalLight.html": {
    "href": "api/OmegaEngine.Graphics.DirectionalLight.html",
    "title": "Class DirectionalLight | OmegaEngine",
    "summary": "Class DirectionalLight Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll A light source that has no position and shines in one direction. public sealed class DirectionalLight : LightSource Inheritance object LightSource DirectionalLight Inherited Members LightSource.Name LightSource.ToString() LightSource.Enabled LightSource.Diffuse LightSource.Specular LightSource.Ambient object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Direction The direction of the light source public Vector3 Direction { get; set; } Property Value Vector3"
  },
  "api/OmegaEngine.Graphics.GlowView.html": {
    "href": "api/OmegaEngine.Graphics.GlowView.html",
    "title": "Class GlowView | OmegaEngine",
    "summary": "Class GlowView Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll A SpecialView for rendering glow maps public sealed class GlowView : SpecialView, IDisposable Inheritance object EngineElement View TextureView SupportView SpecialView GlowView Implements IDisposable Inherited Members SpecialView.Fog SpecialView.Lighting TextureView.FullAlpha TextureView.GetRenderTarget() View.RenderedInLastFrame View.Name View.ToString() View.Area View.AreaCenter View.Visible View.InvertCull View.ChildViews View.BackgroundColor View.Scene View.FloatingModels View.PostShaders View.Camera View.PickingRay(Point) View.Pick(Point, out DoubleVector3) View.SwingCameraTo(Camera, float) View.SetupGlow(float, float) View.PreRender EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods RenderBody(PositionableRenderable) Renders a PositionableRenderable from the Scene protected override void RenderBody(PositionableRenderable body) Parameters body PositionableRenderable The PositionableRenderable to render"
  },
  "api/OmegaEngine.Graphics.ITextureProvider.html": {
    "href": "api/OmegaEngine.Graphics.ITextureProvider.html",
    "title": "Interface ITextureProvider | OmegaEngine",
    "summary": "Interface ITextureProvider Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll An object that can provide a Texture for rendering. public interface ITextureProvider : IReferenceCount Inherited Members IReferenceCount.HoldReference() IReferenceCount.ReleaseReference() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks This provides a common interface for static (unchanging) XTexture assets and dynamic RenderTargets. Properties Texture The SlimDX.Direct3D9.Texture this object represents. Texture Texture { get; } Property Value Texture"
  },
  "api/OmegaEngine.Graphics.LazyView.html": {
    "href": "api/OmegaEngine.Graphics.LazyView.html",
    "title": "Class LazyView | OmegaEngine",
    "summary": "Class LazyView Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll An TextureView that only handles OmegaEngine.Graphics.LazyView.Render() when SetDirty() has been called. public sealed class LazyView : TextureView, IDisposable Inheritance object EngineElement View TextureView LazyView Implements IDisposable Inherited Members TextureView.FullAlpha TextureView.GetRenderTarget() View.RenderedInLastFrame View.Name View.ToString() View.Area View.AreaCenter View.Visible View.InvertCull View.Fog View.Lighting View.ChildViews View.BackgroundColor View.Scene View.FloatingModels View.PostShaders View.Camera View.PickingRay(Point) View.Pick(Point, out DoubleVector3) View.SwingCameraTo(Camera, float) View.SetupGlow(float, float) View.PreRender EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Useful for Scenes and Cameras that stay static for most of the time. Constructors LazyView(Scene, Camera, Size) Creates a new lazy view public LazyView(Scene scene, Camera camera, Size size) Parameters scene Scene The Scene to render camera Camera The Camera to look at the Scene with size Size The size of screen area this view should fill (leave empty for fullscreen) Properties Dirty Does this LazyView need handle the next OmegaEngine.Graphics.LazyView.Render() call? public bool Dirty { get; } Property Value bool Methods SetDirty() Sets Dirty to true public void SetDirty()"
  },
  "api/OmegaEngine.Graphics.LightSource.html": {
    "href": "api/OmegaEngine.Graphics.LightSource.html",
    "title": "Class LightSource | OmegaEngine",
    "summary": "Class LightSource Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll A light source that illuminates PositionableRenderables in a Scene. public abstract class LightSource Inheritance object LightSource Derived DirectionalLight PointLight Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors LightSource() Creates a new light source with a full white Diffuse component, a slight gray Specular component and no Ambient component protected LightSource() Properties Ambient The ambient color this light source emits public Color Ambient { get; set; } Property Value Color Diffuse The diffuse color this light source emits public Color Diffuse { get; set; } Property Value Color Enabled Shall the light source affect its surroundings? public bool Enabled { get; set; } Property Value bool Name Text value to make it easier to identify a particular camera public string? Name { get; set; } Property Value string Specular The specular color this light source emits public Color Specular { get; set; } Property Value Color Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. See Also Lights"
  },
  "api/OmegaEngine.Graphics.PointLight.html": {
    "href": "api/OmegaEngine.Graphics.PointLight.html",
    "title": "Class PointLight | OmegaEngine",
    "summary": "Class PointLight Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll A light source that has a fixed position and shines uniformly in all directions. public sealed class PointLight : LightSource, IPositionable Inheritance object LightSource PointLight Implements IPositionable Inherited Members LightSource.Name LightSource.ToString() LightSource.Enabled LightSource.Diffuse LightSource.Specular LightSource.Ambient object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PointLight() Creates a new point light with a Range of 1000 and no attenuation public PointLight() Properties Attenuation Factors describing the attenuation of light intensity over distance. public Attenuation Attenuation { get; set; } Property Value Attenuation DirectionalForShader Shall this light source be converted to a pseudo-directional source for each individual PositionableRenderable before passing it to shaders? public bool DirectionalForShader { get; set; } Property Value bool Position The position of the light source public DoubleVector3 Position { get; set; } Property Value DoubleVector3 Range The maximum distance at which the light source has an effect. public float Range { get; set; } Property Value float Shift Stores an offset used by game logic positioning code. Ignore by the engine itself! public Vector3 Shift { get; set; } Property Value Vector3"
  },
  "api/OmegaEngine.Graphics.RenderTarget.html": {
    "href": "api/OmegaEngine.Graphics.RenderTarget.html",
    "title": "Class RenderTarget | OmegaEngine",
    "summary": "Class RenderTarget Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll Provides an in-memory area to render to instead of directly painting on the screen. public sealed class RenderTarget : ITextureProvider, IReferenceCount, IDisposable, IPoolable<RenderTarget> Inheritance object RenderTarget Implements ITextureProvider IReferenceCount IDisposable IPoolable<RenderTarget> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Lost devices are automatically handled. Constructors RenderTarget(Engine, Size) Creates a new render target texture wrapper public RenderTarget(Engine engine, Size size) Parameters engine Engine The Engine to store the texture in size Size The size of the texture - leave empty for fullscreen Properties Disposed Was this object already disposed? [Browsable(false)] public bool Disposed { get; } Property Value bool Texture The texture containing the rendered content. public Texture Texture { get; } Property Value Texture Methods Dispose() Disposes the Texture this object wraps public void Dispose() ~RenderTarget() protected ~RenderTarget() HoldReference() Is ignored. public void HoldReference() ReleaseReference() Is ignored. public void ReleaseReference() Operators implicit operator Texture(RenderTarget) Convert a RenderTarget into its contained SlimDX.Direct3D9.Texture. public static implicit operator Texture(RenderTarget renderTarget) Parameters renderTarget RenderTarget Returns Texture See Also GetRenderTarget()"
  },
  "api/OmegaEngine.Graphics.Renderables.AnimatedModel.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.AnimatedModel.html",
    "title": "Class AnimatedModel | OmegaEngine",
    "summary": "Class AnimatedModel Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll A mesh-based model with frame-hierarchy animation that can be rendered by the engine public class AnimatedModel : PositionableRenderable, IDisposable, IPositionable Inheritance object EngineElement Renderable PositionableRenderable AnimatedModel Implements IDisposable IPositionable Inherited Members PositionableRenderable.WorldTransformDirty PositionableRenderable.Pickable PositionableRenderable.RenderIn PositionableRenderable.SurfaceEffect PositionableRenderable.SurfaceShader PositionableRenderable.Billboard PositionableRenderable.PreTransform PositionableRenderable.Scale PositionableRenderable.SetScale(float) PositionableRenderable.Rotation PositionableRenderable.Position PositionableRenderable.RecalcWorldTransform() PositionableRenderable.BoundingSphere PositionableRenderable.WorldBoundingSphere PositionableRenderable.DrawBoundingSphere PositionableRenderable.BoundingBox PositionableRenderable.WorldBoundingBox PositionableRenderable.DrawBoundingBox PositionableRenderable.RequiredViews PositionableRenderable.RenderHelper(Action, XMaterial, Camera, params LightSource[]) PositionableRenderable.IsVisible(Camera) PositionableRenderable.Intersects(Ray, out float) PositionableRenderable.Intersects(Ray, out DoubleVector3) PositionableRenderable.IntersectsBounding(Ray) PositionableRenderable.OnEngineSet() Renderable.PreRender Renderable.OnPreRender() Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha Renderable.PrepareRender() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors AnimatedModel(XAnimatedMesh) Creates a new animated model based upon a cached animated mesh, using its internal material data if available public AnimatedModel(XAnimatedMesh mesh) Parameters mesh XAnimatedMesh The animated mesh to use for rendering Fields Materials An array of materials used to render this mesh public readonly XMaterial[] Materials Field Value XMaterial[] Properties NumberSubsets The numbers of subsets in this model public int NumberSubsets { get; protected set; } Property Value int Methods OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose()"
  },
  "api/OmegaEngine.Graphics.Renderables.BillboardMode.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.BillboardMode.html",
    "title": "Enum BillboardMode | OmegaEngine",
    "summary": "Enum BillboardMode Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll public enum BillboardMode Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Cylindrical = 2 Apply a spherical cylindrical effect (object's X axis will always face the camera) None = 0 Don't apply a billboarding effect Spherical = 1 Apply a spherical billboarding effect (object will always face the camera) See Also Billboard"
  },
  "api/OmegaEngine.Graphics.Renderables.BoundingExtensions.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.BoundingExtensions.html",
    "title": "Class BoundingExtensions | OmegaEngine",
    "summary": "Class BoundingExtensions Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll Provides extension methods for SlimDX.BoundingBox and SlimDX.BoundingSphere. public static class BoundingExtensions Inheritance object BoundingExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Transform(BoundingBox, Matrix) Applies a matrix transform to a bounding box. [Pure] public static BoundingBox Transform(this BoundingBox box, Matrix matrix) Parameters box BoundingBox The bounding box to apply the transform to. matrix Matrix The transformation matrix to apply. Returns BoundingBox The transformed bounding box. Transform(BoundingSphere, Matrix) Applies a matrix transform to a bounding sphere. [Pure] public static BoundingSphere Transform(this BoundingSphere sphere, Matrix matrix) Parameters sphere BoundingSphere The bounding sphere to apply the transform to. matrix Matrix The transformation matrix to apply. Returns BoundingSphere The transformed bounding sphere."
  },
  "api/OmegaEngine.Graphics.Renderables.CpuParticleParameters.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.CpuParticleParameters.html",
    "title": "Class CpuParticleParameters | OmegaEngine",
    "summary": "Class CpuParticleParameters Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll A set of information about a particle in a particle system public class CpuParticleParameters Inheritance object CpuParticleParameters Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Color The color of the particle [LuaHide] public Color Color { get; set; } Property Value Color Remarks Is not serialized/stored, Color4 is used for that. Color4 Used for XML serialization. [LuaHide] [Browsable(false)] public XColor Color4 { get; set; } Property Value XColor See Also Color DeltaColor How much the particle gets darker per second public float DeltaColor { get; set; } Property Value float DeltaSize How much the particle will grow per second public float DeltaSize { get; set; } Property Value float Friction How much the velocity will be reduced in one second as a value between 0 and 1 public float Friction { get; set; } Property Value float LifeTime How many seconds this particle will exist. Set to 0 never create. Set to OmegaEngine.Graphics.Renderables.CpuParticleParameters.InfiniteFlag for infinite. public float LifeTime { get; set; } Property Value float Size The size of the particle public float Size { get; set; } Property Value float"
  },
  "api/OmegaEngine.Graphics.Renderables.CpuParticlePreset.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.CpuParticlePreset.html",
    "title": "Class CpuParticlePreset | OmegaEngine",
    "summary": "Class CpuParticlePreset Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll A set of information about a particle system as a whole public class CpuParticlePreset : ICloneable Inheritance object CpuParticlePreset Implements ICloneable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors CpuParticlePreset() public CpuParticlePreset() Properties EmitterRepelRange How far the emitter's repelling force can reach public float EmitterRepelRange { get; set; } Property Value float EmitterRepelSpeed How fast particles will be pushed away from the emitter's centre public float EmitterRepelSpeed { get; set; } Property Value float EmitterSuctionRange From where the emitter suction force starts to act public float EmitterSuctionRange { get; set; } Property Value float EmitterSuctionSpeed How fast particles will be sucked back to the emitter's centre public float EmitterSuctionSpeed { get; set; } Property Value float Gravity A permanent acceleration force applied to all particles public Vector3 Gravity { get; set; } Property Value Vector3 InfiniteLifetime1 true LifeTime is set to OmegaEngine.Graphics.Renderables.CpuParticleParameters.InfiniteFlag for LowerParameters1 or UpperParameters1. [Browsable(false)] public bool InfiniteLifetime1 { get; } Property Value bool InfiniteLifetime2 true LifeTime is set to OmegaEngine.Graphics.Renderables.CpuParticleParameters.InfiniteFlag for LowerParameters2 or UpperParameters2. [Browsable(false)] public bool InfiniteLifetime2 { get; } Property Value bool LowerParameters1 The lower values of the range of parameters used to spawn new particles [Browsable(false)] public CpuParticleParameters LowerParameters1 { get; set; } Property Value CpuParticleParameters LowerParameters2 The lower values of the range of parameters used to start particles' \"second life\" [Browsable(false)] public CpuParticleParameters LowerParameters2 { get; set; } Property Value CpuParticleParameters MaxParticles The maximum number particles in existance at any one point in time public int MaxParticles { get; set; } Property Value int Particle1Alpha The level of transparency from 0 (solid) to 255 (invisible), AlphaChannel, BinaryAlphaChannel or AdditivBlending public int Particle1Alpha { get; set; } Property Value int Particle1Texture The ID of the texture to place on the particles public string Particle1Texture { get; set; } Property Value string Particle2Alpha The level of transparency from 0 (solid) to 255 (invisible) for particles' \"second life\", AlphaChannel, BinaryAlphaChannel or AdditivBlending public int Particle2Alpha { get; set; } Property Value int Particle2Texture The ID of the texture to place on the particles during their \"second life\" public string Particle2Texture { get; set; } Property Value string RandomAcceleration Randomly accelerate particles with up to the specified speed public float RandomAcceleration { get; set; } Property Value float SpawnRadius The largest distance from the emitter at which particle shall be spawned public float SpawnRadius { get; set; } Property Value float SpawnRate How many new particles shall be spawned per second public float SpawnRate { get; set; } Property Value float Speed A factor by which all elapsed times are multiplied public float Speed { get; set; } Property Value float UpperParameters1 The upper values of the range of parameters used to spawn new particles [Browsable(false)] public CpuParticleParameters UpperParameters1 { get; set; } Property Value CpuParticleParameters UpperParameters2 The upper values of the range of parameters used to start particles' \"second life\" [Browsable(false)] public CpuParticleParameters UpperParameters2 { get; set; } Property Value CpuParticleParameters WarmupTime How many seconds to \"fast forward\" the particle system before it's render the first time public float WarmupTime { get; set; } Property Value float Methods Clone() Creates a deep copy of the particle system preset public CpuParticlePreset Clone() Returns CpuParticlePreset The cloned preset FromContent(string) Loads a preset from an XML file via the ContentManager. public static CpuParticlePreset FromContent(string id) Parameters id string The ID of the XML file to load Returns CpuParticlePreset The loaded preset Exceptions FileNotFoundException The specified file could not be found. IOException There was an error reading the file. UnauthorizedAccessException Read access to the file is not permitted. InvalidOperationException A problem occurred while deserializing the XML data."
  },
  "api/OmegaEngine.Graphics.Renderables.CpuParticleSystem.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.CpuParticleSystem.html",
    "title": "Class CpuParticleSystem | OmegaEngine",
    "summary": "Class CpuParticleSystem Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll A particle system whose particles are tracked by the CPU. public class CpuParticleSystem : PositionableRenderable, IDisposable, IPositionable Inheritance object EngineElement Renderable PositionableRenderable CpuParticleSystem Implements IDisposable IPositionable Inherited Members PositionableRenderable.WorldTransformDirty PositionableRenderable.Pickable PositionableRenderable.RenderIn PositionableRenderable.SurfaceEffect PositionableRenderable.SurfaceShader PositionableRenderable.Billboard PositionableRenderable.PreTransform PositionableRenderable.Scale PositionableRenderable.SetScale(float) PositionableRenderable.Rotation PositionableRenderable.Position PositionableRenderable.RecalcWorldTransform() PositionableRenderable.BoundingSphere PositionableRenderable.WorldBoundingSphere PositionableRenderable.DrawBoundingSphere PositionableRenderable.BoundingBox PositionableRenderable.WorldBoundingBox PositionableRenderable.DrawBoundingBox PositionableRenderable.RequiredViews PositionableRenderable.RenderHelper(Action, XMaterial, Camera, params LightSource[]) PositionableRenderable.IsVisible(Camera) PositionableRenderable.Intersects(Ray, out float) PositionableRenderable.Intersects(Ray, out DoubleVector3) PositionableRenderable.IntersectsBounding(Ray) Renderable.PreRender Renderable.OnPreRender() Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha Renderable.PrepareRender() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors CpuParticleSystem(CpuParticlePreset) Creates a new particle system. public CpuParticleSystem(CpuParticlePreset preset) Parameters preset CpuParticlePreset The initial configuration of the particle system. Properties Preset The configuration of this particle system. [Browsable(false)] public CpuParticlePreset Preset { get; set; } Property Value CpuParticlePreset Velocity The base velocity of all particles spawned by this particle system public Vector3 Velocity { get; set; } Property Value Vector3 Methods OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Renderables.FloatingModel.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.FloatingModel.html",
    "title": "Class FloatingModel | OmegaEngine",
    "summary": "Class FloatingModel Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll A Model that is rendered observing the Cameras view direction, but ignoring its position. public class FloatingModel : Model, IDisposable, IPositionable Inheritance object EngineElement Renderable PositionableRenderable Model FloatingModel Implements IDisposable IPositionable Inherited Members Model.Quad(Engine, XMaterial, float, float) Model.Box(Engine, XMaterial, float, float, float) Model.Sphere(Engine, XMaterial, float, int, int) Model.Cylinder(Engine, XMaterial, float, float, float, int, int) Model.Cylinder(Engine, XMaterial, float, float, float) Model.Disc(Engine, XMaterial, float, float, float, int) Model.Disc(Engine, XMaterial, float, float, float) Model.Mesh Model.Materials Model.SetTexture(ITextureProvider) Model.VertexCount Model.NumberSubsets Model.RenderSubset(int, Camera, LightSource[]) Model.Intersects(Ray, out float) Model.OnDispose() PositionableRenderable.WorldTransformDirty PositionableRenderable.Pickable PositionableRenderable.RenderIn PositionableRenderable.SurfaceEffect PositionableRenderable.SurfaceShader PositionableRenderable.Billboard PositionableRenderable.PreTransform PositionableRenderable.Scale PositionableRenderable.SetScale(float) PositionableRenderable.Rotation PositionableRenderable.Position PositionableRenderable.RecalcWorldTransform() PositionableRenderable.BoundingSphere PositionableRenderable.WorldBoundingSphere PositionableRenderable.DrawBoundingSphere PositionableRenderable.BoundingBox PositionableRenderable.WorldBoundingBox PositionableRenderable.DrawBoundingBox PositionableRenderable.RequiredViews PositionableRenderable.RenderHelper(Action, XMaterial, Camera, params LightSource[]) PositionableRenderable.IsVisible(Camera) PositionableRenderable.Intersects(Ray, out DoubleVector3) PositionableRenderable.IntersectsBounding(Ray) PositionableRenderable.OnEngineSet() Renderable.PreRender Renderable.OnPreRender() Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha Renderable.PrepareRender() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks This kind of model effectively \"floats\" atop of the scene. This can be useful for things like direction widgets. Constructors FloatingModel(XMesh) Creates a new floating model based upon a cached mesh, using its internal material data if available public FloatingModel(XMesh mesh) Parameters mesh XMesh The mesh to use for rendering FloatingModel(XMesh, params XMaterial[]) Creates a new floating model based upon a cached mesh, using an external texture and a white material public FloatingModel(XMesh mesh, params XMaterial[] materials) Parameters mesh XMesh The mesh use for rendering materials XMaterial[] The materials to use for rendering the mesh FloatingModel(Mesh, params XMaterial[]) Creates a new floating model based upon a custom mesh. Normals should be already calculated if they are required. Warning: The custom mesh and materials will be automatically disposed! public FloatingModel(Mesh mesh, params XMaterial[] materials) Parameters mesh Mesh The mesh use for rendering materials XMaterial[] The materials to use for rendering the mesh See Also FloatingModels"
  },
  "api/OmegaEngine.Graphics.Renderables.Model.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.Model.html",
    "title": "Class Model | OmegaEngine",
    "summary": "Class Model Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll A model (stored as a Direct3DX Mesh with one or more subsets). Handle public class Model : PositionableRenderable, IDisposable, IPositionable Inheritance object EngineElement Renderable PositionableRenderable Model Implements IDisposable IPositionable Derived FloatingModel Terrain Water Inherited Members PositionableRenderable.WorldTransformDirty PositionableRenderable.Pickable PositionableRenderable.RenderIn PositionableRenderable.SurfaceEffect PositionableRenderable.SurfaceShader PositionableRenderable.Billboard PositionableRenderable.PreTransform PositionableRenderable.Scale PositionableRenderable.SetScale(float) PositionableRenderable.Rotation PositionableRenderable.Position PositionableRenderable.RecalcWorldTransform() PositionableRenderable.BoundingSphere PositionableRenderable.WorldBoundingSphere PositionableRenderable.DrawBoundingSphere PositionableRenderable.BoundingBox PositionableRenderable.WorldBoundingBox PositionableRenderable.DrawBoundingBox PositionableRenderable.RequiredViews PositionableRenderable.RenderHelper(Action, XMaterial, Camera, params LightSource[]) PositionableRenderable.IsVisible(Camera) PositionableRenderable.Intersects(Ray, out DoubleVector3) PositionableRenderable.IntersectsBounding(Ray) PositionableRenderable.OnEngineSet() Renderable.PreRender Renderable.OnPreRender() Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha Renderable.PrepareRender() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks No custom SlimDX.Direct3D9.PrimitiveTypes. Use VertexGroup for that. Constructors Model(XMesh) Creates a new model based upon a XMesh, using its internal material data if available. public Model(XMesh mesh) Parameters mesh XMesh The XMesh providing the mesh data. Remarks Calling Dispose() will not dispose the mesh. This is handled by the CacheManager. Model(XMesh, params XMaterial[]) Creates a new model based upon a XMesh, using an external texture and a plain white material. public Model(XMesh mesh, params XMaterial[] materials) Parameters mesh XMesh The XMesh providing the mesh data. materials XMaterial[] The materials to use for rendering the model. Remarks Calling Dispose() will call ReleaseReference() on mesh and materials. Model(Mesh, params XMaterial[]) Creates a new model based upon a custom mesh. public Model(Mesh mesh, params XMaterial[] materials) Parameters mesh Mesh The mesh to render. Normals should be calculated before-hand if they will be used (e.g. by SurfaceShaders). materials XMaterial[] The materials to use for rendering the model. Remarks Calling Dispose() will call Dispose() on mesh and ReleaseReference() on materials. Fields Materials An array of materials used to render this mesh public readonly XMaterial[] Materials Field Value XMaterial[] Mesh The mesh object to use for rendering; never null. protected readonly Mesh Mesh Field Value Mesh Properties NumberSubsets The numbers of subsets in this model public int NumberSubsets { get; protected set; } Property Value int VertexCount The numbers of vertexes in this model public int VertexCount { get; } Property Value int Methods Box(Engine, XMaterial, float, float, float) Creates a model of a box. public static Model Box(Engine engine, XMaterial material, float width = 5, float height = 5, float depth = 5) Parameters engine Engine The Engine to use for rendering. material XMaterial The material used to render the surface of the model. width float The width of the box height float The height of the box depth float The depth of the box Returns Model Cylinder(Engine, XMaterial, float, float, float) Creates a model of a cylinder with spherical mapping. public static Model Cylinder(Engine engine, XMaterial material, float radiusBottom = 1, float radiusTop = 1, float length = 10) Parameters engine Engine The Engine to use for rendering. material XMaterial The material used to render the surface of the model. radiusBottom float The radius of the cylinder at the lower end (negative Z). radiusTop float The radius of the cylinder at the upper end (positive Z). length float The length of the cylinder. Returns Model Cylinder(Engine, XMaterial, float, float, float, int, int) Creates a model of a cylinder with spherical mapping. public static Model Cylinder(Engine engine, XMaterial material, float radiusBottom, float radiusTop, float length, int slices, int stacks) Parameters engine Engine The Engine to use for rendering. material XMaterial The material used to render the surface of the model. radiusBottom float The radius of the cylinder at the lower end (negative Z). radiusTop float The radius of the cylinder at the upper end (positive Z). length float The length of the cylinder. slices int The number of vertical slices to divide the cylinder in. stacks int The number of horizontal stacks to divide the cylinder in. Returns Model Disc(Engine, XMaterial, float, float, float) Creates a model of a textured round disc with a hole in the middle. public static Model Disc(Engine engine, XMaterial material, float radiusInner = 5, float radiusOuter = 7, float height = 1) Parameters engine Engine The Engine to use for rendering. material XMaterial The material used to render the surface of the model; must be IsTextured. radiusInner float The radius of the inner circle of the ring. radiusOuter float The radius of the outer circle of the ring. height float The height of the ring. Returns Model Exceptions NotSupportedException The material is not textured. Disc(Engine, XMaterial, float, float, float, int) Creates a model of a textured round disc with a hole in the middle. public static Model Disc(Engine engine, XMaterial material, float radiusInner, float radiusOuter, float height, int segments) Parameters engine Engine The Engine to use for rendering. material XMaterial The material used to render the surface of the model; must be IsTextured. radiusInner float The radius of the inner circle of the ring. radiusOuter float The radius of the outer circle of the ring. height float The height of the ring. segments int The number of segments the ring shall consist of. Returns Model Exceptions NotSupportedException The material is not textured. Intersects(Ray, out float) Determine whether this PositionableRenderable is intersected by a ray. public override bool Intersects(Ray ray, out float distance) Parameters ray Ray A ray in world space along which to check for intersections. distance float Returns the distance along the ray at which the intersection took place. Returns bool true if this PositionableRenderable was intersected by the ray. See Also Pick(Point, out DoubleVector3) OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() Quad(Engine, XMaterial, float, float) Creates a model of a textured 2D quad. public static Model Quad(Engine engine, XMaterial material, float width = 5, float height = 5) Parameters engine Engine The Engine to use for rendering. material XMaterial The material used to render the surface of the model; must be IsTextured. width float The width of the quad. height float The height of the quad. Returns Model Exceptions NotSupportedException The material is not textured. RenderSubset(int, Camera, LightSource[]) protected void RenderSubset(int i, Camera camera, LightSource[] lights) Parameters i int camera Camera lights LightSource[] SetTexture(ITextureProvider) Sets the first diffuse texture of the first material. public void SetTexture(ITextureProvider texture) Parameters texture ITextureProvider The texture to set; null for no texture. Sphere(Engine, XMaterial, float, int, int) Creates a model of a sphere with spherical mapping. public static Model Sphere(Engine engine, XMaterial material, float radius = 10, int slices = 20, int stacks = 20) Parameters engine Engine The Engine to use for rendering. material XMaterial The material used to render the surface of the model. radius float The radius of the sphere. slices int The number of vertical slices to divide the sphere into. stacks int The number of horizontal stacks to divide the sphere into. Returns Model"
  },
  "api/OmegaEngine.Graphics.Renderables.PositionableRenderable.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.PositionableRenderable.html",
    "title": "Class PositionableRenderable | OmegaEngine",
    "summary": "Class PositionableRenderable Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll An object that can be Render(Camera, GetLights)ed at a specific Position in a Scene. public abstract class PositionableRenderable : Renderable, IDisposable, IPositionable Inheritance object EngineElement Renderable PositionableRenderable Implements IDisposable IPositionable Derived AnimatedModel CpuParticleSystem Model VertexGroup Inherited Members Renderable.PreRender Renderable.OnPreRender() Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha Renderable.PrepareRender() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() EngineElement.OnDispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields WorldTransformDirty Does the world transform need to be recalculated? protected bool WorldTransformDirty Field Value bool Properties Billboard How this PositionableRenderable shall be rotated towards the camera public BillboardMode Billboard { get; set; } Property Value BillboardMode BoundingBox A axis-aligned box that completely encompasses the body (in entity space, even before apply PreTransform). [Browsable(false)] public BoundingBox? BoundingBox { get; protected set; } Property Value BoundingBox? BoundingSphere A sphere that completely encompasses the body (in entity space, even before apply PreTransform). [Browsable(false)] public BoundingSphere? BoundingSphere { get; protected set; } Property Value BoundingSphere? DrawBoundingBox Shall the bounding box used to cull this object be drawn/visualized? (used for debugging) public bool DrawBoundingBox { get; set; } Property Value bool DrawBoundingSphere Shall the bounding sphere used to cull this object be drawn/visualized? (used for debugging) public bool DrawBoundingSphere { get; set; } Property Value bool Pickable Shall this PositionableRenderable be pickable with the mouse? public bool Pickable { get; set; } Property Value bool Position The body's position in world space public DoubleVector3 Position { get; set; } Property Value DoubleVector3 PreTransform A transformation matrix that is to be applied before the normal world transform occurs - useful for correcting off-center meshes [Browsable(false)] public Matrix PreTransform { get; set; } Property Value Matrix RenderIn In what kind of Views shall this body be rendered? public ViewType RenderIn { get; set; } Property Value ViewType RequiredViews A list of Views that must be rendered before this PositionableRenderable can be rendered [Browsable(false)] public ICollection<View> RequiredViews { get; } Property Value ICollection<View> Rotation The body's rotation quaternion [Browsable(false)] public Quaternion Rotation { get; set; } Property Value Quaternion Scale Scaling to be performed before rendering public Vector3 Scale { get; set; } Property Value Vector3 SurfaceEffect What kinds of surface effects (e.g. lighting) to apply to this PositionableRenderable public SurfaceEffect SurfaceEffect { get; set; } Property Value SurfaceEffect SurfaceShader The SurfaceShader to apply to the surface of this PositionableRenderable public SurfaceShader? SurfaceShader { get; set; } Property Value SurfaceShader Remarks Will NOT be disposed when Dispose() is called. See Also SurfaceEffect WorldBoundingBox An axis-aligned box that completely encompasses the body (in world space, used for culling tests). [Browsable(false)] public BoundingBox? WorldBoundingBox { get; } Property Value BoundingBox? WorldBoundingSphere A sphere that completely encompasses the body (in world space, used for culling tests). [Browsable(false)] public BoundingSphere? WorldBoundingSphere { get; } Property Value BoundingSphere? Methods Intersects(Ray, out DoubleVector3) Determine whether this PositionableRenderable is intersected by a ray. public bool Intersects(Ray ray, out DoubleVector3 position) Parameters ray Ray A ray in world space along which to check for intersections. position DoubleVector3 Returns the position of the intersection in entity space. Returns bool true if this PositionableRenderable was intersected by the ray. See Also Pick(Point, out DoubleVector3) Intersects(Ray, out float) Determine whether this PositionableRenderable is intersected by a ray. public virtual bool Intersects(Ray ray, out float distance) Parameters ray Ray A ray in world space along which to check for intersections. distance float Returns the distance along the ray at which the intersection took place. Returns bool true if this PositionableRenderable was intersected by the ray. See Also Pick(Point, out DoubleVector3) IntersectsBounding(Ray) Determine whether WorldBoundingBox and WorldBoundingSphere (if defined) are intersected by a ray. protected virtual bool IntersectsBounding(Ray ray) Parameters ray Ray A ray in world space along which to check for intersections. Returns bool true if the bounding bodies were undefined or intersected by the ray. IsVisible(Camera) Checks whether this object is visible at the moment (includes Frustum Culling and other filtering criteria). public bool IsVisible(Camera camera) Parameters camera Camera The Camera used to look the object. Returns bool true if the object is visible. See Also InFrustum(BoundingSphere) InFrustum(BoundingBox) OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() RecalcWorldTransform() Called to generate/update transformation matrices and related values protected virtual void RecalcWorldTransform() RenderHelper(Action, XMaterial, Camera, params LightSource[]) Provides an automatic rendering framework that handles things like setting textures, materials, lighting and shaders. protected void RenderHelper(Action render, XMaterial material, Camera camera, params LightSource[] lights) Parameters render Action A delegate that will be called once per rendering pass to display the actual content. material XMaterial The material to apply to everything rendered. camera Camera The currently effective Camera. lights LightSource[] The currently effective LightSources. SetScale(float) Scales this PositionableRenderable symmetrically public void SetScale(float factor) Parameters factor float The factor by which to scale See Also Positionables"
  },
  "api/OmegaEngine.Graphics.Renderables.Renderable.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.Renderable.html",
    "title": "Class Renderable | OmegaEngine",
    "summary": "Class Renderable Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll An object that can be Render(Camera, GetLights)ed by the Engine. public abstract class Renderable : EngineElement, IDisposable Inheritance object EngineElement Renderable Implements IDisposable Derived PositionableRenderable Skybox Inherited Members EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.OnEngineSet() EngineElement.IsDisposed EngineElement.Dispose() EngineElement.OnDispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Alpha The level of transparency from 0 (solid) to 255 (invisible), AlphaChannel, BinaryAlphaChannel or AdditivBlending public int Alpha { get; set; } Property Value int Name Text value to make it easier to identify a particular render entity public string? Name { get; set; } Property Value string RenderCount How many times has this entity been rendered in this frame? public int RenderCount { get; } Property Value int Remarks Used to debug culling methods VisibilityDistance The maximum distance from which the entity is visible - 0 for infinite public float VisibilityDistance { get; set; } Property Value float Visible Shall the entity be rendered? public bool Visible { get; set; } Property Value bool Wireframe Shall this entity be drawn in wireframe-mode? (used for debugging) public bool Wireframe { get; set; } Property Value bool Methods OnPreRender() protected virtual void OnPreRender() PrepareRender() Should be called before rendering anything - usually called by base constructor protected void PrepareRender() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Events PreRender Occurs once per frame before rendering the entity. Will not be executed if the entity is excluded by a culling test. public event Action? PreRender Event Type Action"
  },
  "api/OmegaEngine.Graphics.Renderables.SimpleSkybox.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.SimpleSkybox.html",
    "title": "Class SimpleSkybox | OmegaEngine",
    "summary": "Class SimpleSkybox Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll A cubic skybox existing of 4 or 6 non-animated planes. public sealed class SimpleSkybox : Skybox, IDisposable Inheritance object EngineElement Renderable Skybox SimpleSkybox Implements IDisposable Inherited Members Renderable.PreRender Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods FromAssets(Engine, string, string, string?, string?, string, string) Creates a new skybox using a cached XTextures (loading new ones if they aren't cached). public static SimpleSkybox FromAssets(Engine engine, string rt, string lf, string? up, string? dn, string ft, string bk) Parameters engine Engine The Engine providing the cache and rendering capabilities. rt string The ID of the \"right\" texture. lf string The ID of the \"left\" texture up string The ID of the \"up\" texture. dn string The ID of the \"down\" texture. ft string The ID of the \"front\" texture. bk string The ID of the \"back\" texture. Returns SimpleSkybox The skybox that was created. Exceptions FileNotFoundException One of the specified texture files could not be found. IOException There was an error reading one of the texture files. UnauthorizedAccessException Read access to one of the texture files is not permitted. InvalidDataException One of the texture files does not contain a valid texture. OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Renderables.Skybox.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.Skybox.html",
    "title": "Class Skybox | OmegaEngine",
    "summary": "Class Skybox Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll Provides a background for a Scene that \"follows\" the Position, creating the illusion of infinite distance. public abstract class Skybox : Renderable, IDisposable Inheritance object EngineElement Renderable Skybox Implements IDisposable Derived SimpleSkybox Inherited Members Renderable.PreRender Renderable.OnPreRender() Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha Renderable.PrepareRender() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.OnEngineSet() EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Skybox(ITextureProvider?[]) Creates a new skybox using texture-files protected Skybox(ITextureProvider?[] textures) Parameters textures ITextureProvider[] An array of the 6 textures to be uses (right, left, top, bottom, front, back) Exceptions ArgumentException There are not exactly 6 textures. Fields Textures protected readonly ITextureProvider?[] Textures Field Value ITextureProvider[] Methods OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() See Also Skybox"
  },
  "api/OmegaEngine.Graphics.Renderables.SurfaceEffect.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.SurfaceEffect.html",
    "title": "Enum SurfaceEffect | OmegaEngine",
    "summary": "Enum SurfaceEffect Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll public enum SurfaceEffect Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Depth = 4 Output the depth (Z-buffer) value as a grayscale color FixedFunction = 1 Use the fixed-function pipeline for lighting Glow = 3 Output the glow colors without any lighting Plain = 0 Apply no lighting or other surface effects Shader = 2 Apply SurfaceShader for lighting and other surface effects See Also SurfaceEffect"
  },
  "api/OmegaEngine.Graphics.Renderables.Terrain.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.Terrain.html",
    "title": "Class Terrain | OmegaEngine",
    "summary": "Class Terrain Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll Displays a multi-textured terrain public class Terrain : Model, IDisposable, IPositionable Inheritance object EngineElement Renderable PositionableRenderable Model Terrain Implements IDisposable IPositionable Inherited Members Model.Quad(Engine, XMaterial, float, float) Model.Box(Engine, XMaterial, float, float, float) Model.Sphere(Engine, XMaterial, float, int, int) Model.Cylinder(Engine, XMaterial, float, float, float, int, int) Model.Cylinder(Engine, XMaterial, float, float, float) Model.Disc(Engine, XMaterial, float, float, float, int) Model.Disc(Engine, XMaterial, float, float, float) Model.Mesh Model.Materials Model.SetTexture(ITextureProvider) Model.VertexCount Model.NumberSubsets Model.RenderSubset(int, Camera, LightSource[]) Model.Intersects(Ray, out float) Model.OnDispose() PositionableRenderable.WorldTransformDirty PositionableRenderable.Pickable PositionableRenderable.RenderIn PositionableRenderable.SurfaceEffect PositionableRenderable.SurfaceShader PositionableRenderable.Billboard PositionableRenderable.PreTransform PositionableRenderable.Scale PositionableRenderable.SetScale(float) PositionableRenderable.Rotation PositionableRenderable.Position PositionableRenderable.BoundingSphere PositionableRenderable.WorldBoundingSphere PositionableRenderable.DrawBoundingSphere PositionableRenderable.BoundingBox PositionableRenderable.WorldBoundingBox PositionableRenderable.DrawBoundingBox PositionableRenderable.RequiredViews PositionableRenderable.RenderHelper(Action, XMaterial, Camera, params LightSource[]) PositionableRenderable.IsVisible(Camera) PositionableRenderable.Intersects(Ray, out DoubleVector3) PositionableRenderable.OnEngineSet() Renderable.PreRender Renderable.OnPreRender() Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha Renderable.PrepareRender() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Terrain(Mesh, XMaterial, bool) Internal helper constructor protected Terrain(Mesh mesh, XMaterial material, bool lighting) Parameters mesh Mesh The mesh use for rendering material XMaterial The material to use for rendering the terrain lighting bool Use/support lighting when rendering this terrain? Properties Lighting Use/support lighting when rendering this terrain? public bool Lighting { get; } Property Value bool Size The size of the terrain in game units public Size Size { get; } Property Value Size StretchH A factor by which the terrain is horizontally stretched public float StretchH { get; } Property Value float StretchV A factor by which the terrain is vertically stretched public float StretchV { get; } Property Value float Methods Create(Engine, Size, float, float, ByteGrid, NibbleGrid, string[], ByteVector4Grid?, bool, int) Creates a new terrain from a height-map and a texture-map public static Terrain Create(Engine engine, Size size, float stretchH, float stretchV, ByteGrid heightMap, NibbleGrid textureMap, string[] textures, ByteVector4Grid? occlusionIntervalMap, bool lighting, int blockSize) Parameters engine Engine The Engine to create the terrain in size Size The size of the terrain stretchH float A factor by which all horizontal distances are multiplied stretchV float A factor by which all vertical distances are multiplied heightMap ByteGrid The height values of the terrain in a 2D array. Grid size = Terrain size textureMap NibbleGrid The texture values of the terrain in a 2D array. Grid size = Terrain size / 3 textures string[] An array with a maximum of 16 texture names associated to textureMap occlusionIntervalMap ByteVector4Grid The angles at which the global light source occlusion begins and ends. Grid size = Terrain size; may be null for no shadowing lighting bool Shall this mesh be prepared for lighting? (calculate normal vectors, make shaders support lighting, ...) blockSize int How many points in X and Y direction shall one block for culling be? Returns Terrain The newly created terrain Exceptions FileNotFoundException One of the specified texture files could not be found. IOException There was an error reading one of the texture files. UnauthorizedAccessException Read access to one of the texture files is not permitted. InvalidDataException One of the texture files does not contain a valid texture. GetFacePosition(int, float, float) protected virtual Vector3 GetFacePosition(int faceIndex, float u, float v) Parameters faceIndex int u float v float Returns Vector3 IntersectsBounding(Ray) Determine whether WorldBoundingBox and WorldBoundingSphere (if defined) are intersected by a ray. protected override bool IntersectsBounding(Ray ray) Parameters ray Ray A ray in world space along which to check for intersections. Returns bool true if the bounding bodies were undefined or intersected by the ray. ModifyColor(Point, Color[,]) Modifies the color of a part of the terrain. public void ModifyColor(Point start, Color[,] partialColorMap) Parameters start Point The top-left index of the area to modify. partialColorMap Color[,] A 2D array containing the new color values - array size specifies size of the area to modify. Remarks Cannot be called when Lighting is false, because coloring uses the lighting subsystem. ModifyHeight(Point, byte[,]) Modifies the height of a part of the terrain. public void ModifyHeight(Point start, byte[,] partialHeightMap) Parameters start Point The top-left index of the area to modify. partialHeightMap byte[,] A 2D array containing the new height values; array size specifies size of the area to modify. Remarks Cannot be called when Lighting is true, because normals are not updated. Invalidates all internal SlimDX.BoundingBoxes. RecalcWorldTransform() Called to generate/update transformation matrices and related values protected override void RecalcWorldTransform()"
  },
  "api/OmegaEngine.Graphics.Renderables.VertexGroup.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.VertexGroup.html",
    "title": "Class VertexGroup | OmegaEngine",
    "summary": "Class VertexGroup Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll A simple set of vertexes that can be rendered. public class VertexGroup : PositionableRenderable, IDisposable, IPositionable Inheritance object EngineElement Renderable PositionableRenderable VertexGroup Implements IDisposable IPositionable Inherited Members PositionableRenderable.WorldTransformDirty PositionableRenderable.Pickable PositionableRenderable.RenderIn PositionableRenderable.SurfaceEffect PositionableRenderable.SurfaceShader PositionableRenderable.Billboard PositionableRenderable.PreTransform PositionableRenderable.Scale PositionableRenderable.SetScale(float) PositionableRenderable.Rotation PositionableRenderable.Position PositionableRenderable.RecalcWorldTransform() PositionableRenderable.BoundingSphere PositionableRenderable.WorldBoundingSphere PositionableRenderable.DrawBoundingSphere PositionableRenderable.BoundingBox PositionableRenderable.WorldBoundingBox PositionableRenderable.DrawBoundingBox PositionableRenderable.RequiredViews PositionableRenderable.RenderHelper(Action, XMaterial, Camera, params LightSource[]) PositionableRenderable.IsVisible(Camera) PositionableRenderable.Intersects(Ray, out float) PositionableRenderable.Intersects(Ray, out DoubleVector3) PositionableRenderable.IntersectsBounding(Ray) Renderable.PreRender Renderable.OnPreRender() Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha Renderable.PrepareRender() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks No culling, intersect testing, etc.. Use Model for that. Constructors VertexGroup(PrimitiveType, PositionColored[], short[]?) Creates a new colored vertex group public VertexGroup(PrimitiveType primitiveType, PositionColored[] vertexes, short[]? indexes = null) Parameters primitiveType PrimitiveType The type of primitives to generate from the vertexes vertexes PositionColored[] An array for vertexes with position and color information indexes short[] An array of indexes for the index buffer; null for no indexes VertexGroup(PrimitiveType, PositionNormalColored[], short[]?) Creates a new colored vertex group public VertexGroup(PrimitiveType primitiveType, PositionNormalColored[] vertexes, short[]? indexes = null) Parameters primitiveType PrimitiveType The type of primitives to generate from the vertexes vertexes PositionNormalColored[] An array for vertexes with position and color information indexes short[] An array of indexes for the index buffer; null for no indexes VertexGroup(PrimitiveType, PositionNormalTextured[], short[]?, XMaterial) Creates a new textured vertex group public VertexGroup(PrimitiveType primitiveType, PositionNormalTextured[] vertexes, short[]? indexes, XMaterial material) Parameters primitiveType PrimitiveType The type of primitives to generate from the vertexes vertexes PositionNormalTextured[] An array for vertexes with position and texture information indexes short[] An array of indexes for the index buffer; null for no indexes material XMaterial The material to use for rendering VertexGroup(PrimitiveType, PositionTextured[], short[], XMaterial) Creates a new textured vertex group public VertexGroup(PrimitiveType primitiveType, PositionTextured[] vertexes, short[] indexes, XMaterial material) Parameters primitiveType PrimitiveType The type of primitives to generate from the vertexes vertexes PositionTextured[] An array for vertexes with position and texture information indexes short[] An array of indexes for the index buffer; null for no indexes material XMaterial The material to use for rendering Methods OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() Quad(float, ITextureProvider?) Creates a new textured quad. public static VertexGroup Quad(float size, ITextureProvider? texture = null) Parameters size float The length of a border of the quad. texture ITextureProvider The texture to place on the vertex group; null for no texture. Returns VertexGroup The vertex group that was created."
  },
  "api/OmegaEngine.Graphics.Renderables.ViewType.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.ViewType.html",
    "title": "Enum ViewType | OmegaEngine",
    "summary": "Enum ViewType Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll public enum ViewType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields All = 0 Render in all types of Views GlowOnly = 3 Render only in GlowViews NormalOnly = 1 Do not render in SupportViews SupportOnly = 2 Render only in SupportViews See Also RenderIn"
  },
  "api/OmegaEngine.Graphics.Renderables.Water.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.Water.html",
    "title": "Class Water | OmegaEngine",
    "summary": "Class Water Namespace OmegaEngine.Graphics.Renderables Assembly OmegaEngine.dll Displays a water plane with reflections and refraction public class Water : Model, IDisposable, IPositionable Inheritance object EngineElement Renderable PositionableRenderable Model Water Implements IDisposable IPositionable Inherited Members Model.Quad(Engine, XMaterial, float, float) Model.Box(Engine, XMaterial, float, float, float) Model.Sphere(Engine, XMaterial, float, int, int) Model.Cylinder(Engine, XMaterial, float, float, float, int, int) Model.Cylinder(Engine, XMaterial, float, float, float) Model.Disc(Engine, XMaterial, float, float, float, int) Model.Disc(Engine, XMaterial, float, float, float) Model.Mesh Model.Materials Model.SetTexture(ITextureProvider) Model.VertexCount Model.NumberSubsets Model.RenderSubset(int, Camera, LightSource[]) Model.Intersects(Ray, out float) PositionableRenderable.WorldTransformDirty PositionableRenderable.Pickable PositionableRenderable.RenderIn PositionableRenderable.SurfaceEffect PositionableRenderable.SurfaceShader PositionableRenderable.Billboard PositionableRenderable.PreTransform PositionableRenderable.Scale PositionableRenderable.SetScale(float) PositionableRenderable.Rotation PositionableRenderable.Position PositionableRenderable.RecalcWorldTransform() PositionableRenderable.BoundingSphere PositionableRenderable.WorldBoundingSphere PositionableRenderable.DrawBoundingSphere PositionableRenderable.BoundingBox PositionableRenderable.WorldBoundingBox PositionableRenderable.DrawBoundingBox PositionableRenderable.RequiredViews PositionableRenderable.RenderHelper(Action, XMaterial, Camera, params LightSource[]) PositionableRenderable.IsVisible(Camera) PositionableRenderable.Intersects(Ray, out DoubleVector3) PositionableRenderable.IntersectsBounding(Ray) PositionableRenderable.OnEngineSet() Renderable.PreRender Renderable.OnPreRender() Renderable.RenderCount Renderable.Name Renderable.ToString() Renderable.Visible Renderable.Wireframe Renderable.VisibilityDistance Renderable.Alpha Renderable.PrepareRender() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Water(Engine, SizeF) Creates a new water plane. public Water(Engine engine, SizeF size) Parameters engine Engine The Engine to use for rendering. size SizeF The size of the water plane. Properties Size The size of the water plane public SizeF Size { get; } Property Value SizeF Methods OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() SetupChildViews(View, float) Creates views as reflection and refraction sources - Call after setting position! public void SetupChildViews(View view, float clipTolerance = 2) Parameters view View The original view to reflect clipTolerance float How far to shift the clip plane along its normal vector to reduce graphical glitches at corners Remarks This method may be called only once on an instance"
  },
  "api/OmegaEngine.Graphics.Renderables.html": {
    "href": "api/OmegaEngine.Graphics.Renderables.html",
    "title": "Namespace OmegaEngine.Graphics.Renderables | OmegaEngine",
    "summary": "Namespace OmegaEngine.Graphics.Renderables Objects rendered in 3D space. Classes AnimatedModel A mesh-based model with frame-hierarchy animation that can be rendered by the engine BoundingExtensions Provides extension methods for SlimDX.BoundingBox and SlimDX.BoundingSphere. CpuParticleParameters A set of information about a particle in a particle system CpuParticlePreset A set of information about a particle system as a whole CpuParticleSystem A particle system whose particles are tracked by the CPU. FloatingModel A Model that is rendered observing the Cameras view direction, but ignoring its position. Model A model (stored as a Direct3DX Mesh with one or more subsets). Handle PositionableRenderable An object that can be Render(Camera, GetLights)ed at a specific Position in a Scene. Renderable An object that can be Render(Camera, GetLights)ed by the Engine. SimpleSkybox A cubic skybox existing of 4 or 6 non-animated planes. Skybox Provides a background for a Scene that \"follows\" the Position, creating the illusion of infinite distance. Terrain Displays a multi-textured terrain VertexGroup A simple set of vertexes that can be rendered. Water Displays a water plane with reflections and refraction Enums BillboardMode SurfaceEffect ViewType"
  },
  "api/OmegaEngine.Graphics.Scene.html": {
    "href": "api/OmegaEngine.Graphics.Scene.html",
    "title": "Class Scene | OmegaEngine",
    "summary": "Class Scene Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll Represents a scene that can be viewed by a Camera. public sealed class Scene : EngineElement, IDisposable Inheritance object EngineElement Scene Implements IDisposable Inherited Members EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Multiple Views can share one Scene. Constructors Scene() public Scene() Properties Lights All light sources affecting the entities in this scene public ICollection<LightSource> Lights { get; } Property Value ICollection<LightSource> Positionables All PositionableRenderables contained within this scene. public ICollection<PositionableRenderable> Positionables { get; } Property Value ICollection<PositionableRenderable> Remarks Will be disposed when Dispose() is called. Skybox The current Skybox for this scene public Skybox? Skybox { get; set; } Property Value Skybox Remarks Will be disposed when Dispose() is called. See Also Scene"
  },
  "api/OmegaEngine.Graphics.Shaders.DynamicShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.DynamicShader.html",
    "title": "Class DynamicShader | OmegaEngine",
    "summary": "Class DynamicShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll Helper class for dynamically generating Shader code public static class DynamicShader Inheritance object DynamicShader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Uses partial .fx files with XML control comments as input Methods FromContent(string, Dictionary<string, IEnumerable<int>>, bool, EngineCapabilities) Loads a dynamic shader file via the ContentManager and compiles it. public static DataStream FromContent(string id, Dictionary<string, IEnumerable<int>> controllers, bool lighting, EngineCapabilities capabilities) Parameters id string The ID of the shader to be loaded controllers Dictionary<string, IEnumerable<int>> A set of int arrays that control the counters; null if there is no sync-code in the shader lighting bool Optimize the shader for lighting or no lighting capabilities EngineCapabilities The rendering capabilities available to the shader Returns DataStream The compiled shader"
  },
  "api/OmegaEngine.Graphics.Shaders.GeneralShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.GeneralShader.html",
    "title": "Class GeneralShader | OmegaEngine",
    "summary": "Class GeneralShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A general-purpose surface shader with optional support for normal and specular maps public class GeneralShader : LightingShader, IDisposable Inheritance object EngineElement Shader SurfaceShader LightingShader GeneralShader Implements IDisposable Inherited Members LightingShader.RunPasses(Action, XMaterial, params LightSource[]) SurfaceShader.SetupLight(PointLight, int, XMaterial) SurfaceShader.SetupLight(DirectionalLight, int, XMaterial) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version Methods Apply(Action, XMaterial, Camera, params LightSource[]) Applies the shader to the content in the render delegate public override void Apply(Action render, XMaterial material, Camera camera, params LightSource[] lights) Parameters render Action The render delegate (is called once for every shader pass) material XMaterial The material to be used by this shader; null for device texture camera Camera The camera for transformation information lights LightSource[] An array of all lights this shader should consider OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() See Also DefaultShader"
  },
  "api/OmegaEngine.Graphics.Shaders.LightingShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.LightingShader.html",
    "title": "Class LightingShader | OmegaEngine",
    "summary": "Class LightingShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A SurfaceShader that properly reacts to LightSources public abstract class LightingShader : SurfaceShader, IDisposable Inheritance object EngineElement Shader SurfaceShader LightingShader Implements IDisposable Derived GeneralShader TerrainShader Inherited Members SurfaceShader.SetupLight(PointLight, int, XMaterial) SurfaceShader.SetupLight(DirectionalLight, int, XMaterial) SurfaceShader.Apply(Action, XMaterial, Camera, params LightSource[]) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnEngineSet() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods RunPasses(Action, XMaterial, params LightSource[]) Runs the actual shader passes protected override void RunPasses(Action render, XMaterial material, params LightSource[] lights) Parameters render Action The render delegate (is called once for every shader pass) material XMaterial The material to be used by this shader; null for device texture lights LightSource[] An array of all lights this shader should consider; null for no lighting"
  },
  "api/OmegaEngine.Graphics.Shaders.ParameterInfo.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.ParameterInfo.html",
    "title": "Struct ParameterInfo | OmegaEngine",
    "summary": "Struct ParameterInfo Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public struct ParameterInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Handle public EffectHandle Handle Field Value EffectHandle SemanticID public SemanticID SemanticID Field Value SemanticID Type public ParameterType Type Field Value ParameterType"
  },
  "api/OmegaEngine.Graphics.Shaders.PostBleachShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostBleachShader.html",
    "title": "Class PostBleachShader | OmegaEngine",
    "summary": "Class PostBleachShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A post-screen shader that bleaches out the colors. public class PostBleachShader : PostShader, IDisposable Inheritance object EngineElement Shader PostShader PostBleachShader Implements IDisposable Inherited Members PostShader.OverlayRendering PostShader.Enabled PostShader.RunPasses(Action, Size, RenderTarget) PostShader.Apply(Action, Size, RenderTarget) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version Opacity How strong the bleaching effect should be - values between 0 and 1 public float Opacity { get; set; } Property Value float Methods OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Shaders.PostBlurShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostBlurShader.html",
    "title": "Class PostBlurShader | OmegaEngine",
    "summary": "Class PostBlurShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A post-screen shader that blurs the view using a Gaussian blur filter. public class PostBlurShader : PostShader, IDisposable Inheritance object EngineElement Shader PostShader PostBlurShader Implements IDisposable Derived PostGlowShader Inherited Members PostShader.OverlayRendering PostShader.Enabled PostShader.RunPasses(Action, Size, RenderTarget) PostShader.Apply(Action, Size, RenderTarget) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties BlurStrength How strongly to blur the image - values between 0 and 10 public float BlurStrength { get; set; } Property Value float MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version Methods OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Shaders.PostCameraShakeShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostCameraShakeShader.html",
    "title": "Class PostCameraShakeShader | OmegaEngine",
    "summary": "Class PostCameraShakeShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A post-screen shader that simulates a \"shaking camera\" effect. public class PostCameraShakeShader : PostShader, IDisposable Inheritance object EngineElement Shader PostShader PostCameraShakeShader Implements IDisposable Inherited Members PostShader.OverlayRendering PostShader.Enabled PostShader.RunPasses(Action, Size, RenderTarget) PostShader.Apply(Action, Size, RenderTarget) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks The effect is actually fake, since the perspective cannot be extended beyound the original borders of the scene. Close-up slow-motition observation would reveal the borders to be stretched or squashed. Properties MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version Shakiness How erratically to shake the camera - values between 0 and 1 public float Shakiness { get; set; } Property Value float Sharpness How close the the origin to keep the shaking view - values between 0 and 10 public float Sharpness { get; set; } Property Value float Speed How fast to shake the camera - values between -1 and 100 public float Speed { get; set; } Property Value float TimeDelta public Vector2 TimeDelta { get; set; } Property Value Vector2 Methods OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Shaders.PostColorCorrectionShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostColorCorrectionShader.html",
    "title": "Class PostColorCorrectionShader | OmegaEngine",
    "summary": "Class PostColorCorrectionShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A post-screen shader for applying TV-like settings like brightness, contrast, hue, etc. public class PostColorCorrectionShader : PostShader, IDisposable Inheritance object EngineElement Shader PostShader PostColorCorrectionShader Implements IDisposable Inherited Members PostShader.OverlayRendering PostShader.Enabled PostShader.RunPasses(Action, Size, RenderTarget) PostShader.Apply(Action, Size, RenderTarget) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Brightness How bright the picture should be - values between 0 (black) and 5 (5x normal) public float Brightness { get; set; } Property Value float Contrast The contrast level of the picture - values between -5 and 5 public float Contrast { get; set; } Property Value float Hue The color hue rotation of the picture - values between 0 and 360 public float Hue { get; set; } Property Value float MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version Saturation The color saturation level of the picture - values between -5 and 5 public float Saturation { get; set; } Property Value float Methods OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Shaders.PostGlowShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostGlowShader.html",
    "title": "Class PostGlowShader | OmegaEngine",
    "summary": "Class PostGlowShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A post-screen shader that adds a bloom-like glow-effect around objects in the scene. public class PostGlowShader : PostBlurShader, IDisposable Inheritance object EngineElement Shader PostShader PostBlurShader PostGlowShader Implements IDisposable Inherited Members PostBlurShader.BlurStrength PostShader.Enabled PostShader.Apply(Action, Size, RenderTarget) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PostGlowShader(TextureView) Creates a new instance of the shader public PostGlowShader(TextureView glowView) Parameters glowView TextureView A render target storing the glow map of the current view Exceptions NotSupportedException The graphics card does not support this shader. Properties GlowStrength A factor by which the blurred glow color is multiplied - values between 0 and 100 public float GlowStrength { get; set; } Property Value float MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version OverlayRendering Does this post-screen shader use overlay rendering instead of a scene map? public override sealed bool OverlayRendering { get; } Property Value bool Methods OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() RunPasses(Action, Size, RenderTarget) Runs the actual shader passes protected override void RunPasses(Action render, Size sceneSize, RenderTarget sceneMap) Parameters render Action The render delegate (is called once for every shader pass) sceneSize Size The size of the scene on the screen - leave empty for fullscreen sceneMap RenderTarget Should be null because a glow map is used instead"
  },
  "api/OmegaEngine.Graphics.Shaders.PostHaloShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostHaloShader.html",
    "title": "Class PostHaloShader | OmegaEngine",
    "summary": "Class PostHaloShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A post-screen shader that adds shining halos around objects in the scene. public class PostHaloShader : PostShader, IDisposable Inheritance object EngineElement Shader PostShader PostHaloShader Implements IDisposable Inherited Members PostShader.OverlayRendering PostShader.Enabled PostShader.RunPasses(Action, Size, RenderTarget) PostShader.Apply(Action, Size, RenderTarget) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties GlowColor The color of the halo public Color GlowColor { get; set; } Property Value Color Glowness How strong the halo shall glow - values between 0 and 3 public float Glowness { get; set; } Property Value float MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version Methods OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Shaders.PostRadialBlurShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostRadialBlurShader.html",
    "title": "Class PostRadialBlurShader | OmegaEngine",
    "summary": "Class PostRadialBlurShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A post-screen shader that blurs the view radially. public class PostRadialBlurShader : PostShader, IDisposable Inheritance object EngineElement Shader PostShader PostRadialBlurShader Implements IDisposable Inherited Members PostShader.OverlayRendering PostShader.Enabled PostShader.RunPasses(Action, Size, RenderTarget) PostShader.Apply(Action, Size, RenderTarget) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties BlurCenter The center/origin of the radial blur effect public Vector2 BlurCenter { get; set; } Property Value Vector2 BlurStart The minimum range at which to start blur sampling - values between 0 and 10 public float BlurStart { get; set; } Property Value float BlurWidth How wide a blur sampling is - higher value = more blurry image - values between -1 and 1 public float BlurWidth { get; set; } Property Value float MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version Methods OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Shaders.PostScratchedFilmShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostScratchedFilmShader.html",
    "title": "Class PostScratchedFilmShader | OmegaEngine",
    "summary": "Class PostScratchedFilmShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A post-screen shader that creates \"scratched film\" effect. public class PostScratchedFilmShader : PostShader, IDisposable Inheritance object EngineElement Shader PostShader PostScratchedFilmShader Implements IDisposable Inherited Members PostShader.OverlayRendering PostShader.Enabled PostShader.RunPasses(Action, Size, RenderTarget) PostShader.Apply(Action, Size, RenderTarget) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version ScratchIntensity The number of scratches public float ScratchIntensity { get; set; } Property Value float ScratchWidth The size of the scratches public float ScratchWidth { get; set; } Property Value float Speed The horizontal speed of the scratches public float Speed { get; set; } Property Value float Speed2 The vertical speed of the scratches public float Speed2 { get; set; } Property Value float Methods OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Shaders.PostSepiaShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostSepiaShader.html",
    "title": "Class PostSepiaShader | OmegaEngine",
    "summary": "Class PostSepiaShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A post-screen shader that creates an \"old paper\" look. public class PostSepiaShader : PostShader, IDisposable Inheritance object EngineElement Shader PostShader PostSepiaShader Implements IDisposable Inherited Members PostShader.OverlayRendering PostShader.Enabled PostShader.RunPasses(Action, Size, RenderTarget) PostShader.Apply(Action, Size, RenderTarget) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Desaturation How strongly to turn the image it into grayscale - values between 0 and 1 public float Desaturation { get; set; } Property Value float MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version PaperTone The color to give the image after turning it into grayscale public Color PaperTone { get; set; } Property Value Color StainTone The color of the image stains public Color StainTone { get; set; } Property Value Color Toning How strongly to apply the PaperTone color - values between 0 and 1 public float Toning { get; set; } Property Value float Methods OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.Shaders.PostShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.PostShader.html",
    "title": "Class PostShader | OmegaEngine",
    "summary": "Class PostShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A shader that is applied to the complete scene after rendering. public abstract class PostShader : Shader, IDisposable Inheritance object EngineElement Shader PostShader Implements IDisposable Derived PostBleachShader PostBlurShader PostCameraShakeShader PostColorCorrectionShader PostHaloShader PostRadialBlurShader PostScratchedFilmShader PostSepiaShader Inherited Members Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnEngineSet() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Enabled Shall this post-screen effect be applied? public bool Enabled { get; set; } Property Value bool OverlayRendering Does this post-screen shader use overlay rendering instead of a scene map? public virtual bool OverlayRendering { get; } Property Value bool Methods Apply(Action, Size, RenderTarget) Applies a post-screen shader to a scene public virtual void Apply(Action render, Size sceneSize, RenderTarget sceneMap) Parameters render Action The delegate to call back for rendering the output sceneSize Size The size of the scene on the screen - leave empty for fullscreen sceneMap RenderTarget A texture containing the rendered scene, null if the shader doesn't need it RunPasses(Action, Size, RenderTarget) Runs the actual shader passes protected virtual void RunPasses(Action render, Size sceneSize, RenderTarget sceneMap) Parameters render Action The render delegate (is called once for every shader pass) sceneSize Size The size of the scene on the screen - leave empty for fullscreen sceneMap RenderTarget A texture containing the rendered scene, null if the shader doesn't need it See Also PostShaders"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptClear.ClearType.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptClear.ClearType.html",
    "title": "Enum SasScriptClear.ClearType | OmegaEngine",
    "summary": "Enum SasScriptClear.ClearType Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public enum SasScriptClear.ClearType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Color = 0 Depth = 1 Stencil = 2"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptClear.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptClear.html",
    "title": "Class SasScriptClear | OmegaEngine",
    "summary": "Class SasScriptClear Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptClear : SasScriptCommand Inheritance object SasScriptCommand SasScriptClear Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptClear(Effect) public SasScriptClear(Effect effect) Parameters effect Effect Properties ClearOption public SasScriptClear.ClearType ClearOption { get; } Property Value SasScriptClear.ClearType Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptClearSetColor.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptClearSetColor.html",
    "title": "Class SasScriptClearSetColor | OmegaEngine",
    "summary": "Class SasScriptClearSetColor Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptClearSetColor : SasScriptCommand Inheritance object SasScriptCommand SasScriptClearSetColor Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptClearSetColor(Effect) public SasScriptClearSetColor(Effect effect) Parameters effect Effect Properties Color public Vector4 Color { get; } Property Value Vector4 Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptClearSetDepth.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptClearSetDepth.html",
    "title": "Class SasScriptClearSetDepth | OmegaEngine",
    "summary": "Class SasScriptClearSetDepth Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptClearSetDepth : SasScriptCommand Inheritance object SasScriptCommand SasScriptClearSetDepth Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptClearSetDepth(Effect) public SasScriptClearSetDepth(Effect effect) Parameters effect Effect Properties Depth public float Depth { get; } Property Value float Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptClearSetStencil.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptClearSetStencil.html",
    "title": "Class SasScriptClearSetStencil | OmegaEngine",
    "summary": "Class SasScriptClearSetStencil Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptClearSetStencil : SasScriptCommand Inheritance object SasScriptCommand SasScriptClearSetStencil Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptClearSetStencil(Effect) public SasScriptClearSetStencil(Effect effect) Parameters effect Effect Properties Stencil public int Stencil { get; } Property Value int Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptCommand.CommandType.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptCommand.CommandType.html",
    "title": "Enum SasScriptCommand.CommandType | OmegaEngine",
    "summary": "Enum SasScriptCommand.CommandType Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public enum SasScriptCommand.CommandType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Clear = 13 ClearSetColor = 14 ClearSetDepth = 15 ClearSetStencil = 16 Draw = 10 GeometryList = 17 Hint = 18 LoopByCount = 1 LoopByType = 0 LoopEnd = 5 LoopGetCount = 2 LoopGetIndex = 3 LoopUpdate = 4 Pass = 9 RenderColorTarget = 6 RenderDepthStencilTarget = 7 ScriptExternal = 12 ScriptSignature = 11 Technique = 8"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptCommand.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptCommand.html",
    "title": "Class SasScriptCommand | OmegaEngine",
    "summary": "Class SasScriptCommand Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptCommand Inheritance object SasScriptCommand Derived SasScriptClear SasScriptClearSetColor SasScriptClearSetDepth SasScriptClearSetStencil SasScriptDraw SasScriptGeometryList SasScriptHint SasScriptLoopByCount SasScriptLoopByType SasScriptLoopEnd SasScriptLoopGetCount SasScriptLoopGetIndex SasScriptLoopUpdate SasScriptPass SasScriptRenderColorTarget SasScriptRenderDepthStencilTarget SasScriptScriptExternal SasScriptScriptSignature SasScriptTechnique Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptCommand(CommandType, Effect) public SasScriptCommand(SasScriptCommand.CommandType type, Effect effect) Parameters type SasScriptCommand.CommandType effect Effect Fields Effect protected readonly Effect Effect Field Value Effect Index public int Index Field Value int IsDirty public bool IsDirty Field Value bool Options public List<string> Options Field Value List<string> Properties Command public SasScriptCommand.CommandType Command { get; } Property Value SasScriptCommand.CommandType Selector public string? Selector { get; set; } Property Value string Methods EvaluateChoice() protected string EvaluateChoice() Returns string EvaluateChoice(ref int) protected string EvaluateChoice(ref int index) Parameters index int Returns string Setup() public virtual bool Setup() Returns bool Update() public virtual bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptDraw.DrawType.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptDraw.DrawType.html",
    "title": "Enum SasScriptDraw.DrawType | OmegaEngine",
    "summary": "Enum SasScriptDraw.DrawType Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public enum SasScriptDraw.DrawType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Buffer = 2 Geometry = 1 Hint = 3 Scene = 0"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptDraw.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptDraw.html",
    "title": "Class SasScriptDraw | OmegaEngine",
    "summary": "Class SasScriptDraw Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptDraw : SasScriptCommand Inheritance object SasScriptCommand SasScriptDraw Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptDraw(Effect) public SasScriptDraw(Effect effect) Parameters effect Effect Properties DrawOption public SasScriptDraw.DrawType DrawOption { get; } Property Value SasScriptDraw.DrawType Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptGeometryList.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptGeometryList.html",
    "title": "Class SasScriptGeometryList | OmegaEngine",
    "summary": "Class SasScriptGeometryList Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptGeometryList : SasScriptCommand Inheritance object SasScriptCommand SasScriptGeometryList Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.Update() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptGeometryList(Effect) public SasScriptGeometryList(Effect effect) Parameters effect Effect"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptHint.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptHint.html",
    "title": "Class SasScriptHint | OmegaEngine",
    "summary": "Class SasScriptHint Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptHint : SasScriptCommand Inheritance object SasScriptCommand SasScriptHint Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.Update() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptHint(Effect) public SasScriptHint(Effect effect) Parameters effect Effect"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptLoopByCount.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptLoopByCount.html",
    "title": "Class SasScriptLoopByCount | OmegaEngine",
    "summary": "Class SasScriptLoopByCount Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptLoopByCount : SasScriptCommand Inheritance object SasScriptCommand SasScriptLoopByCount Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptLoopByCount(Effect) public SasScriptLoopByCount(Effect effect) Parameters effect Effect Properties Count public int Count { get; } Property Value int Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptLoopByType.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptLoopByType.html",
    "title": "Class SasScriptLoopByType | OmegaEngine",
    "summary": "Class SasScriptLoopByType Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptLoopByType : SasScriptCommand Inheritance object SasScriptCommand SasScriptLoopByType Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.Update() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptLoopByType(Effect) public SasScriptLoopByType(Effect effect) Parameters effect Effect"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptLoopEnd.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptLoopEnd.html",
    "title": "Class SasScriptLoopEnd | OmegaEngine",
    "summary": "Class SasScriptLoopEnd Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptLoopEnd : SasScriptCommand Inheritance object SasScriptCommand SasScriptLoopEnd Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.Update() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptLoopEnd(Effect) public SasScriptLoopEnd(Effect effect) Parameters effect Effect"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptLoopGetCount.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptLoopGetCount.html",
    "title": "Class SasScriptLoopGetCount | OmegaEngine",
    "summary": "Class SasScriptLoopGetCount Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptLoopGetCount : SasScriptCommand Inheritance object SasScriptCommand SasScriptLoopGetCount Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptLoopGetCount(Effect) public SasScriptLoopGetCount(Effect effect) Parameters effect Effect Properties DestinationParameter public EffectHandle DestinationParameter { get; } Property Value EffectHandle Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptLoopGetIndex.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptLoopGetIndex.html",
    "title": "Class SasScriptLoopGetIndex | OmegaEngine",
    "summary": "Class SasScriptLoopGetIndex Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptLoopGetIndex : SasScriptCommand Inheritance object SasScriptCommand SasScriptLoopGetIndex Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptLoopGetIndex(Effect) public SasScriptLoopGetIndex(Effect effect) Parameters effect Effect Properties DestinationParameter public EffectHandle DestinationParameter { get; } Property Value EffectHandle Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptLoopUpdate.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptLoopUpdate.html",
    "title": "Class SasScriptLoopUpdate | OmegaEngine",
    "summary": "Class SasScriptLoopUpdate Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptLoopUpdate : SasScriptCommand Inheritance object SasScriptCommand SasScriptLoopUpdate Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.Update() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptLoopUpdate(Effect) public SasScriptLoopUpdate(Effect effect) Parameters effect Effect"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptPass.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptPass.html",
    "title": "Class SasScriptPass | OmegaEngine",
    "summary": "Class SasScriptPass Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptPass : SasScriptCommand Inheritance object SasScriptCommand SasScriptPass Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptPass(Effect) public SasScriptPass(Effect effect) Parameters effect Effect Properties PassNum public int PassNum { get; } Property Value int Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptRenderColorTarget.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptRenderColorTarget.html",
    "title": "Class SasScriptRenderColorTarget | OmegaEngine",
    "summary": "Class SasScriptRenderColorTarget Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptRenderColorTarget : SasScriptCommand Inheritance object SasScriptCommand SasScriptRenderColorTarget Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptRenderColorTarget(Effect) public SasScriptRenderColorTarget(Effect effect) Parameters effect Effect Properties TextureHandle public EffectHandle TextureHandle { get; } Property Value EffectHandle Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptRenderDepthStencilTarget.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptRenderDepthStencilTarget.html",
    "title": "Class SasScriptRenderDepthStencilTarget | OmegaEngine",
    "summary": "Class SasScriptRenderDepthStencilTarget Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptRenderDepthStencilTarget : SasScriptCommand Inheritance object SasScriptCommand SasScriptRenderDepthStencilTarget Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptRenderDepthStencilTarget(Effect) public SasScriptRenderDepthStencilTarget(Effect effect) Parameters effect Effect Properties TextureHandle public EffectHandle TextureHandle { get; } Property Value EffectHandle Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptScriptExternal.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptScriptExternal.html",
    "title": "Class SasScriptScriptExternal | OmegaEngine",
    "summary": "Class SasScriptScriptExternal Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptScriptExternal : SasScriptCommand Inheritance object SasScriptCommand SasScriptScriptExternal Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.Update() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptScriptExternal(Effect) public SasScriptScriptExternal(Effect effect) Parameters effect Effect"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptScriptSignature.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptScriptSignature.html",
    "title": "Class SasScriptScriptSignature | OmegaEngine",
    "summary": "Class SasScriptScriptSignature Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptScriptSignature : SasScriptCommand Inheritance object SasScriptCommand SasScriptScriptSignature Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.Update() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptScriptSignature(Effect) public SasScriptScriptSignature(Effect effect) Parameters effect Effect"
  },
  "api/OmegaEngine.Graphics.Shaders.SasScriptTechnique.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SasScriptTechnique.html",
    "title": "Class SasScriptTechnique | OmegaEngine",
    "summary": "Class SasScriptTechnique Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public class SasScriptTechnique : SasScriptCommand Inheritance object SasScriptCommand SasScriptTechnique Inherited Members SasScriptCommand.Index SasScriptCommand.IsDirty SasScriptCommand.Effect SasScriptCommand.Options SasScriptCommand.Command SasScriptCommand.Selector SasScriptCommand.Setup() SasScriptCommand.EvaluateChoice() SasScriptCommand.EvaluateChoice(ref int) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SasScriptTechnique(Effect) public SasScriptTechnique(Effect effect) Parameters effect Effect Properties Handle public EffectHandle Handle { get; } Property Value EffectHandle Methods Update() public override bool Update() Returns bool"
  },
  "api/OmegaEngine.Graphics.Shaders.ScriptEffectType.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.ScriptEffectType.html",
    "title": "Enum ScriptEffectType | OmegaEngine",
    "summary": "Enum ScriptEffectType Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public enum ScriptEffectType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Object = 1 Scene = 0"
  },
  "api/OmegaEngine.Graphics.Shaders.SemanticID.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SemanticID.html",
    "title": "Enum SemanticID | OmegaEngine",
    "summary": "Enum SemanticID Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll public enum SemanticID Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Ambient = 9 AnimationTick = 28 AnimationTime = 27 Attenuation = 20 CameraPosition = 24 Color = 4 Diffuse = 5 DiffuseMap = 6 Direction = 3 ElapsedTime = 26 Emissive = 10 Environment = 14 EnvironmentNormal = 15 FilterMode = 56 Height = 18 HeightMap = 19 LeftMouseDown = 30 MousePosition = 29 Normal = 16 NormalMap = 17 Opacity = 13 Position = 2 Projection = 34 ProjectionInverse = 42 ProjectionInverseTranspose = 45 ProjectionTranspose = 37 Refraction = 12 RenderColorTarget = 21 RenderDepthStencilTarget = 22 ResetPulse = 31 Specular = 7 SpecularMap = 8 SpecularPower = 11 StandardsGlobal = 1 Time = 25 Unknown = 0 View = 33 ViewInverse = 41 ViewInverseTranspose = 44 ViewProjection = 52 ViewProjectionInverse = 54 ViewProjectionInverseTranspose = 55 ViewProjectionTranspose = 53 ViewTranspose = 36 ViewportPixelSize = 23 World = 32 WorldInverse = 40 WorldInverseTranspose = 43 WorldTranspose = 35 WorldView = 38 WorldViewInverse = 46 WorldViewInverseTranspose = 48 WorldViewProjection = 39 WorldViewProjectionInverse = 49 WorldViewProjectionInverseTranspose = 51 WorldViewProjectionTranspose = 50 WorldViewTranspose = 47"
  },
  "api/OmegaEngine.Graphics.Shaders.Shader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.Shader.html",
    "title": "Class Shader | OmegaEngine",
    "summary": "Class Shader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll Provides access to the properties of shader-programm executing on the GPU. public abstract class Shader : EngineElement, IDisposable Inheritance object EngineElement Shader Implements IDisposable Derived PostShader SurfaceShader Inherited Members EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields GlobalScript A list of commands composing the global SAS script protected IList<SasScriptCommand>? GlobalScript Field Value IList<SasScriptCommand> ParameterInfos A list of annotated shader parameters protected ParameterInfo[]? ParameterInfos Field Value ParameterInfo[] Passes A list of passes and their SAS scripts protected readonly Dictionary<EffectHandle, IList<SasScriptCommand>> Passes Field Value Dictionary<EffectHandle, IList<SasScriptCommand>> ScriptType The type of shader the SAS scripts were written for protected ScriptEffectType ScriptType Field Value ScriptEffectType Techniques A list of techniques and their SAS scripts protected readonly Dictionary<EffectHandle, IList<SasScriptCommand>> Techniques Field Value Dictionary<EffectHandle, IList<SasScriptCommand>> Properties Effect The Direct3D effect for this shader [Browsable(false)] protected Effect Effect { get; set; } Property Value Effect Methods ExecuteScript(IEnumerable<SasScriptCommand>, Action?, Size, RenderTarget?) Executes a SAS post-screen shader technique script block protected void ExecuteScript(IEnumerable<SasScriptCommand> script, Action? render = null, Size sceneSize = default, RenderTarget? sceneMap = null) Parameters script IEnumerable<SasScriptCommand> A list of script commands render Action The render delegate (is called once for every shader pass); null for global script sceneSize Size The size of the scene on the screen - leave empty for fullscreen sceneMap RenderTarget A texture containing the rendered scene for PostShader), null if the shader doesn't need it ExecuteScript(IEnumerable<SasScriptCommand>, Action?, Size, RenderTarget?, bool) Executes a SAS script block protected void ExecuteScript(IEnumerable<SasScriptCommand> script, Action? render, Size sceneSize, RenderTarget? sceneMap, bool passScript) Parameters script IEnumerable<SasScriptCommand> A list of script commands render Action The render delegate (is called once for every shader pass); null for global script sceneSize Size The size of the scene on the screen - leave empty for fullscreen sceneMap RenderTarget A texture containing the rendered scene for PostShader), null if the shader doesn't need it passScript bool Is this a pass script? Inject(string) Replaces the loaded shader with a new one loaded from a file at run time. public void Inject(string path) Parameters path string The shader file path relative to the shader directory or as an absolute path Remarks This should only be used for debugging! LoadShaderFile(string) Loads an Effect from an .fx or .fxo file. protected void LoadShaderFile(string path) Parameters path string The shader file path relative to the shader directory or as an absolute path OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() OnLostDevice() Called when the device has been lost. public void OnLostDevice() OnResetDevice() Called when the device has been reset. public void OnResetDevice() SetShaderParameter(string, Color) Sets a specific shader parameter. Automatically defers the action if Effect has not been set yet. protected void SetShaderParameter(string name, Color value) Parameters name string The name of the shader parameter to set. value Color The value to set. SetShaderParameter<T>(string, T) Sets a specific shader parameter. Automatically defers the action if Effect has not been set yet. protected void SetShaderParameter<T>(string name, T value) where T : struct Parameters name string The name of the shader parameter to set. value T The value to set. Type Parameters T ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/OmegaEngine.Graphics.Shaders.ShaderCompileException.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.ShaderCompileException.html",
    "title": "Class ShaderCompileException | OmegaEngine",
    "summary": "Class ShaderCompileException Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll Exception thrown when DynamicShader fails to compile FX code [Serializable] public class ShaderCompileException : Exception, ISerializable, _Exception Inheritance object Exception ShaderCompileException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ShaderCompileException() public ShaderCompileException() ShaderCompileException(SerializationInfo, StreamingContext) protected ShaderCompileException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext ShaderCompileException(string) public ShaderCompileException(string message) Parameters message string ShaderCompileException(string, Exception) public ShaderCompileException(string message, Exception innerException) Parameters message string innerException Exception ShaderCompileException(string, Exception, string) public ShaderCompileException(string message, Exception innerException, string fxCode) Parameters message string innerException Exception fxCode string Properties FxCode The FX code that failed to compile public string FxCode { get; } Property Value string"
  },
  "api/OmegaEngine.Graphics.Shaders.SurfaceShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.SurfaceShader.html",
    "title": "Class SurfaceShader | OmegaEngine",
    "summary": "Class SurfaceShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A shader that controls the look of a PositionableRenderable's surface public abstract class SurfaceShader : Shader, IDisposable Inheritance object EngineElement Shader SurfaceShader Implements IDisposable Derived LightingShader WaterShader Inherited Members Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnEngineSet() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods Apply(Action, XMaterial, Camera, params LightSource[]) Applies the shader to the content in the render delegate public virtual void Apply(Action render, XMaterial material, Camera camera, params LightSource[] lights) Parameters render Action The render delegate (is called once for every shader pass) material XMaterial The material to be used by this shader; null for device texture camera Camera The camera for transformation information lights LightSource[] An array of all lights this shader should consider RunPasses(Action, XMaterial, params LightSource[]) Runs the actual shader passes protected virtual void RunPasses(Action render, XMaterial material, params LightSource[] lights) Parameters render Action The render delegate (is called once for every shader pass) material XMaterial The material to be used by this shader; null for device texture lights LightSource[] An array of all lights this shader should consider; null for no lighting SetupLight(DirectionalLight, int, XMaterial) Transfer lighting data from a DirectionalLight to the shader protected void SetupLight(DirectionalLight light, int index, XMaterial material) Parameters light DirectionalLight The DirectionalLight to get the information from index int The light index in the shader to set material XMaterial The currently active material SetupLight(PointLight, int, XMaterial) Transfer lighting data from a PointLight to the shader protected void SetupLight(PointLight light, int index, XMaterial material) Parameters light PointLight The PointLight to get the information from index int The light index in the shader to set material XMaterial The currently active material See Also SurfaceShader"
  },
  "api/OmegaEngine.Graphics.Shaders.TerrainShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.TerrainShader.html",
    "title": "Class TerrainShader | OmegaEngine",
    "summary": "Class TerrainShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A shader that blends multiple textures together public class TerrainShader : LightingShader, IDisposable Inheritance object EngineElement Shader SurfaceShader LightingShader TerrainShader Implements IDisposable Inherited Members LightingShader.RunPasses(Action, XMaterial, params LightSource[]) SurfaceShader.SetupLight(PointLight, int, XMaterial) SurfaceShader.SetupLight(DirectionalLight, int, XMaterial) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() Shader.OnDispose() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TerrainShader(bool, EngineCapabilities, int) Creates a specialized instance of the shader public TerrainShader(bool lighting, EngineCapabilities capabilities, int textureMask) Parameters lighting bool Shall this shader apply lighting to the terrain? capabilities EngineCapabilities The rendering capabilities available to the shader textureMask int A bitmask that indicates which textures are enabled Exceptions NotSupportedException The graphics card does not support this shader. Properties BlendDistance The distance at which to show the pure near texture public float BlendDistance { get; set; } Property Value float BlendWidth The distance from BlendDistance where to show the pure far texture public float BlendWidth { get; set; } Property Value float MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version Methods Apply(Action, XMaterial, Camera, params LightSource[]) Applies the shader to the content in the render delegate. public override void Apply(Action render, XMaterial material, Camera camera, params LightSource[] lights) Parameters render Action The render delegate (is called once for every shader pass). material XMaterial The material to be used by this shader; null for device texture. camera Camera The camera for transformation information. lights LightSource[] An array of all lights this shader should consider. Mustn't be null! OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() See Also Terrain"
  },
  "api/OmegaEngine.Graphics.Shaders.WaterShader.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.WaterShader.html",
    "title": "Class WaterShader | OmegaEngine",
    "summary": "Class WaterShader Namespace OmegaEngine.Graphics.Shaders Assembly OmegaEngine.dll A water surface shader public class WaterShader : SurfaceShader, IDisposable Inheritance object EngineElement Shader SurfaceShader WaterShader Implements IDisposable Inherited Members SurfaceShader.SetupLight(PointLight, int, XMaterial) SurfaceShader.SetupLight(DirectionalLight, int, XMaterial) SurfaceShader.RunPasses(Action, XMaterial, params LightSource[]) Shader.ScriptType Shader.GlobalScript Shader.Techniques Shader.Passes Shader.ParameterInfos Shader.LoadShaderFile(string) Shader.Inject(string) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget, bool) Shader.ExecuteScript(IEnumerable<SasScriptCommand>, Action, Size, RenderTarget) Shader.Effect Shader.SetShaderParameter<T>(string, T) Shader.SetShaderParameter(string, Color) Shader.ToString() Shader.OnLostDevice() Shader.OnResetDevice() EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors WaterShader(TextureView?, TextureView?) Creates a new instance of the water shader public WaterShader(TextureView? refractionView = null, TextureView? reflectionView = null) Parameters refractionView TextureView A render target storing the refraction of the current view; null for no refraction or reflection reflectionView TextureView A render target storing the reflection of the current view; null for no reflection Properties DullBlendFactor How strongly to factor in DullColor - values between 0 and 1 public float DullBlendFactor { get; set; } Property Value float DullColor The basic color of the water (usually blueish) public Color DullColor { get; set; } Property Value Color MinShaderModel The minimum shader model version required to use this shader public static Version MinShaderModel { get; } Property Value Version ReflectionViewProjection The reflected view-projection from the Camera [Browsable(false)] public Matrix ReflectionViewProjection { get; set; } Property Value Matrix WaveHeight The height of waves on the water surface - values between 0 and 0.2 public float WaveHeight { get; set; } Property Value float WaveLength The length of waves on the water surface - values between 0 and 1 public float WaveLength { get; set; } Property Value float WindDirection The direction of the wind moving the waves public Matrix WindDirection { get; set; } Property Value Matrix WindForce The strength of the wind moving the waves - values between 0 and 1 public float WindForce { get; set; } Property Value float Methods Apply(Action, XMaterial, Camera, params LightSource[]) Applies the shader to the content in the render delegate. public override void Apply(Action render, XMaterial material, Camera camera, params LightSource[] lights) Parameters render Action The render delegate (is called once for every shader pass). material XMaterial The material to be used by this shader; null for device texture. camera Camera The camera for transformation information. lights LightSource[] An array of all lights this shader should consider; should be null. OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() See Also Water"
  },
  "api/OmegaEngine.Graphics.Shaders.html": {
    "href": "api/OmegaEngine.Graphics.Shaders.html",
    "title": "Namespace OmegaEngine.Graphics.Shaders | OmegaEngine",
    "summary": "Namespace OmegaEngine.Graphics.Shaders Surface and post-screen shader effects. Classes DynamicShader Helper class for dynamically generating Shader code GeneralShader A general-purpose surface shader with optional support for normal and specular maps LightingShader A SurfaceShader that properly reacts to LightSources PostBleachShader A post-screen shader that bleaches out the colors. PostBlurShader A post-screen shader that blurs the view using a Gaussian blur filter. PostCameraShakeShader A post-screen shader that simulates a \"shaking camera\" effect. PostColorCorrectionShader A post-screen shader for applying TV-like settings like brightness, contrast, hue, etc. PostGlowShader A post-screen shader that adds a bloom-like glow-effect around objects in the scene. PostHaloShader A post-screen shader that adds shining halos around objects in the scene. PostRadialBlurShader A post-screen shader that blurs the view radially. PostScratchedFilmShader A post-screen shader that creates \"scratched film\" effect. PostSepiaShader A post-screen shader that creates an \"old paper\" look. PostShader A shader that is applied to the complete scene after rendering. SasScriptClear SasScriptClearSetColor SasScriptClearSetDepth SasScriptClearSetStencil SasScriptCommand SasScriptDraw SasScriptGeometryList SasScriptHint SasScriptLoopByCount SasScriptLoopByType SasScriptLoopEnd SasScriptLoopGetCount SasScriptLoopGetIndex SasScriptLoopUpdate SasScriptPass SasScriptRenderColorTarget SasScriptRenderDepthStencilTarget SasScriptScriptExternal SasScriptScriptSignature SasScriptTechnique Shader Provides access to the properties of shader-programm executing on the GPU. ShaderCompileException Exception thrown when DynamicShader fails to compile FX code SurfaceShader A shader that controls the look of a PositionableRenderable's surface TerrainShader A shader that blends multiple textures together WaterShader A water surface shader Structs ParameterInfo Enums SasScriptClear.ClearType SasScriptCommand.CommandType SasScriptDraw.DrawType ScriptEffectType SemanticID"
  },
  "api/OmegaEngine.Graphics.SpecialView.html": {
    "href": "api/OmegaEngine.Graphics.SpecialView.html",
    "title": "Class SpecialView | OmegaEngine",
    "summary": "Class SpecialView Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll A common base class for views that use non-standard rendering modes. public abstract class SpecialView : SupportView, IDisposable Inheritance object EngineElement View TextureView SupportView SpecialView Implements IDisposable Derived GlowView Inherited Members SupportView.BaseView SupportView.IsToRender(PositionableRenderable) TextureView.FullAlpha TextureView.TextureRenderTarget TextureView.GetRenderTarget() TextureView.ApplyPostShaders(bool) TextureView.OnEngineSet() View.BackgroundQuadDirty View.RenderTarget View.RenderedInLastFrame View.Name View.ToString() View.Area View.AreaCenter View.Visible View.InvertCull View.ChildViews View.BackgroundColor View.Scene View.FloatingModels View.PostShaders View.Camera View.PickingRay(Point) View.Pick(Point, out DoubleVector3) View.SwingCameraTo(Camera, float) View.SetupGlow(float, float) View.OnDispose() View.PrepareRenderTarget() View.ShaderToRenderTarget(PostShader) View.PreRender View.RenderBody(PositionableRenderable) EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SpecialView(View, Camera) Creates a new special-view protected SpecialView(View baseView, Camera camera) Parameters baseView View The View to base this support-view on camera Camera The Camera to look at the Scene with Properties Fog Not applicable to SpecialView. [Browsable(false)] public override sealed bool Fog { get; set; } Property Value bool Lighting Not applicable to SpecialView. [Browsable(false)] public override sealed bool Lighting { get; set; } Property Value bool Methods RenderBackground() Renders the back of the Scene protected override void RenderBackground()"
  },
  "api/OmegaEngine.Graphics.SupportView.html": {
    "href": "api/OmegaEngine.Graphics.SupportView.html",
    "title": "Class SupportView | OmegaEngine",
    "summary": "Class SupportView Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll A common base class for all ChildViews that provide support functionality like water refraction/reflection, glow maps, etc. public abstract class SupportView : TextureView, IDisposable Inheritance object EngineElement View TextureView SupportView Implements IDisposable Derived SpecialView WaterView Inherited Members TextureView.FullAlpha TextureView.TextureRenderTarget TextureView.GetRenderTarget() TextureView.ApplyPostShaders(bool) TextureView.OnEngineSet() View.BackgroundQuadDirty View.RenderTarget View.RenderedInLastFrame View.Name View.ToString() View.Area View.AreaCenter View.Visible View.InvertCull View.Fog View.Lighting View.ChildViews View.BackgroundColor View.Scene View.FloatingModels View.PostShaders View.Camera View.PickingRay(Point) View.Pick(Point, out DoubleVector3) View.SwingCameraTo(Camera, float) View.SetupGlow(float, float) View.OnDispose() View.PrepareRenderTarget() View.ShaderToRenderTarget(PostShader) View.PreRender View.RenderBackground() View.RenderBody(PositionableRenderable) EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors SupportView(View, Camera) Creates a new support-view protected SupportView(View baseView, Camera camera) Parameters baseView View The View to base this support-view on camera Camera The Camera to look at the Scene with Fields BaseView The View this one is based upon protected readonly View BaseView Field Value View Methods IsToRender(PositionableRenderable) Checks if a PositionableRenderable is supposed to be rendered in this type of View protected override bool IsToRender(PositionableRenderable body) Parameters body PositionableRenderable The PositionableRenderable to check Returns bool true if the PositionableRenderable is supposed to be rendered"
  },
  "api/OmegaEngine.Graphics.TextureView.html": {
    "href": "api/OmegaEngine.Graphics.TextureView.html",
    "title": "Class TextureView | OmegaEngine",
    "summary": "Class TextureView Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll A special kind of View that directs its output into a texture RenderTarget instead of printing straight to the screen. public abstract class TextureView : View, IDisposable Inheritance object EngineElement View TextureView Implements IDisposable Derived LazyView SupportView Inherited Members View.BackgroundQuadDirty View.RenderTarget View.RenderedInLastFrame View.Name View.ToString() View.Area View.AreaCenter View.Visible View.InvertCull View.Fog View.Lighting View.ChildViews View.BackgroundColor View.Scene View.FloatingModels View.PostShaders View.Camera View.PickingRay(Point) View.Pick(Point, out DoubleVector3) View.SwingCameraTo(Camera, float) View.SetupGlow(float, float) View.OnDispose() View.IsToRender(PositionableRenderable) View.PrepareRenderTarget() View.ShaderToRenderTarget(PostShader) View.PreRender View.RenderBackground() View.RenderBody(PositionableRenderable) EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks These Views usually provide helper data (e.g. reflections) for the main Views. They are then referenced in ChildViews. Constructors TextureView(Scene, Camera, Size) Creates a new view for rendering to a texture protected TextureView(Scene scene, Camera camera, Size size) Parameters scene Scene The Scene to render camera Camera The Camera to look at the Scene with size Size The size of screen area this view should fill (leave empty for fullscreen) Properties FullAlpha Not applicable to TextureView [Browsable(false)] public override sealed int FullAlpha { get; set; } Property Value int TextureRenderTarget Does this View render to a texture RenderTarget? true since this is a TextureView. protected override bool TextureRenderTarget { get; } Property Value bool Methods ApplyPostShaders(bool) Applies PostShaders to the output protected override void ApplyPostShaders(bool sceneOnBackBuffer) Parameters sceneOnBackBuffer bool Is the scene currently on the backbuffer? If this is false, it is in RenderTarget. GetRenderTarget() The texture this view renders to. May change, do not store externally! public RenderTarget GetRenderTarget() Returns RenderTarget OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet()"
  },
  "api/OmegaEngine.Graphics.TexturedMesh.html": {
    "href": "api/OmegaEngine.Graphics.TexturedMesh.html",
    "title": "Class TexturedMesh | OmegaEngine",
    "summary": "Class TexturedMesh Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll Methods for creating meshes of simple geometric shapes (box, sphere, etc.) with texture coordinates. public static class TexturedMesh Inheritance object TexturedMesh Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Box(Device, float, float, float, bool) Creates a new SlimDX.Direct3D9.Mesh representing a textured box. public static Mesh Box(Device device, float width, float height, float depth, bool tbn = false) Parameters device Device The SlimDX.Direct3D9.Device to create the SlimDX.Direct3D9.Mesh in. width float The width of the box. height float The height of the box. depth float The depth of the box. tbn bool Generate TBN (tangent, binormal, normal) vectors instead of just normal vectors. Returns Mesh Remarks The box is formed like the one created by CreateBox(Device, float, float, float). Cylinder(Device, float, float, float, int, int, bool) Creates a new SlimDX.Direct3D9.Mesh representing a textured cylinder with spherical mapping. public static Mesh Cylinder(Device device, float radius1, float radius2, float length, int slices, int stacks, bool tbn = false) Parameters device Device The SlimDX.Direct3D9.Device to create the mesh in. radius1 float The radius of the cylinder at the lower end (negative Z). radius2 float The radius of the cylinder at the upper end (positive Z). length float The length of the cylinder. slices int The number of vertical slices to divide the cylinder in. stacks int The number of horizontal stacks to divide the cylinder in. tbn bool Generate TBN (tangent, binormal, normal) vectors instead of just normal vectors. Returns Mesh Remarks The cylinder is formed like the one created by CreateCylinder(Device, float, float, float, int, int). Disc(Device, float, float, float, int, bool) Creates a model of a textured round disc with a hole in the middle. public static Mesh Disc(Device device, float radiusInner, float radiusOuter, float height, int segments, bool tbn = false) Parameters device Device The SlimDX.Direct3D9.Device to create the mesh in. radiusInner float The radius of the inner circle of the ring. radiusOuter float The radius of the outer circle of the ring. height float The height of the ring. segments int The number of segments the ring shall consist of. tbn bool Generate TBN (tangent, binormal, normal) vectors instead of just normal vectors. Returns Mesh Quad(Device, float, float, bool) Creates a new SlimDX.Direct3D9.Mesh representing a textured 2D quad. public static Mesh Quad(Device device, float width, float height, bool tbn = false) Parameters device Device The SlimDX.Direct3D9.Device to create the SlimDX.Direct3D9.Mesh in. width float The width of the quad. height float The height of the quad. tbn bool Generate TBN (tangent, binormal, normal) vectors instead of just normal vectors. Returns Mesh Sphere(Device, float, int, int, bool) Creates a new SlimDX.Direct3D9.Mesh representing a textured sphere with spherical mapping. public static Mesh Sphere(Device device, float radius, int slices, int stacks, bool tbn = false) Parameters device Device The SlimDX.Direct3D9.Device to create the mesh in radius float The radius of the sphere. slices int The number of vertical slices to divide the sphere into. stacks int The number of horizontal stacks to divide the sphere into. tbn bool Generate TBN (tangent, binormal, normal) vectors instead of just normal vectors. Returns Mesh Remarks The sphere is formed like the one created by CreateSphere(Device, float, int, int)."
  },
  "api/OmegaEngine.Graphics.TexturedMeshUtils.html": {
    "href": "api/OmegaEngine.Graphics.TexturedMeshUtils.html",
    "title": "Class TexturedMeshUtils | OmegaEngine",
    "summary": "Class TexturedMeshUtils Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll Utility method for textured SlimDX.Direct3D9.Meshes. public static class TexturedMeshUtils Inheritance object TexturedMeshUtils Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GenerateNormals(Device, ref Mesh) Generate normal vectors if not present and convert into PositionNormalBinormalTangentTextured format for shaders. Tangent and binormal data is left empty. public static void GenerateNormals(Device device, ref Mesh mesh) Parameters device Device The SlimDX.Direct3D9.Device containing the mesh mesh Mesh The mesh to be manipulated Remarks Normal vectors are required for lighting. GenerateTBN(Device, ref Mesh, bool) Generate TBN (tangent, binormal and normal) vectors if not present and convert into PositionNormalBinormalTangentTextured format for shaders. public static void GenerateTBN(Device device, ref Mesh mesh, bool weldVertexes = false) Parameters device Device The SlimDX.Direct3D9.Device containing the mesh mesh Mesh The mesh to be manipulated weldVertexes bool Weld vertexes before generating tangents. Useful for organic objects, stones, trees, etc. (anything with a lot of round surfaces). If a lot of single faces are not connected on the texture (e.g. rockets, buildings, etc.) do not use. Remarks TBN vectors are required for normal mapping."
  },
  "api/OmegaEngine.Graphics.VertexDecl.PositionColored.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.PositionColored.html",
    "title": "Struct PositionColored | OmegaEngine",
    "summary": "Struct PositionColored Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A fixed-function vertex format that stores position and color. Using this format hints the engine that that no lighting is to be used. public struct PositionColored Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PositionColored(Vector3, int) Creates a new positioned, colored vertex public PositionColored(Vector3 position, int color) Parameters position Vector3 The position of the vertex in entity-space color int The color of the vertex PositionColored(float, float, float, int) Creates a new positioned, colored vertex public PositionColored(float xvalue, float yvalue, float zvalue, int color) Parameters xvalue float The X-component of the position of the vertex in entity-space yvalue float The Y-component of the position of the vertex in entity-space zvalue float The Z-component of the position of the vertex in entity-space color int The color of the vertex Fields Color The color of the vertex public int Color Field Value int Format The fixed-function format of this vertex structure. public const VertexFormat Format = Position | Diffuse Field Value VertexFormat Position The position of the vertex in entity-space public Vector3 Position Field Value Vector3 StrideSize The length of this vertex structure in bytes. public const int StrideSize = 16 Field Value int Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.PositionColoredTextured.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.PositionColoredTextured.html",
    "title": "Struct PositionColoredTextured | OmegaEngine",
    "summary": "Struct PositionColoredTextured Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll Not supported! public struct PositionColoredTextured Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Color A color by which the texture will be multiplied public int Color Field Value int Format The fixed-function format of this vertex structure. public const VertexFormat Format = Position | Diffuse | Texture1 Field Value VertexFormat Position The position of the vertex in entity-space public Vector3 Position Field Value Vector3 StrideSize The length of this vertex structure in bytes. public const int StrideSize = 24 Field Value int Tu The U-component of the texture coordinates public float Tu Field Value float Tv The V-component of the texture coordinates public float Tv Field Value float Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.PositionMultiTextured.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.PositionMultiTextured.html",
    "title": "Struct PositionMultiTextured | OmegaEngine",
    "summary": "Struct PositionMultiTextured Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A fixed-function vertex format that stores position, shadow information, texture blending weights and texture coordinates. Using this format hints the engine that normals and tangents still need to be calculated. public struct PositionMultiTextured Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PositionMultiTextured(Vector3, float, float, Vector4, float[], Color4) Creates a new multi-textured vertex public PositionMultiTextured(Vector3 position, float tu, float tv, Vector4 occlusionIntervals, float[] texWeights, Color4 color) Parameters position Vector3 The position of the vertex in entity-space tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates occlusionIntervals Vector4 The angles at which the global light source occlusion begins and ends texWeights float[] A 16-element array of texture blending weight color Color4 A color by which the texture will be multiplied Fields Color A color by which the texture will be multiplied public Color4 Color Field Value Color4 OcclusionIntervals The angles at which the global light source occlusion begins and ends public Vector4 OcclusionIntervals Field Value Vector4 Position The position of the vertex in entity-space public Vector3 Position Field Value Vector3 StrideSize The length of this vertex structure in bytes. public const int StrideSize = 108 Field Value int TexWeights1 Texture blending weights public Vector4 TexWeights1 Field Value Vector4 TexWeights2 Texture blending weights public Vector4 TexWeights2 Field Value Vector4 TexWeights3 Texture blending weights public Vector4 TexWeights3 Field Value Vector4 TexWeights4 Texture blending weights public Vector4 TexWeights4 Field Value Vector4 Tu The U-component of the texture coordinates public float Tu Field Value float Tv The V-component of the texture coordinates public float Tv Field Value float Methods GetVertexElements() Returns an array describing the usage of the vertex fields public static VertexElement[] GetVertexElements() Returns VertexElement[] ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.PositionNormalBinormalTangentTextured.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.PositionNormalBinormalTangentTextured.html",
    "title": "Struct PositionNormalBinormalTangentTextured | OmegaEngine",
    "summary": "Struct PositionNormalBinormalTangentTextured Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A fixed-function vertex format that stores position, normals, binormals, tangents and texture coordinates. Using this format hints the engine that all necessary data is already present. public struct PositionNormalBinormalTangentTextured Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PositionNormalBinormalTangentTextured(Vector3, Vector3, Vector3, Vector3, float, float) Creates a new positioned, textured vertex with normal, binormal and tangent information public PositionNormalBinormalTangentTextured(Vector3 position, Vector3 normal, Vector3 binormal, Vector3 tangent, float tu, float tv) Parameters position Vector3 The position of the vertex in entity-space normal Vector3 The normal of the vertex in entity-space binormal Vector3 The binormal of the vertex in entity-space tangent Vector3 The tangent of the vertex in entity-space tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates Fields Binormal The binormal of the vertex in entity-space public Vector3 Binormal Field Value Vector3 Normal The normal of the vertex in entity-space public Vector3 Normal Field Value Vector3 Position The position of the vertex in entity-space public Vector3 Position Field Value Vector3 StrideSize The length of this vertex structure in bytes. public const int StrideSize = 56 Field Value int Tangent The tangent of the vertex in entity-space public Vector3 Tangent Field Value Vector3 Tu The U-component of the texture coordinates public float Tu Field Value float Tv The V-component of the texture coordinates public float Tv Field Value float Methods GetVertexElements() Returns an array describing the usage of the vertex fields public static VertexElement[] GetVertexElements() Returns VertexElement[] ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.PositionNormalColored.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.PositionNormalColored.html",
    "title": "Struct PositionNormalColored | OmegaEngine",
    "summary": "Struct PositionNormalColored Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A fixed-function vertex format that stores position, normals and color. Using this format hints the engine that that lighting is to be used. public struct PositionNormalColored Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PositionNormalColored(Vector3, Vector3, int) Creates a new positioned, colored vertex with normal information public PositionNormalColored(Vector3 position, Vector3 normal, int color) Parameters position Vector3 The position of the vertex in entity-space normal Vector3 The normal of the vertex in entity-space color int The color of the vertex Fields Color The color of the vertex public int Color Field Value int Format The fixed-function format of this vertex structure. public const VertexFormat Format = PositionNormal | Diffuse Field Value VertexFormat Normal The normal of the vertex in entity-space public Vector3 Normal Field Value Vector3 Position The position of the vertex in entity-space public Vector3 Position Field Value Vector3 StrideSize The length of this vertex structure in bytes. public const int StrideSize = 28 Field Value int Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.PositionNormalMultiTextured.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.PositionNormalMultiTextured.html",
    "title": "Struct PositionNormalMultiTextured | OmegaEngine",
    "summary": "Struct PositionNormalMultiTextured Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A custom vertex format that stores position, normals, shadow information, texture blending weights and texture coordinates. Using this format hints the engine that tangents (and maybe normals) still need to be calculated. public struct PositionNormalMultiTextured Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PositionNormalMultiTextured(Vector3, Vector3, float, float, Vector4, float[], Color4) Creates a new multi-textured vertex public PositionNormalMultiTextured(Vector3 position, Vector3 normal, float tu, float tv, Vector4 occlusionIntervals, float[] texWeights, Color4 color) Parameters position Vector3 The position of the vertex in entity-space normal Vector3 The normal vector tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates occlusionIntervals Vector4 The angles at which the global light source occlusion begins and ends texWeights float[] A 16-element array of texture blending weight color Color4 A color by which the texture will be multiplied Fields Color A color by which the texture will be multiplied public Color4 Color Field Value Color4 Normal The normal of the vertex in entity-space public Vector3 Normal Field Value Vector3 OcclusionIntervals The angles at which the global light source occlusion begins and ends public Vector4 OcclusionIntervals Field Value Vector4 Position The position of the vertex in entity-space public Vector3 Position Field Value Vector3 StrideSize The length of this vertex structure in bytes. public const int StrideSize = 120 Field Value int TexWeights1 Texture blending weights public Vector4 TexWeights1 Field Value Vector4 TexWeights2 Texture blending weights public Vector4 TexWeights2 Field Value Vector4 TexWeights3 Texture blending weights public Vector4 TexWeights3 Field Value Vector4 TexWeights4 Texture blending weights public Vector4 TexWeights4 Field Value Vector4 Tu The U-component of the texture coordinates public float Tu Field Value float Tv The V-component of the texture coordinates public float Tv Field Value float Methods GetVertexElements() Returns an array describing the usage of the vertex fields public static VertexElement[] GetVertexElements() Returns VertexElement[] ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.PositionNormalTextured.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.PositionNormalTextured.html",
    "title": "Struct PositionNormalTextured | OmegaEngine",
    "summary": "Struct PositionNormalTextured Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A fixed-function vertex format that stores position, normals and texture coordinates. Using this format hints the engine that tangents (and maybe normals) still need to be calculated. public struct PositionNormalTextured Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PositionNormalTextured(Vector3, Vector3, float, float) Creates a new position, textured vertex with normal information public PositionNormalTextured(Vector3 position, Vector3 normal, float tu, float tv) Parameters position Vector3 The position of the vertex in entity-space normal Vector3 The normal of the vertex in entity-space tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates Fields Format The fixed-function format of this vertex structure. public const VertexFormat Format = PositionNormal | Texture1 Field Value VertexFormat Normal The normal of the vertex in entity-space public Vector3 Normal Field Value Vector3 Position The position of the vertex in entity-space public Vector3 Position Field Value Vector3 StrideSize The length of this vertex structure in bytes. public const int StrideSize = 32 Field Value int Tu The U-component of the texture coordinates public float Tu Field Value float Tv The V-component of the texture coordinates public float Tv Field Value float Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.PositionTextured.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.PositionTextured.html",
    "title": "Struct PositionTextured | OmegaEngine",
    "summary": "Struct PositionTextured Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A fixed-function vertex format that stores position and texture coordinates. Using this format hints the engine that normals and tangents still need to be calculated. public struct PositionTextured Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PositionTextured(Vector3, float, float) Creates a new positioned, textured vertex public PositionTextured(Vector3 position, float tu, float tv) Parameters position Vector3 The position of the vertex in entity-space tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates PositionTextured(float, float, float, float, float) Creates a new positioned, textured vertex public PositionTextured(float xvalue, float yvalue, float zvalue, float tu, float tv) Parameters xvalue float The X-component of the position of the vertex in entity-space yvalue float The Y-component of the position of the vertex in entity-space zvalue float The Z-component of the position of the vertex in entity-space tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates Fields Format The fixed-function format of this vertex structure. public const VertexFormat Format = Position | Texture1 Field Value VertexFormat Position The position of the vertex in entity-space public Vector3 Position Field Value Vector3 StrideSize The length of this vertex structure in bytes. public const int StrideSize = 20 Field Value int Tu The U-component of the texture coordinates public float Tu Field Value float Tv The V-component of the texture coordinates public float Tv Field Value float Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.TransformedColored.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.TransformedColored.html",
    "title": "Struct TransformedColored | OmegaEngine",
    "summary": "Struct TransformedColored Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A fixed-function vertex format that stores a transformed position and color. public struct TransformedColored Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TransformedColored(Vector3, float, int) Creates a new transformed, colored vertex public TransformedColored(Vector3 position, float rhw, int color) Parameters position Vector3 The position of the vertex in screen-space rhw float The reciprocal of homogeneous W (the depth-value) color int The color of the vertex TransformedColored(float, float, float, float, int) Creates a new transformed, colored vertex public TransformedColored(float xvalue, float yvalue, float zvalue, float rhw, int color) Parameters xvalue float The X-component of the position of the vertex in screen-space yvalue float The Y-component of the position of the vertex in screen-space zvalue float The Z-component of the position of the vertex in screen-space rhw float The reciprocal of homogeneous W (the depth-value) color int The color of the vertex Fields Color The color of the vertex public int Color Field Value int Format The fixed-function format of this vertex structure. public const VertexFormat Format = PositionRhw | Diffuse Field Value VertexFormat Position The position of the vertex in screen-space public Vector3 Position Field Value Vector3 Rhw The reciprocal of homogeneous W (the depth-value) public float Rhw Field Value float StrideSize The length of this vertex structure in bytes. public const int StrideSize = 20 Field Value int Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.TransformedColoredTextured.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.TransformedColoredTextured.html",
    "title": "Struct TransformedColoredTextured | OmegaEngine",
    "summary": "Struct TransformedColoredTextured Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A fixed-function vertex format that stores a transformed position, color and texture coordinates. public struct TransformedColoredTextured Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TransformedColoredTextured(Vector3, float, int, float, float) Creates a new transformed, colored and textured vertex public TransformedColoredTextured(Vector3 position, float rhw, int color, float tu, float tv) Parameters position Vector3 The position of the vertex in screen-space rhw float The reciprocal of homogeneous W (the depth-value) color int A color by which the texture will be multiplied tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates TransformedColoredTextured(float, float, float, float, int, float, float) Creates a new transformed, colored and textured vertex public TransformedColoredTextured(float xvalue, float yvalue, float zvalue, float rhw, int color, float tu, float tv) Parameters xvalue float The X-component of the position of the vertex in screen-space yvalue float The Y-component of the position of the vertex in screen-space zvalue float The Z-component of the position of the vertex in screen-space rhw float The reciprocal of homogeneous W (the depth-value) color int A color by which the texture will be multiplied tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates Fields Color A color by which the texture will be multiplied public int Color Field Value int Format The fixed-function format of this vertex structure. public const VertexFormat Format = PositionRhw | Diffuse | Texture1 Field Value VertexFormat Position The position of the vertex in screen-space public Vector3 Position Field Value Vector3 Rhw The reciprocal of homogeneous W (the depth-value) public float Rhw Field Value float StrideSize The length of this vertex structure in bytes. public const int StrideSize = 28 Field Value int Tu The U-component of the texture coordinates public float Tu Field Value float Tv The V-component of the texture coordinates public float Tv Field Value float Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.TransformedTextured.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.TransformedTextured.html",
    "title": "Struct TransformedTextured | OmegaEngine",
    "summary": "Struct TransformedTextured Namespace OmegaEngine.Graphics.VertexDecl Assembly OmegaEngine.dll A fixed-function vertex format that stores a transformed position and texture coordinates. public struct TransformedTextured Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TransformedTextured(Vector3, float, float, float) Creates a new transformed, textured vertex public TransformedTextured(Vector3 position, float rhw, float tu, float tv) Parameters position Vector3 The position of the vertex in screen-space rhw float The reciprocal of homogeneous W (the depth-value) tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates TransformedTextured(float, float, float, float, float, float) Creates a new transformed, textured vertex public TransformedTextured(float xvalue, float yvalue, float zvalue, float rhw, float tu, float tv) Parameters xvalue float The X-component of the position of the vertex in screen-space yvalue float The Y-component of the position of the vertex in screen-space zvalue float The Z-component of the position of the vertex in screen-space rhw float The reciprocal of homogeneous W (the depth-value) tu float The U-component of the texture coordinates tv float The V-component of the texture coordinates Fields Format The fixed-function format of this vertex structure. public const VertexFormat Format = PositionRhw | Texture1 Field Value VertexFormat Position The position of the vertex in screen-space public Vector3 Position Field Value Vector3 Rhw The reciprocal of homogeneous W (the depth-value) public float Rhw Field Value float StrideSize The length of this vertex structure in bytes. public const int StrideSize = 24 Field Value int Tu The U-component of the texture coordinates public float Tu Field Value float Tv The V-component of the texture coordinates public float Tv Field Value float Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/OmegaEngine.Graphics.VertexDecl.html": {
    "href": "api/OmegaEngine.Graphics.VertexDecl.html",
    "title": "Namespace OmegaEngine.Graphics.VertexDecl | OmegaEngine",
    "summary": "Namespace OmegaEngine.Graphics.VertexDecl Structs mapped to DirectX custom vertex formats (for storing additional information per vertex). Structs PositionColored A fixed-function vertex format that stores position and color. Using this format hints the engine that that no lighting is to be used. PositionColoredTextured Not supported! PositionMultiTextured A fixed-function vertex format that stores position, shadow information, texture blending weights and texture coordinates. Using this format hints the engine that normals and tangents still need to be calculated. PositionNormalBinormalTangentTextured A fixed-function vertex format that stores position, normals, binormals, tangents and texture coordinates. Using this format hints the engine that all necessary data is already present. PositionNormalColored A fixed-function vertex format that stores position, normals and color. Using this format hints the engine that that lighting is to be used. PositionNormalMultiTextured A custom vertex format that stores position, normals, shadow information, texture blending weights and texture coordinates. Using this format hints the engine that tangents (and maybe normals) still need to be calculated. PositionNormalTextured A fixed-function vertex format that stores position, normals and texture coordinates. Using this format hints the engine that tangents (and maybe normals) still need to be calculated. PositionTextured A fixed-function vertex format that stores position and texture coordinates. Using this format hints the engine that normals and tangents still need to be calculated. TransformedColored A fixed-function vertex format that stores a transformed position and color. TransformedColoredTextured A fixed-function vertex format that stores a transformed position, color and texture coordinates. TransformedTextured A fixed-function vertex format that stores a transformed position and texture coordinates."
  },
  "api/OmegaEngine.Graphics.View.html": {
    "href": "api/OmegaEngine.Graphics.View.html",
    "title": "Class View | OmegaEngine",
    "summary": "Class View Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll Controls the rendering of a Scene using a Camera. public class View : EngineElement, IDisposable Inheritance object EngineElement View Implements IDisposable Derived TextureView Inherited Members EngineElement.RegisterChild(EngineElement, bool) EngineElement.UnregisterChild(EngineElement) EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Multiple Views can share the same Scene, but they should all have separate Cameras. Constructors View(Scene, Camera, Rectangle) Creates a new view for rendering public View(Scene scene, Camera camera, Rectangle area = default) Parameters scene Scene The scene containing the PositionableRenderables to be rendered. Will NOT be disposed when Dispose() is called. camera Camera The Camera to look at the Scene with area Rectangle The screen area this view should fill (leave empty for fullscreen) View(Color) Creates a new view for rendering a plain color fullscreen public View(Color color) Parameters color Color The plain color to render Fields BackgroundQuadDirty Does the background qaud need to be recreated? protected bool BackgroundQuadDirty Field Value bool RenderTarget An alternative surface to render onto instead of the back-buffer protected RenderTarget? RenderTarget Field Value RenderTarget Properties Area The screen area this view should fill (all zero for fullscreen) public Rectangle Area { get; set; } Property Value Rectangle AreaCenter The center point of Area [Browsable(false)] public Point AreaCenter { get; } Property Value Point BackgroundColor The background color and fog color of this scene - Empty for no background, may use alpha-channel if FullAlpha is not set public Color BackgroundColor { get; set; } Property Value Color Camera The camera describing how to look at the scene [Browsable(false)] public Camera Camera { get; set; } Property Value Camera ChildViews A list of TextureViews that are to be OmegaEngine.Graphics.View.Render()ed before this View. Usually only OmegaEngine.Graphics.View.Render()ed if a PositionableRenderable in Positionables has it listed in RequiredViews. [Browsable(false)] public ICollection<TextureView> ChildViews { get; } Property Value ICollection<TextureView> Remarks Will be disposed when Dispose() is called. FloatingModels A list of FloatingModels to be overlayed on top of the Scene. Use this for UI-like elements, e.g. axis-arrows. [Browsable(false)] public ICollection<FloatingModel> FloatingModels { get; } Property Value ICollection<FloatingModel> Remarks Will be disposed when Dispose() is called. Fog Automatically apply a fog using BackgroundColor and the Cameras clip planes public virtual bool Fog { get; set; } Property Value bool FullAlpha The level of transparency from 0 (solid) to 255 (invisible) for the complete scene public virtual int FullAlpha { get; set; } Property Value int InvertCull Cull clockwise instead of counter-clockwise? public bool InvertCull { get; set; } Property Value bool Lighting Is lighting used in OmegaEngine.Graphics.View.RenderScene()? public virtual bool Lighting { get; set; } Property Value bool Name Text value to make it easier to identify a particular view public string? Name { get; set; } Property Value string PostShaders A list of post-processing shaders to be applied after rendering the scene [Browsable(false)] public ICollection<PostShader> PostShaders { get; } Property Value ICollection<PostShader> Remarks Will be disposed when Dispose() is called. RenderedInLastFrame Was this view rendered in this frame? public bool RenderedInLastFrame { get; } Property Value bool Remarks Used to debug culling methods Scene The scene containing the PositionableRenderables to be rendered. [Browsable(false)] public Scene Scene { get; } Property Value Scene Remarks Will NOT be disposed when Dispose() is called. TextureRenderTarget Does this View render to a texture RenderTarget? Only true for TextureViews. protected virtual bool TextureRenderTarget { get; } Property Value bool Visible Shall the scene be rendered? public bool Visible { get; set; } Property Value bool Methods ApplyPostShaders(bool) Applies PostShaders to the output protected virtual void ApplyPostShaders(bool sceneOnBackBuffer) Parameters sceneOnBackBuffer bool Is the scene currently on the backbuffer? If this is false, it is in RenderTarget. IsToRender(PositionableRenderable) Checks if a PositionableRenderable is supposed to be rendered in this type of View protected virtual bool IsToRender(PositionableRenderable body) Parameters body PositionableRenderable The PositionableRenderable to check Returns bool true if the PositionableRenderable is supposed to be rendered OnDispose() Hook that is called when the object needs to dispose its internal resources. protected override void OnDispose() OnEngineSet() Hook that is called when Engine is set for the first time. protected override void OnEngineSet() Pick(Point, out DoubleVector3) Pick an PositionableRenderable in 3D-space using the mouse public PositionableRenderable? Pick(Point location, out DoubleVector3 position) Parameters location Point The screen space location to start the ray from (usually mouse coordinates) position DoubleVector3 Returns the position of the vertex closest to the intersection in entity space Returns PositionableRenderable The picked PositionableRenderable or null. PickingRay(Point) Generates a 3D picking ray. public Ray PickingRay(Point location) Parameters location Point The screen space location to start the ray from (usually mouse coordinates) Returns Ray A ray in world space starting at the Camera position moving towards the specified location. PrepareRenderTarget() Prepares a RenderTarget texture if there is none yet - call as often as you want protected void PrepareRenderTarget() RenderBackground() Renders the back of the Scene protected virtual void RenderBackground() RenderBody(PositionableRenderable) Renders a PositionableRenderable from the Scene protected virtual void RenderBody(PositionableRenderable body) Parameters body PositionableRenderable The PositionableRenderable to render SetupGlow(float, float) Creates a glow-map of this view and adds it to ChildViews public void SetupGlow(float blurStrength = 3, float glowStrength = 1.5) Parameters blurStrength float How strongly to blur the glow map - values between 0 and 10 glowStrength float A factor by which the blurred glow color is multiplied - values between 0 and 100 Remarks Calling this method multiple times will have no effect ShaderToRenderTarget(PostShader) Updates the RenderTarget using a PostShader protected void ShaderToRenderTarget(PostShader shader) Parameters shader PostShader The PostShader to apply SwingCameraTo(Camera, float) Switches from the current camera view to a new view using a cinematic effect public void SwingCameraTo(Camera target, float duration = 1) Parameters target Camera The new camera duration float The complete transition time in seconds ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Events PreRender Occurs immediately before the Scene begins rendering. ChildViews will have been rendered already. public event Action<Camera>? PreRender Event Type Action<Camera>"
  },
  "api/OmegaEngine.Graphics.WaterView.html": {
    "href": "api/OmegaEngine.Graphics.WaterView.html",
    "title": "Class WaterView | OmegaEngine",
    "summary": "Class WaterView Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll A SupportView for rendering Water refractions or reflections public sealed class WaterView : SupportView, IDisposable Inheritance object EngineElement View TextureView SupportView WaterView Implements IDisposable Inherited Members TextureView.FullAlpha TextureView.GetRenderTarget() View.RenderedInLastFrame View.Name View.ToString() View.Area View.AreaCenter View.Visible View.InvertCull View.Fog View.Lighting View.ChildViews View.BackgroundColor View.Scene View.FloatingModels View.PostShaders View.Camera View.PickingRay(Point) View.Pick(Point, out DoubleVector3) View.SwingCameraTo(Camera, float) View.SetupGlow(float, float) View.PreRender EngineElement.Engine EngineElement.IsEngineSet EngineElement.IsDisposed EngineElement.Dispose() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Reflection True if this is a OmegaEngine.Graphics.Renderables.WaterViewSource.ReflectedView, false if this is a OmegaEngine.Graphics.Renderables.WaterViewSource.RefractedView public bool Reflection { get; } Property Value bool Methods CreateReflection(View, DoublePlane, float) Creates a reflection of a View and adds it to ChildViews public static WaterView CreateReflection(View baseView, DoublePlane reflectPlane, float clipTolerance) Parameters baseView View The View the reflection is based on reflectPlane DoublePlane A plane alongside which the view shall be reflected clipTolerance float How much to shift the clip plane away from the reflect plane Returns WaterView The new view CreateRefraction(View, DoublePlane, float) Creates a refraction of a View and adds it to ChildViews public static WaterView CreateRefraction(View baseView, DoublePlane refractPlane, float clipTolerance) Parameters baseView View The View the refraction is based on refractPlane DoublePlane A plane alongside which the view shall be refracted clipTolerance float How much to shift the clip plane away from the refract plane Returns WaterView The WaterView representing the refraction IsToRender(PositionableRenderable) Checks if a PositionableRenderable is supposed to be rendered in this type of View protected override bool IsToRender(PositionableRenderable body) Parameters body PositionableRenderable The PositionableRenderable to check Returns bool true if the PositionableRenderable is supposed to be rendered"
  },
  "api/OmegaEngine.Graphics.XMaterial.html": {
    "href": "api/OmegaEngine.Graphics.XMaterial.html",
    "title": "Struct XMaterial | OmegaEngine",
    "summary": "Struct XMaterial Namespace OmegaEngine.Graphics Assembly OmegaEngine.dll A combination of textures and lighting parameters. public struct XMaterial Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks XMaterial instances are auto-generated when XMeshes are loaded. Constructors XMaterial(ITextureProvider?) public XMaterial(ITextureProvider? diffuse) Parameters diffuse ITextureProvider XMaterial(Color) public XMaterial(Color color) Parameters color Color Fields DiffuseMaps The diffuse textures maps public readonly ITextureProvider?[] DiffuseMaps Field Value ITextureProvider[] Properties Ambient The color of the material when lit by ambient/background light (always active) public Color Ambient { readonly get; set; } Property Value Color D3DMaterial A DirectX material with the color information from this XMaterial public Material D3DMaterial { get; } Property Value Material DefaultMaterial A plain white untextured material public static XMaterial DefaultMaterial { get; } Property Value XMaterial Diffuse The color of the material when hit by diffuse light (normal lighting) public Color Diffuse { readonly get; set; } Property Value Color Emissive The color of the light this material emits by itself - doubles as glow color public Color Emissive { readonly get; set; } Property Value Color EmissiveMap The emissive (self-shining, without light source) - doubles as the glow map public ITextureProvider? EmissiveMap { readonly get; set; } Property Value ITextureProvider HeightMap The height map (an optional addition to the normal map) public ITextureProvider? HeightMap { readonly get; set; } Property Value ITextureProvider IsTextured Indicates whether this material uses textures public bool IsTextured { get; } Property Value bool NeedsTBN Indicates whether this material requires TBN (tangent, bitangent, normal) vectors public bool NeedsTBN { get; } Property Value bool NormalMap The normal map (i.e. bump map) public ITextureProvider? NormalMap { readonly get; set; } Property Value ITextureProvider Specular The color of specular (shiny) highlights on the material surface public Color Specular { readonly get; set; } Property Value Color SpecularMap The specular map (which spots are \"shiny\") public ITextureProvider? SpecularMap { readonly get; set; } Property Value ITextureProvider SpecularPower The sharpness of specular highlights (lower value = sharper) public float SpecularPower { readonly get; set; } Property Value float Methods HoldReference() Calls HoldReference() for all contained XTextures. public readonly void HoldReference() ReleaseReference() Calls ReleaseReference() for all contained XTextures. public void ReleaseReference() Operators implicit operator XMaterial(XTexture) public static implicit operator XMaterial(XTexture texture) Parameters texture XTexture Returns XMaterial"
  },
  "api/OmegaEngine.Graphics.html": {
    "href": "api/OmegaEngine.Graphics.html",
    "title": "Namespace OmegaEngine.Graphics | OmegaEngine",
    "summary": "Namespace OmegaEngine.Graphics Graphics subsystem of the engine. Namespaces OmegaEngine.Graphics.Cameras Different camera types for navigating the world. OmegaEngine.Graphics.Renderables Objects rendered in 3D space. OmegaEngine.Graphics.Shaders Surface and post-screen shader effects. OmegaEngine.Graphics.VertexDecl Structs mapped to DirectX custom vertex formats (for storing additional information per vertex). Classes DirectionalLight A light source that has no position and shines in one direction. GlowView A SpecialView for rendering glow maps LazyView An TextureView that only handles OmegaEngine.Graphics.LazyView.Render() when SetDirty() has been called. LightSource A light source that illuminates PositionableRenderables in a Scene. PointLight A light source that has a fixed position and shines uniformly in all directions. RenderTarget Provides an in-memory area to render to instead of directly painting on the screen. Scene Represents a scene that can be viewed by a Camera. SpecialView A common base class for views that use non-standard rendering modes. SupportView A common base class for all ChildViews that provide support functionality like water refraction/reflection, glow maps, etc. TextureView A special kind of View that directs its output into a texture RenderTarget instead of printing straight to the screen. TexturedMesh Methods for creating meshes of simple geometric shapes (box, sphere, etc.) with texture coordinates. TexturedMeshUtils Utility method for textured SlimDX.Direct3D9.Meshes. View Controls the rendering of a Scene using a Camera. WaterView A SupportView for rendering Water refractions or reflections Structs XMaterial A combination of textures and lighting parameters. Interfaces ITextureProvider An object that can provide a Texture for rendering."
  },
  "api/OmegaEngine.Hardware.html": {
    "href": "api/OmegaEngine.Hardware.html",
    "title": "Struct Hardware | OmegaEngine",
    "summary": "Struct Hardware Namespace OmegaEngine Assembly OmegaEngine.dll Information about the hardware the Engine is running on. public struct Hardware Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Cpu Details about the CPU. public HardwareCpu Cpu Field Value HardwareCpu Gpu Details about the graphics card. public HardwareGpu Gpu Field Value HardwareGpu Ram Details about the RAM. public HardwareRam Ram Field Value HardwareRam Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. See Also Hardware"
  },
  "api/OmegaEngine.HardwareCpu.html": {
    "href": "api/OmegaEngine.HardwareCpu.html",
    "title": "Struct HardwareCpu | OmegaEngine",
    "summary": "Struct HardwareCpu Namespace OmegaEngine Assembly OmegaEngine.dll public struct HardwareCpu Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Cores The number of physical cores in the CPU public int Cores Field Value int Logical The number of logical processors in the CPU public int Logical Field Value int Manufacturer The manufacturer of the CPU public string Manufacturer Field Value string Name The name of the CPU (including the manufacturer) public string Name Field Value string Speed The speed of the CPU in MHz public int Speed Field Value int Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. See Also Cpu"
  },
  "api/OmegaEngine.HardwareGpu.html": {
    "href": "api/OmegaEngine.HardwareGpu.html",
    "title": "Struct HardwareGpu | OmegaEngine",
    "summary": "Struct HardwareGpu Namespace OmegaEngine Assembly OmegaEngine.dll public struct HardwareGpu Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Manufacturer The ID number of the manufacturer of the graphics card. public int Manufacturer Field Value int Name The name of the graphics card (including the manufacturer). public string Name Field Value string Ram The size of the graphics RAM in MB. public int Ram Field Value int Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. See Also Gpu"
  },
  "api/OmegaEngine.HardwareRam.html": {
    "href": "api/OmegaEngine.HardwareRam.html",
    "title": "Struct HardwareRam | OmegaEngine",
    "summary": "Struct HardwareRam Namespace OmegaEngine Assembly OmegaEngine.dll public struct HardwareRam Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Size The size of the system RAM in MB. public int Size Field Value int Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. See Also Ram"
  },
  "api/OmegaEngine.IAudio.html": {
    "href": "api/OmegaEngine.IAudio.html",
    "title": "Interface IAudio | OmegaEngine",
    "summary": "Interface IAudio Namespace OmegaEngine Assembly OmegaEngine.dll Represents an asset that can playback audio. public interface IAudio Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Looping Is this sound set to loop? bool Looping { get; } Property Value bool Playing Is this sound currently being played? bool Playing { get; } Property Value bool Volume The playback volume for the asset. int Volume { get; set; } Property Value int Methods StartPlayback(bool) Starts the asset playback. void StartPlayback(bool looping) Parameters looping bool StopPlayback() Stops the asset playback. void StopPlayback()"
  },
  "api/OmegaEngine.IPositionable.html": {
    "href": "api/OmegaEngine.IPositionable.html",
    "title": "Interface IPositionable | OmegaEngine",
    "summary": "Interface IPositionable Namespace OmegaEngine Assembly OmegaEngine.dll An interface to objects that have a position. public interface IPositionable Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Position The object's position DoubleVector3 Position { get; set; } Property Value DoubleVector3"
  },
  "api/OmegaEngine.Input.IInputReceiver.html": {
    "href": "api/OmegaEngine.Input.IInputReceiver.html",
    "title": "Interface IInputReceiver | OmegaEngine",
    "summary": "Interface IInputReceiver Namespace OmegaEngine.Input Assembly OmegaEngine.dll An object that receives input procesed into navigational commands from an InputProvider. public interface IInputReceiver Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Methods AreaSelection(Rectangle, bool, bool) Called when the user is selecting an area on the screen. void AreaSelection(Rectangle area, bool accumulate, bool done) Parameters area Rectangle The selected area in pixels. The bottom-right corner is always the last point selected by the user, therefore the box may be inverted. accumulate bool true when the user wants the new selection to be added to the old one. done bool True when the user has finished his selection (e.g. released the mouse). Click(MouseEventArgs, bool) Called when the user clicked something (not dragged!). void Click(MouseEventArgs e, bool accumulate) Parameters e MouseEventArgs The original event arguments from the click. accumulate bool true when the user wants the action to have an accumulative effect (usually for selections). DoubleClick(MouseEventArgs) Called when the user double-clicked something. void DoubleClick(MouseEventArgs e) Parameters e MouseEventArgs The original event arguments from the click. Hover(Point) Called when the user is hovering above a point on the screen. void Hover(Point target) Parameters target Point The point the user is hovering over in pixels. PerspectiveChange(Point, int, int) Called when the user changes the view perspective. void PerspectiveChange(Point pan, int rotation, int zoom) Parameters pan Point Horizontal XY-panning in pixels. rotation int Horizontal rotation in pixels. zoom int Vertical zooming in pixels. Greater than 0 to zoom in; less than 0 to zoom out."
  },
  "api/OmegaEngine.Input.InputProvider.html": {
    "href": "api/OmegaEngine.Input.InputProvider.html",
    "title": "Class InputProvider | OmegaEngine",
    "summary": "Class InputProvider Namespace OmegaEngine.Input Assembly OmegaEngine.dll Processes events from an input device into higher-level navigational commands. public abstract class InputProvider : IDisposable Inheritance object InputProvider Implements IDisposable Derived KeyboardInputProvider MouseInputProvider TouchInputProvider Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties HasReceivers Indicates whether this handler currently has IInputReceiver attached to it. public bool HasReceivers { get; } Property Value bool Methods AddReceiver(IInputReceiver) Adds an object that wishes to be notified about navigational commands that are triggered by input. public void AddReceiver(IInputReceiver receiver) Parameters receiver IInputReceiver The object to receive the commands. Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) To be called by Dispose() and the object destructor. protected abstract void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. ~InputProvider() protected ~InputProvider() OnAreaSelection(Rectangle, bool, bool) Raises all registered AreaSelection(Rectangle, bool, bool)s. protected virtual void OnAreaSelection(Rectangle area, bool accumulate, bool done = false) Parameters area Rectangle The selected area in pixels. accumulate bool true when the user wants the new selection to be added to the old one. done bool True when the user has finished his selection (e.g. released the mouse). OnClick(MouseEventArgs, bool) Raises all registered Click(MouseEventArgs, bool)s. protected virtual void OnClick(MouseEventArgs e, bool accumulate) Parameters e MouseEventArgs The original event arguments from the click. accumulate bool true when the user wants the action to have an accumulative effect (usually for selections). OnDoubleClick(MouseEventArgs) Raises all registered DoubleClick(MouseEventArgs)s. protected virtual void OnDoubleClick(MouseEventArgs e) Parameters e MouseEventArgs The original event arguments from the click. OnHover(Point) Raises all registered Hover(Point)s. protected virtual void OnHover(Point target) Parameters target Point The point the user is hovering over in pixels. OnPerspectiveChange(Point, int, int) Raises all registered PerspectiveChange(Point, int, int)s. protected virtual void OnPerspectiveChange(Point pan, int rotation, int zoom) Parameters pan Point Horizontal XY-panning in pixels. rotation int Horizontal rotation in pixels. zoom int Vertical zooming in pixels. Greater than 0 to zoom in; less than 0 to zoom out. RemoveReceiver(IInputReceiver) Removes an object that no longer wishes to be notified about navigational commands. public void RemoveReceiver(IInputReceiver receiver) Parameters receiver IInputReceiver The object to no longer receive the commands."
  },
  "api/OmegaEngine.Input.KeyboardInputProvider.html": {
    "href": "api/OmegaEngine.Input.KeyboardInputProvider.html",
    "title": "Class KeyboardInputProvider | OmegaEngine",
    "summary": "Class KeyboardInputProvider Namespace OmegaEngine.Input Assembly OmegaEngine.dll Processes keyboard events into higher-level navigational commands. public class KeyboardInputProvider : InputProvider, IDisposable Inheritance object InputProvider KeyboardInputProvider Implements IDisposable Inherited Members InputProvider.HasReceivers InputProvider.AddReceiver(IInputReceiver) InputProvider.RemoveReceiver(IInputReceiver) InputProvider.OnPerspectiveChange(Point, int, int) InputProvider.OnAreaSelection(Rectangle, bool, bool) InputProvider.OnHover(Point) InputProvider.OnClick(MouseEventArgs, bool) InputProvider.OnDoubleClick(MouseEventArgs) InputProvider.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Pressing the left and right arrow keys allows rotating. Pressing the up and down arrow keys allows zooming. Constructors KeyboardInputProvider(Control) Starts monitoring and processing keyboard events received by a specific control. public KeyboardInputProvider(Control control) Parameters control Control The control receiving the keyboard events. Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector."
  },
  "api/OmegaEngine.Input.MouseInputProvider.html": {
    "href": "api/OmegaEngine.Input.MouseInputProvider.html",
    "title": "Class MouseInputProvider | OmegaEngine",
    "summary": "Class MouseInputProvider Namespace OmegaEngine.Input Assembly OmegaEngine.dll Processes mouse events into higher-level navigational commands. public class MouseInputProvider : InputProvider, IDisposable Inheritance object InputProvider MouseInputProvider Implements IDisposable Inherited Members InputProvider.HasReceivers InputProvider.AddReceiver(IInputReceiver) InputProvider.RemoveReceiver(IInputReceiver) InputProvider.OnPerspectiveChange(Point, int, int) InputProvider.OnAreaSelection(Rectangle, bool, bool) InputProvider.OnHover(Point) InputProvider.OnClick(MouseEventArgs, bool) InputProvider.OnDoubleClick(MouseEventArgs) InputProvider.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Dragging with the left mouse button allows AreaSelection(Rectangle, bool, bool). Dragging with the right mouse button allows panning. Dragging with the middle mouse button allows rotating and zooming. Clicks and double-clicks are passed through. Constructors MouseInputProvider(Control) Starts monitoring and processing mouse events received by a specific control. public MouseInputProvider(Control control) Parameters control Control The control receiving the mouse events. Fields ClickAccuracy The number of pixels the mouse may move while pressed to still be considered a click. public const int ClickAccuracy = 10 Field Value int Properties InvertMouse Invert the mouse axes. public bool InvertMouse { get; set; } Property Value bool Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector."
  },
  "api/OmegaEngine.Input.TouchInputProvider.html": {
    "href": "api/OmegaEngine.Input.TouchInputProvider.html",
    "title": "Class TouchInputProvider | OmegaEngine",
    "summary": "Class TouchInputProvider Namespace OmegaEngine.Input Assembly OmegaEngine.dll Processes touch events into higher-level navigational commands. public class TouchInputProvider : InputProvider, IDisposable Inheritance object InputProvider TouchInputProvider Implements IDisposable Inherited Members InputProvider.HasReceivers InputProvider.AddReceiver(IInputReceiver) InputProvider.RemoveReceiver(IInputReceiver) InputProvider.OnPerspectiveChange(Point, int, int) InputProvider.OnAreaSelection(Rectangle, bool, bool) InputProvider.OnHover(Point) InputProvider.OnClick(MouseEventArgs, bool) InputProvider.OnDoubleClick(MouseEventArgs) InputProvider.Dispose() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks Complex manipulations with combined panning, rotating and zooming are possible. Constructors TouchInputProvider(ITouchControl) Starts monitoring and processing Touch events received by a specific control. public TouchInputProvider(ITouchControl control) Parameters control ITouchControl The control receiving the touch events. Methods Dispose(bool) To be called by Dispose() and the object destructor. protected override void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector."
  },
  "api/OmegaEngine.Input.UpdateReceiver.html": {
    "href": "api/OmegaEngine.Input.UpdateReceiver.html",
    "title": "Class UpdateReceiver | OmegaEngine",
    "summary": "Class UpdateReceiver Namespace OmegaEngine.Input Assembly OmegaEngine.dll Calls a callback delegate whenever any kind of input is received. public class UpdateReceiver : IInputReceiver Inheritance object UpdateReceiver Implements IInputReceiver Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors UpdateReceiver(Action) Creates a new update receiver. public UpdateReceiver(Action update) Parameters update Action The callback delegate to be called when any kind of input is received. Methods AreaSelection(Rectangle, bool, bool) Called when the user is selecting an area on the screen. public void AreaSelection(Rectangle area, bool accumulate, bool done) Parameters area Rectangle The selected area in pixels. The bottom-right corner is always the last point selected by the user, therefore the box may be inverted. accumulate bool true when the user wants the new selection to be added to the old one. done bool True when the user has finished his selection (e.g. released the mouse). Click(MouseEventArgs, bool) Called when the user clicked something (not dragged!). public void Click(MouseEventArgs e, bool accumulate) Parameters e MouseEventArgs The original event arguments from the click. accumulate bool true when the user wants the action to have an accumulative effect (usually for selections). DoubleClick(MouseEventArgs) Called when the user double-clicked something. public void DoubleClick(MouseEventArgs e) Parameters e MouseEventArgs The original event arguments from the click. Hover(Point) Called when the user is hovering above a point on the screen. public void Hover(Point target) Parameters target Point The point the user is hovering over in pixels. PerspectiveChange(Point, int, int) Called when the user changes the view perspective. public void PerspectiveChange(Point pan, int rotation, int zoom) Parameters pan Point Horizontal XY-panning in pixels. rotation int Horizontal rotation in pixels. zoom int Vertical zooming in pixels. Greater than 0 to zoom in; less than 0 to zoom out."
  },
  "api/OmegaEngine.Input.html": {
    "href": "api/OmegaEngine.Input.html",
    "title": "Namespace OmegaEngine.Input | OmegaEngine",
    "summary": "Namespace OmegaEngine.Input Handlers for mouse, keyboard and touch input. Classes InputProvider Processes events from an input device into higher-level navigational commands. KeyboardInputProvider Processes keyboard events into higher-level navigational commands. MouseInputProvider Processes mouse events into higher-level navigational commands. TouchInputProvider Processes touch events into higher-level navigational commands. UpdateReceiver Calls a callback delegate whenever any kind of input is received. Interfaces IInputReceiver An object that receives input procesed into navigational commands from an InputProvider."
  },
  "api/OmegaEngine.MessageEventHandler.html": {
    "href": "api/OmegaEngine.MessageEventHandler.html",
    "title": "Delegate MessageEventHandler | OmegaEngine",
    "summary": "Delegate MessageEventHandler Namespace OmegaEngine Assembly OmegaEngine.dll public delegate bool MessageEventHandler(Message m) Parameters m Message The window message Returns bool Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) See Also WindowMessage"
  },
  "api/OmegaEngine.Profiler.html": {
    "href": "api/OmegaEngine.Profiler.html",
    "title": "Class Profiler | OmegaEngine",
    "summary": "Class Profiler Namespace OmegaEngine Assembly OmegaEngine.dll Helper class with static functions to signal the beginnings and endings of performance profiling events. In Debug builds events are also passed to PIX. public static class Profiler Inheritance object Profiler Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties DeviceQuery The current D3D device query to use for controlling the command buffer. public static Query? DeviceQuery { get; set; } Property Value Query Methods AddEvent(string) Adds a non-timed profiler event. [Conditional(\"DEBUG\")] public static void AddEvent(string name) Parameters name string Te name of the event."
  },
  "api/OmegaEngine.ProfilerEvent.html": {
    "href": "api/OmegaEngine.ProfilerEvent.html",
    "title": "Struct ProfilerEvent | OmegaEngine",
    "summary": "Struct ProfilerEvent Namespace OmegaEngine Assembly OmegaEngine.dll Struct that allows you to profile timed execution blocks. public readonly struct ProfilerEvent : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Examples using(new LogEvent(\"Message\")) {} Remarks Do not use these over cross! Constructors ProfilerEvent(Func<string>) Starts a new profiler event with a certain name. public ProfilerEvent(Func<string> getName) Parameters getName Func<string> A delegate for getting the name of the event. ProfilerEvent(string) Starts a new profiler event with a certain name. public ProfilerEvent(string name) Parameters name string The name of the event. Methods Dispose() Ends the event. public void Dispose()"
  },
  "api/OmegaEngine.RenderHost.RenderForm.html": {
    "href": "api/OmegaEngine.RenderHost.RenderForm.html",
    "title": "Class RenderHost.RenderForm | OmegaEngine",
    "summary": "Class RenderHost.RenderForm Namespace OmegaEngine Assembly OmegaEngine.dll An internal Windows Form to use as Engine render target with mouse+keyboard event handling protected class RenderHost.RenderForm : TouchForm, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl, ITouchControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form TouchForm RenderHost.RenderForm Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl ITouchControl Inherited Members TouchForm.CreateHandle() TouchForm.CreateParams TouchForm.TouchDown TouchForm.TouchUp TouchForm.TouchMove Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateControlsInstance() Form.DefWndProc(ref Message) Form.Dispose(bool) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors RenderForm() public RenderForm() Methods WndProc(ref Message) Processes Windows messages. protected override void WndProc(ref Message m) Parameters m Message The Windows Message to process. Events WindowMessage Occurs when a window message is to be processed public event MessageEventHandler? WindowMessage Event Type MessageEventHandler See Also Form"
  },
  "api/OmegaEngine.RenderHost.html": {
    "href": "api/OmegaEngine.RenderHost.html",
    "title": "Class RenderHost | OmegaEngine",
    "summary": "Class RenderHost Namespace OmegaEngine Assembly OmegaEngine.dll Automatically provides an Engine instance with a fullscreen-capable window, render loop, input handling, etc. public class RenderHost : IDisposable Inheritance object RenderHost Implements IDisposable Derived GameBase Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Remarks By using this class, you don't need to create a window, set up InputProviders, provide access to DebugConsole, etc. yourself. You should override at least Initialize() and Render(double). This corresponds to the template method pattern. Constructors RenderHost(string, Icon?, Image?, bool) Sets up the Form. Call ToWindowed(Size) or ToFullscreen() and Run() afterwards. protected RenderHost(string name, Icon? icon = null, Image? background = null, bool stretch = false) Parameters name string The name of the application for the title bar icon Icon The icon of the application for the title bar background Image A background image for the window while loading stretch bool Stretch background to fit the screen? (false will center it instead) Fields Form The internal form used as the Engine render-targets protected readonly RenderHost.RenderForm Form Field Value RenderHost.RenderForm Properties Disposed Has the app been shutdown? [Browsable(false)] public bool Disposed { get; } Property Value bool Engine The Engine instance. [LuaHide] public Engine Engine { get; } Property Value Engine Exceptions InvalidOperationException Run() has not been called yet. Fullscreen Is the app in fullscreen mode? public bool Fullscreen { get; } Property Value bool KeyboardInputProvider A default KeyboardInputProvider hooked up to the Form. public KeyboardInputProvider KeyboardInputProvider { get; } Property Value KeyboardInputProvider Loading Indicates the app is currently loading something and the user must wait. public bool Loading { get; set; } Property Value bool Remarks On Windows 7 and newer this will cause a neat taskbar animation. MouseInputProvider A default MouseInputProvider hooked up to the Form. public MouseInputProvider MouseInputProvider { get; } Property Value MouseInputProvider TouchInputProvider A default TouchInputProvider hooked up to the Form. public TouchInputProvider TouchInputProvider { get; } Property Value TouchInputProvider Methods AddInputReceiver(IInputReceiver) Calls AddReceiver(IInputReceiver) for all default InputProviders. public void AddInputReceiver(IInputReceiver receiver) Parameters receiver IInputReceiver The object to receive the commands. ApplyGraphicsSettings() Called when graphics settings from an external source need to be applied to the Engine protected virtual void ApplyGraphicsSettings() BuildEngineConfig(bool) Called to generate an EngineConfig based on external settings protected virtual EngineConfig BuildEngineConfig(bool fullscreen) Parameters fullscreen bool Shall the configuration be generated for fullscreen mode? Returns EngineConfig Crash() Crashes the app for testing purposes [LuaGlobal] public static void Crash() Debug() Called when the debug form is to be displayed [LuaHide] public virtual void Debug() Dispose() Dispose the Engine, the internal windows form, etc. public void Dispose() Dispose(bool) To be called by Dispose() and the object destructor. protected virtual void Dispose(bool disposing) Parameters disposing bool true if called manually and not by the garbage collector. Exit() Stops the render loop and closes the window public void Exit() ~RenderHost() protected ~RenderHost() Initialize() To be called after the window is ready and the Engine needs to be set up protected virtual bool Initialize() Returns bool true if the initialization worked, false if it failed and the app must be closed NewLua() Creates a new LuaInterface.Lua instance with commonly used objects preloaded. [LuaHide] public virtual Lua NewLua() Returns Lua RemoveInputReceiver(IInputReceiver) Calls RemoveReceiver(IInputReceiver) for all default InputProviders. public void RemoveInputReceiver(IInputReceiver receiver) Parameters receiver IInputReceiver The object to no longer receive the commands. Render(double) Called when the next frame needs to be rendered. protected virtual void Render(double elapsedTime) Parameters elapsedTime double The number of seconds that have passed since this method was last called. ResetEngine() Resets the Engine [LuaGlobal(Description = \"Resets the graphics engine\")] protected virtual void ResetEngine() Run() Shows the window and runs the render loop until Exit() is called. [LuaHide] public virtual void Run() ToFullscreen() Sets up the Form for fullscreen display protected void ToFullscreen() ToWindowed(Size) Sets up the Form for normal windowed (non-fullscreen) mode protected void ToWindowed(Size size) Parameters size Size The window size UpdateStatus(string) Updates the current status of the loading process protected void UpdateStatus(string message) Parameters message string The new message to display"
  },
  "api/OmegaEngine.RenderPanel.html": {
    "href": "api/OmegaEngine.RenderPanel.html",
    "title": "Class RenderPanel | OmegaEngine",
    "summary": "Class RenderPanel Namespace OmegaEngine Assembly OmegaEngine.dll A Panel that automatically provides an Engine instance for rendering on it, an optional timer-driver render loop, input handling, etc. public class RenderPanel : TouchPanel, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, ITouchControl Inheritance object MarshalByRefObject Component Control ScrollableControl Panel TouchPanel RenderPanel Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable ITouchControl Inherited Members TouchPanel.CreateHandle() TouchPanel.WndProc(ref Message) TouchPanel.CreateParams TouchPanel.TouchDown TouchPanel.TouchUp TouchPanel.TouchMove Panel.ToString() Panel.AutoSize Panel.AutoSizeMode Panel.BorderStyle Panel.DefaultSize Panel.TabStop Panel.AutoSizeChanged ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.AdjustFormScrollbars(bool) ScrollableControl.GetScrollState(int) ScrollableControl.OnLayout(LayoutEventArgs) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnFontChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnParentChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnCreateControl() Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessCmdKey(ref Message, Keys) Control.ProcessDialogChar(char) Control.ProcessDialogKey(Keys) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.ProcessMnemonic(char) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.Select(bool, bool) Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.BindingContext Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.CanEnableIme Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors RenderPanel() public RenderPanel() Properties AutoRender When set to true Render() is automatically called in regular intervals. public bool AutoRender { get; set; } Property Value bool See Also AutoRenderInterval AutoRenderInterval The interval in milliseconds in which Render() is automatically called. public int AutoRenderInterval { get; set; } Property Value int See Also AutoRender Engine The Engine used to render graphics onto this panel. [Browsable(false)] public Engine? Engine { get; } Property Value Engine KeyboardInputProvider A default KeyboardInputProvider hooked up to the Panel. [Browsable(false)] public KeyboardInputProvider? KeyboardInputProvider { get; } Property Value KeyboardInputProvider MouseInputProvider A default MouseInputProvider hooked up to the Panel. [Browsable(false)] public MouseInputProvider? MouseInputProvider { get; } Property Value MouseInputProvider TouchInputProvider A default TouchInputProvider hooked up to the Panel. [Browsable(false)] public TouchInputProvider? TouchInputProvider { get; } Property Value TouchInputProvider Methods AddInputReceiver(IInputReceiver) Calls AddReceiver(IInputReceiver) for all default InputProviders. public void AddInputReceiver(IInputReceiver receiver) Parameters receiver IInputReceiver The object to receive the commands. Dispose(bool) Releases the unmanaged resources used by the Control and its child controls and optionally releases the managed resources. protected override void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. OnPaint(PaintEventArgs) Raises the Paint event. protected override void OnPaint(PaintEventArgs e) Parameters e PaintEventArgs A PaintEventArgs that contains the event data. OnResize(EventArgs) Fires the event indicating that the panel has been resized. Inheriting controls should use this in favor of actually listening to the event, but should still call base.onResize to ensure that the event is fired for external listeners. protected override void OnResize(EventArgs eventargs) Parameters eventargs EventArgs An EventArgs that contains the event data. RemoveInputReceiver(IInputReceiver) Calls RemoveReceiver(IInputReceiver) for all default InputProviders. public void RemoveInputReceiver(IInputReceiver receiver) Parameters receiver IInputReceiver The object to no longer receive the commands. Setup() Initializes the Engine for rendering on this Panel. public Engine Setup() Returns Engine The newly initialized Engine. Remarks Calling this multiple times will always return the same Engine instance. Exceptions NotSupportedException The graphics card does not meet the engine's minimum requirements. Direct3D9NotFoundException Throw if required DirectX version is missing. Direct3DX9NotFoundException Throw if required DirectX version is missing. Direct3D9Exception Internal errors occurred while initializing the graphics card. DirectSoundException Internal errors occurred while initializing the sound card."
  },
  "api/OmegaEngine.ZBufferMode.html": {
    "href": "api/OmegaEngine.ZBufferMode.html",
    "title": "Enum ZBufferMode | OmegaEngine",
    "summary": "Enum ZBufferMode Namespace OmegaEngine Assembly OmegaEngine.dll public enum ZBufferMode Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Normal = 0 Test against the ZBuffer before drawing a pixel and write to it afterwards Off = 2 Do not use the ZBuffer ReadOnly = 1 Test against the ZBuffer before drawing a pixel but don't write to it See Also ZBufferMode"
  },
  "api/OmegaEngine.html": {
    "href": "api/OmegaEngine.html",
    "title": "Namespace OmegaEngine | OmegaEngine",
    "summary": "Namespace OmegaEngine 3D graphics rendering based on DirectX 9. NuGet package: OmegaEngine Namespaces OmegaEngine.Assets Loading and caching file-based assets (textures, models, etc.). OmegaEngine.Audio 3D sound and music playback. OmegaEngine.Collections Specialized collection types supplementing . OmegaEngine.Foundation Rendering-agnostic infrastructure used by OmegaEngine. NuGet package: OmegaEngine.Foundation OmegaEngine.Graphics Graphics subsystem of the engine. OmegaEngine.Input Handlers for mouse, keyboard and touch input. Classes DebugConsole Provides a generic debug console powered by the Log system and Lua scripting. Engine Provides central control for 3D rendering, sound management, asset caching, etc. EngineCapabilities Methods for determining the rendering capabilities of the graphics hardware. EngineEffects Turn specific rendering effects in the Engine on or off. EngineElement A common base class for all objects that need an Engine instance. EnginePerformance Tracks the performance/speed of the Engine. EngineState Represents the current graphics render state of the Device. EngineUtilsAnimation Provides simple animation helpers for the Engine. EngineUtilsDraw Provides simple draw helpers for the Engine. Profiler Helper class with static functions to signal the beginnings and endings of performance profiling events. In Debug builds events are also passed to PIX. RenderHost Automatically provides an Engine instance with a fullscreen-capable window, render loop, input handling, etc. RenderHost.RenderForm An internal Windows Form to use as Engine render target with mouse+keyboard event handling RenderPanel A Panel that automatically provides an Engine instance for rendering on it, an optional timer-driver render loop, input handling, etc. Structs EngineConfig Stores settings for initializing Engine Hardware Information about the hardware the Engine is running on. HardwareCpu HardwareGpu HardwareRam ProfilerEvent Struct that allows you to profile timed execution blocks. Interfaces IAudio Represents an asset that can playback audio. IPositionable An interface to objects that have a position. Enums FrameLog ZBufferMode Delegates MessageEventHandler"
  },
  "api/OmegaGUI.DialogRenderer.html": {
    "href": "api/OmegaGUI.DialogRenderer.html",
    "title": "Class DialogRenderer | OmegaEngine",
    "summary": "Class DialogRenderer Namespace OmegaGUI Assembly OmegaGUI.dll Displays a Dialog using Dialog. public sealed class DialogRenderer : IDisposable Inheritance object DialogRenderer Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors DialogRenderer(GuiManager, Dialog, Point, Lua?) Creates a new dialog renderer for a Dialog public DialogRenderer(GuiManager manager, Dialog dialog, Point location = default, Lua? lua = null) Parameters manager GuiManager The GuiManager used to interface with the Engine dialog Dialog The dialog to be displayed location Point The location of the dialog on the screen lua Lua The scripting engine to execute event handlers. DialogRenderer(GuiManager, string, Point, Lua?) Creates a new dialog renderer from an XML file public DialogRenderer(GuiManager manager, string filename, Point location = default, Lua? lua = null) Parameters manager GuiManager The GuiManager used to interface with the Engine filename string The filename of the XML file to load location Point The location of the dialog on the screen lua Lua The scripting engine to execute event handlers. Properties DialogModel The dialog to be displayed public Dialog DialogModel { get; } Property Value Dialog DialogRender The rendering system used to display DialogModel public Dialog DialogRender { get; } Property Value Dialog Disposed Has this dialog been disposed? [Browsable(false)] public bool Disposed { get; } Property Value bool Name Text value to make it easier to identify a particular dialog public string? Name { get; set; } Property Value string Methods Close() Closes the dialog public void Close() Dispose() Removes the Engine hooks and queues the LuaInterface.Lua interpreter for disposal public void Dispose() ~DialogRenderer() protected ~DialogRenderer() GetControl(string) Gets the first Control in this DialogRenderer with the specified name public Control GetControl(string name) Parameters name string Returns Control Exceptions ArgumentNullException name is null. KeyNotFoundException An element with the specified key does not exist in the dictionary. ImportLua(string) Imports an external Lua script into the GUI's Lua instance public void ImportLua(string filename) Parameters filename string The Lua file to import MsgBox(string) public void MsgBox(string text) Parameters text string MsgBox(string, MsgBoxType, Action<MsgBoxResult>?) public void MsgBox(string text, MsgBoxType type, Action<MsgBoxResult>? callback) Parameters text string type MsgBoxType callback Action<MsgBoxResult> MsgBox(string, Action<MsgBoxResult>?) public void MsgBox(string text, Action<MsgBoxResult>? callback) Parameters text string callback Action<MsgBoxResult> SetLocation(int, int) Changes the dialog's on-screen position. public void SetLocation(int x, int y) Parameters x int y int Show() Show the dialog public void Show() ShowModal() Show the dialog with exclusive mouse handling public void ShowModal() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Update() Update the dialog output public void Update()"
  },
  "api/OmegaGUI.GuiManager.html": {
    "href": "api/OmegaGUI.GuiManager.html",
    "title": "Class GuiManager | OmegaEngine",
    "summary": "Class GuiManager Namespace OmegaGUI Assembly OmegaGUI.dll Maintains lists of all DialogRenderers public sealed class GuiManager : IDisposable Inheritance object GuiManager Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors GuiManager(Engine) Sets up the GUI system for rendering with the engine. public GuiManager(Engine engine) Parameters engine Engine The Engine to render in. Methods CloseAll() Closes all open DialogRenderers. [LuaGlobal(Description = \"Closes all open dialogs.\")] public void CloseAll() Dispose() Deactivates the OmegaGUI system and unhooks it from the Engine public void Dispose() ~GuiManager() protected ~GuiManager() OnMsgProc(Message) Handles Windows Messages for the GUI public bool OnMsgProc(Message m) Parameters m Message The message to handle Returns bool true if the message was handled and no further processing is necessary Reset() Closes all open DialogRenderers and resets the GUI system (i.e. clears all its caches). [LuaGlobal(Description = \"Closes all open dialogs and resets the GUI system (i.e. clears all its caches).\")] public void Reset() Update() Invokes Update() on all open DialogRenderers. [LuaGlobal(Description = \"Invokes the OnUpdate event on all open dialogs.\")] public void Update()"
  },
  "api/OmegaGUI.Model.Button.html": {
    "href": "api/OmegaGUI.Model.Button.html",
    "title": "Class Button | OmegaEngine",
    "summary": "Class Button Namespace OmegaGUI.Model Assembly OmegaGUI.dll Button control public class Button : ButtonBase, ICloneable Inheritance object Control Label ButtonBase Button Implements ICloneable Inherited Members ButtonBase.Hotkey ButtonBase.OnClick Label.ControlText Label.TextAlign Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Button() public Button() Properties CustomStyle A custom style for this button - no auto-update public string CustomStyle { get; set; } Property Value string StyleValid public bool StyleValid { get; } Property Value bool Text The text displayed on the control public override string Text { get; set; } Property Value string"
  },
  "api/OmegaGUI.Model.ButtonBase.html": {
    "href": "api/OmegaGUI.Model.ButtonBase.html",
    "title": "Class ButtonBase | OmegaEngine",
    "summary": "Class ButtonBase Namespace OmegaGUI.Model Assembly OmegaGUI.dll A basis for Button-like control public abstract class ButtonBase : Label, ICloneable Inheritance object Control Label ButtonBase Implements ICloneable Derived Button CheckBox DropdownList Inherited Members Label.ControlText Label.Text Label.TextAlign Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Properties Hotkey A hotkey that can substitute a mouse click - no auto-update public Keys Hotkey { get; set; } Property Value Keys OnClick A Lua script to execute when the control is clicked [FileType(\"Lua\")] public string? OnClick { get; set; } Property Value string"
  },
  "api/OmegaGUI.Model.ButtonStyle.html": {
    "href": "api/OmegaGUI.Model.ButtonStyle.html",
    "title": "Class ButtonStyle | OmegaEngine",
    "summary": "Class ButtonStyle Namespace OmegaGUI.Model Assembly OmegaGUI.dll Represents a custom style for a GUI button public class ButtonStyle : ICloneable Inheritance object ButtonStyle Implements ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields ButtonColorNormal public XColor ButtonColorNormal Field Value XColor ButtonColorPressed public XColor ButtonColorPressed Field Value XColor FillColorFocus public XColor FillColorFocus Field Value XColor FillColorMouseOver public XColor FillColorMouseOver Field Value XColor FillColorPressed public XColor FillColorPressed Field Value XColor TextColorMouseOver public XColor TextColorMouseOver Field Value XColor TextColorNormal public XColor TextColorNormal Field Value XColor Properties ButtonNormalColor public Color ButtonNormalColor { get; set; } Property Value Color ButtonPressedColor public Color ButtonPressedColor { get; set; } Property Value Color ButtonTextureLocation The upper left corner of the area in the texture file to use for the button layer public Point ButtonTextureLocation { get; set; } Property Value Point ButtonTextureSize The distance to the lower right corner of the area in the texture file to use for the button layer public Size ButtonTextureSize { get; set; } Property Value Size FillFocusColor public Color FillFocusColor { get; set; } Property Value Color FillMouseOverColor public Color FillMouseOverColor { get; set; } Property Value Color FillPressedColor public Color FillPressedColor { get; set; } Property Value Color FillTextureLocation The upper left corner of the area in the texture file to use for the fill layer public Point FillTextureLocation { get; set; } Property Value Point FillTextureSize The distance to the lower right corner of the area in the texture file to use for the fill layer public Size FillTextureSize { get; set; } Property Value Size Name Unique name for identifying this button style public string? Name { get; set; } Property Value string TextMouseOverColor public Color TextMouseOverColor { get; set; } Property Value Color TextNormalColor public Color TextNormalColor { get; set; } Property Value Color TextureFile The file containing the texture for this button style public string TextureFile { get; set; } Property Value string TextureFileValid public bool TextureFileValid { get; } Property Value bool Methods Clone() Creates a shallow copy of this button style. You need to call OmegaGUI.Model.ButtonStyle.Generate() on it before it can be used for rendering. public ButtonStyle Clone() Returns ButtonStyle The cloned button style ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/OmegaGUI.Model.CheckBox.html": {
    "href": "api/OmegaGUI.Model.CheckBox.html",
    "title": "Class CheckBox | OmegaEngine",
    "summary": "Class CheckBox Namespace OmegaGUI.Model Assembly OmegaGUI.dll CheckBox control public class CheckBox : ButtonBase, ICloneable Inheritance object Control Label ButtonBase CheckBox Implements ICloneable Derived RadioButton Inherited Members ButtonBase.Hotkey ButtonBase.OnClick Label.ControlText Label.TextAlign Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors CheckBox() public CheckBox() Fields IsChecked protected bool IsChecked Field Value bool Properties Checked Is this control currently checked? public virtual bool Checked { get; set; } Property Value bool OnChanged A Lua script to execute when the control's value has changed [FileType(\"Lua\")] public string? OnChanged { get; set; } Property Value string Text The text displayed on the control public override string Text { get; set; } Property Value string"
  },
  "api/OmegaGUI.Model.Control.html": {
    "href": "api/OmegaGUI.Model.Control.html",
    "title": "Class Control | OmegaEngine",
    "summary": "Class Control Namespace OmegaGUI.Model Assembly OmegaGUI.dll Abstract base class for all control views public abstract class Control : ICloneable Inheritance object Control Implements ICloneable Derived GroupBox Label ListBox PictureBox Slider Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields DXControl The OmegaGUI.Render control used for actual rendering protected Control? DXControl Field Value Control EffectiveLocation The actual location of the control on the dialog factoring in AlignHorizontal and AlignVertical protected Point EffectiveLocation Field Value Point EffectiveSize The actual size of the control on the dialog factoring in scaling due to Scale protected Size EffectiveSize Field Value Size IsEnabled protected bool IsEnabled Field Value bool IsVisible protected bool IsVisible Field Value bool Properties AlignHorizontal How to handle the X values of Location and Size public HorizontalMode AlignHorizontal { get; set; } Property Value HorizontalMode AlignVertical How to handle the Y values of Location and Size public VerticalMode AlignVertical { get; set; } Property Value VerticalMode ControlModel [Browsable(false)] public Control? ControlModel { get; } Property Value Control Default Is this the default control on the dialog? - no auto-update public bool Default { get; set; } Property Value bool DrawBox The effective area on the window were this control is rendered [Browsable(false)] public Rectangle DrawBox { get; } Property Value Rectangle Enabled Is this control currently active? public bool Enabled { get; set; } Property Value bool Location The location of the control on the dialog public Point Location { get; set; } Property Value Point Name Unique name for identifying this control public string? Name { get; set; } Property Value string OnMouseEnter A Lua script to execute when the mouse enters the area of the control [FileType(\"Lua\")] public string? OnMouseEnter { get; set; } Property Value string OnMouseExit A Lua script to execute when the mouse leaves the area of the control [FileType(\"Lua\")] public string? OnMouseExit { get; set; } Property Value string Size The size of the control on the dialog public Size Size { get; set; } Property Value Size Visible Is this control currently visible? public bool Visible { get; set; } Property Value bool Methods Clone() Creates a shallow copy of this control. You need to call OmegaGUI.Model.Control.Generate() on it before it can be used for rendering. public Control Clone() Returns Control The cloned control NeedsUpdate() protected void NeedsUpdate() SetupMouseEvents() protected void SetupMouseEvents() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/OmegaGUI.Model.Dialog.html": {
    "href": "api/OmegaGUI.Model.Dialog.html",
    "title": "Class Dialog | OmegaEngine",
    "summary": "Class Dialog Namespace OmegaGUI.Model Assembly OmegaGUI.dll An XML-serializable dialog view public class Dialog : ICloneable<Dialog> Inheritance object Dialog Implements ICloneable<Dialog> Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields ColorBackground Used for XML serialization. public XColor ColorBackground Field Value XColor ColorCaption Used for XML serialization. public XColor ColorCaption Field Value XColor ColorText Used for XML serialization. public XColor ColorText Field Value XColor Properties Animate Shall this dialog use animations? public bool Animate { get; set; } Property Value bool BackgroundColor The dialog's background color public Color BackgroundColor { get; set; } Property Value Color ButtonStyles A list of all custom button styles available in the dialog public Collection<ButtonStyle> ButtonStyles { get; } Property Value Collection<ButtonStyle> CaptionColor The dialog's caption bar color public Color CaptionColor { get; set; } Property Value Color CaptionHeight The height of caption displayed at the top of this dialog public int CaptionHeight { get; set; } Property Value int CaptionText The caption text displayed at the top of this dialog public string CaptionText { get; set; } Property Value string Controls A list of all controls on the dialog [Browsable(false)] public BindingList<Control> Controls { get; } Property Value BindingList<Control> EffectiveScale The effective scale resulting from the user-defined and automatic scaling to fullscreen [Browsable(false)] public float EffectiveScale { get; } Property Value float FontName The name of font for text on controls - no auto-update public string FontName { get; set; } Property Value string FontSize The font size public uint FontSize { get; set; } Property Value uint Fullscreen Shall this dialog be auto-scaled to fill the complete screen? - no auto-update public bool Fullscreen { get; set; } Property Value bool this[string] Gets the first Control in this Dialog with the specified name public Control this[string name] { get; } Parameters name string Property Value Control Exceptions ArgumentNullException name is null. KeyNotFoundException An element with the specified key does not exist in the dictionary. NeedsUpdate A flag to determine whether the model counterpart to this dialog vuew needs to be recreated to reflect changes made to properties [Browsable(false)] public bool NeedsUpdate { get; } Property Value bool OnShow A script to be run when the dialog is first shown [FileType(\"Lua\")] public string? OnShow { get; set; } Property Value string OnUpdate A script to be run after the dialog was first shown and whenever it needs to update its output [FileType(\"Lua\")] public string? OnUpdate { get; set; } Property Value string ResourceCulture The culture used for loading the assembly resources public static CultureInfo ResourceCulture { get; set; } Property Value CultureInfo Scale A factor by which all sizes are multiplied, is ignored in fullscreen mode public float Scale { get; set; } Property Value float Shift A set of coordinates by which all control positions are shifted public Point Shift { get; set; } Property Value Point Size The initial size of the dialog, used for auto-scaling fullscreen dialogs - no auto-update public Size Size { get; set; } Property Value Size TextColor The color of text on the dialog - no auto-update public Color TextColor { get; set; } Property Value Color TextureFile The file containing the texture for controls on this dialog - no auto-update public string TextureFile { get; set; } Property Value string TextureFileValid public bool TextureFileValid { get; } Property Value bool Visible Is this dialog currently visible? [Browsable(false)] public bool Visible { get; set; } Property Value bool Methods Clone() Creates a deep copy of this dialog. You need to call GenerateRender(DialogManager) on it before it can be used for rendering. public Dialog Clone() Returns Dialog The cloned dialog. FromContent(string) Loads a dialog from an XML file via the ContentManager. public static Dialog FromContent(string id) Parameters id string The ID of the file to load from Returns Dialog The loaded dialog MsgBox(string, MsgBoxType, Action<MsgBoxResult>?) public void MsgBox(string text, MsgBoxType type, Action<MsgBoxResult>? callback) Parameters text string type MsgBoxType callback Action<MsgBoxResult> PickControls(Rectangle) Finds Controls within a certain area public ICollection<Control> PickControls(Rectangle area) Parameters area Rectangle The coordinate area to look in Returns ICollection<Control> A list of all Controls with the area. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Events ScriptFired Occurs whenever one of the controls fires a script public event ScriptExecution? ScriptFired Event Type ScriptExecution"
  },
  "api/OmegaGUI.Model.DropdownList.html": {
    "href": "api/OmegaGUI.Model.DropdownList.html",
    "title": "Class DropdownList | OmegaEngine",
    "summary": "Class DropdownList Namespace OmegaGUI.Model Assembly OmegaGUI.dll Combo box control public class DropdownList : ButtonBase, ICloneable Inheritance object Control Label ButtonBase DropdownList Implements ICloneable Inherited Members ButtonBase.Hotkey ButtonBase.OnClick Label.ControlText Label.Text Label.TextAlign Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors DropdownList() public DropdownList() Properties Items A list of strings selectable in the control public MonitoredCollection<string> Items { get; } Property Value MonitoredCollection<string> OnChanged A Lua script to execute when the control's value has changed [FileType(\"Lua\")] public string? OnChanged { get; set; } Property Value string SelectedItem The currently selected item in the control public string SelectedItem { get; set; } Property Value string"
  },
  "api/OmegaGUI.Model.GroupBox.html": {
    "href": "api/OmegaGUI.Model.GroupBox.html",
    "title": "Class GroupBox | OmegaEngine",
    "summary": "Class GroupBox Namespace OmegaGUI.Model Assembly OmegaGUI.dll GroupBox control public class GroupBox : Control, ICloneable Inheritance object Control GroupBox Implements ICloneable Inherited Members Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors GroupBox() public GroupBox() Fields ColorBorder public XColor ColorBorder Field Value XColor ColorFill public XColor ColorFill Field Value XColor Properties BorderColor The color of the border of the group box public Color BorderColor { get; set; } Property Value Color FillColor The background color of the group box public Color FillColor { get; set; } Property Value Color"
  },
  "api/OmegaGUI.Model.HorizontalMode.html": {
    "href": "api/OmegaGUI.Model.HorizontalMode.html",
    "title": "Enum HorizontalMode | OmegaEngine",
    "summary": "Enum HorizontalMode Namespace OmegaGUI.Model Assembly OmegaGUI.dll public enum HorizontalMode Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Center = 2 X-values are interpreted as right-ward distance from the center FromLeft = 0 X-values are interpreted as right-ward distance from the left border FromRight = 1 X-values are interpreted as left-ward distance from the right border See Also AlignHorizontal"
  },
  "api/OmegaGUI.Model.Label.html": {
    "href": "api/OmegaGUI.Model.Label.html",
    "title": "Class Label | OmegaEngine",
    "summary": "Class Label Namespace OmegaGUI.Model Assembly OmegaGUI.dll Label text control public class Label : Control, ICloneable Inheritance object Control Label Implements ICloneable Derived ButtonBase TextBox Inherited Members Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Label() public Label() Fields ControlText protected string ControlText Field Value string Properties Text The text displayed on the control public virtual string Text { get; set; } Property Value string TextAlign How the text is to be aligned - only effective for Label public TextAlign TextAlign { get; set; } Property Value TextAlign"
  },
  "api/OmegaGUI.Model.ListBox.html": {
    "href": "api/OmegaGUI.Model.ListBox.html",
    "title": "Class ListBox | OmegaEngine",
    "summary": "Class ListBox Namespace OmegaGUI.Model Assembly OmegaGUI.dll List box control public class ListBox : Control, ICloneable Inheritance object Control ListBox Implements ICloneable Inherited Members Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ListBox() public ListBox() Properties Items A list of strings selectable in the control public MonitoredCollection<string> Items { get; } Property Value MonitoredCollection<string> OnDoubleClick A Lua script to execute when the user double-clicks onto an entry [FileType(\"Lua\")] public string? OnDoubleClick { get; set; } Property Value string OnSelection A Lua script to execute when the user selects an entry [FileType(\"Lua\")] public string? OnSelection { get; set; } Property Value string SelectedItem The currently selected item in the control public string SelectedItem { get; set; } Property Value string Style The style of the list box public ListBoxStyle Style { get; set; } Property Value ListBoxStyle"
  },
  "api/OmegaGUI.Model.LocaleFile.html": {
    "href": "api/OmegaGUI.Model.LocaleFile.html",
    "title": "Class LocaleFile | OmegaEngine",
    "summary": "Class LocaleFile Namespace OmegaGUI.Model Assembly OmegaGUI.dll A wrapper around an XmlDictionary used to store localized strings. public sealed class LocaleFile Inheritance object LocaleFile Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors LocaleFile() Base-constructor for XML serialization. Do not call manually! public LocaleFile() Fields FileExt The file extensions when this class is stored as a file. public const string FileExt = \".locale\" Field Value string Properties Entries The collection of entries to be stored. public XmlDictionary Entries { get; } Property Value XmlDictionary Methods FromContent(string) Loads a localization table from an XML file via the ContentManager. public static XmlDictionary FromContent(string id) Parameters id string The ID of the file to load from. Returns XmlDictionary The loaded table. Load(string) Loads a localization table from an XML file. public static XmlDictionary Load(string path) Parameters path string The file to load from. Returns XmlDictionary The loaded table. LoadLang(string) Loads a localization table from an XML file if possible. public static XmlDictionary LoadLang(string language) Parameters language string The language to load. Returns XmlDictionary The loaded table or an empty table if not found. Save(string, XmlDictionary) Saves a localization table in an XML file. public static void Save(string path, XmlDictionary entries) Parameters path string The file to save in entries XmlDictionary The collection of entries to be stored."
  },
  "api/OmegaGUI.Model.PictureBox.html": {
    "href": "api/OmegaGUI.Model.PictureBox.html",
    "title": "Class PictureBox | OmegaEngine",
    "summary": "Class PictureBox Namespace OmegaGUI.Model Assembly OmegaGUI.dll public class PictureBox : Control, ICloneable Inheritance object Control PictureBox Implements ICloneable Inherited Members Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PictureBox() public PictureBox() Properties Alpha The level of transparency from 0 (invisible) to 255 (solid) public byte Alpha { get; set; } Property Value byte TextureFile The file containing the texture for this picture box - no auto-update public string TextureFile { get; set; } Property Value string TextureFileValid public bool TextureFileValid { get; } Property Value bool TextureLocation The upper left corner of the area in the texture file to use - no auto-update public Point TextureLocation { get; set; } Property Value Point TextureSize The distance to the lower right corner of the area in the texture file to use - no auto-update public Size TextureSize { get; set; } Property Value Size"
  },
  "api/OmegaGUI.Model.RadioButton.html": {
    "href": "api/OmegaGUI.Model.RadioButton.html",
    "title": "Class RadioButton | OmegaEngine",
    "summary": "Class RadioButton Namespace OmegaGUI.Model Assembly OmegaGUI.dll Radio button control public class RadioButton : CheckBox, ICloneable Inheritance object Control Label ButtonBase CheckBox RadioButton Implements ICloneable Inherited Members CheckBox.IsChecked CheckBox.OnChanged ButtonBase.Hotkey ButtonBase.OnClick Label.ControlText Label.TextAlign Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors RadioButton() public RadioButton() Properties Checked Is this control currently checked? public override bool Checked { get; set; } Property Value bool GroupID The ID of the radio button group - no auto-update public uint GroupID { get; set; } Property Value uint Text The text displayed on the control public override string Text { get; set; } Property Value string"
  },
  "api/OmegaGUI.Model.ScriptExecution.html": {
    "href": "api/OmegaGUI.Model.ScriptExecution.html",
    "title": "Delegate ScriptExecution | OmegaEngine",
    "summary": "Delegate ScriptExecution Namespace OmegaGUI.Model Assembly OmegaGUI.dll A delegate for executing a script public delegate void ScriptExecution(string script, string source) Parameters script string The script to be executed source string From where the script is being called Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) See Also ScriptFired"
  },
  "api/OmegaGUI.Model.ScrollBar.html": {
    "href": "api/OmegaGUI.Model.ScrollBar.html",
    "title": "Class ScrollBar | OmegaEngine",
    "summary": "Class ScrollBar Namespace OmegaGUI.Model Assembly OmegaGUI.dll A scroll bar control public class ScrollBar : Slider, ICloneable Inheritance object Control Slider ScrollBar Implements ICloneable Inherited Members Slider.Min Slider.Max Slider.ControlValue Slider.OnChanged Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ScrollBar() public ScrollBar() Properties Value The current value of the control public override int Value { get; set; } Property Value int"
  },
  "api/OmegaGUI.Model.Slider.html": {
    "href": "api/OmegaGUI.Model.Slider.html",
    "title": "Class Slider | OmegaEngine",
    "summary": "Class Slider Namespace OmegaGUI.Model Assembly OmegaGUI.dll Slider control public class Slider : Control, ICloneable Inheritance object Control Slider Implements ICloneable Derived ScrollBar Inherited Members Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Slider() public Slider() Fields ControlValue protected int ControlValue Field Value int Properties Max Maximum value for control - no auto-update public int Max { get; set; } Property Value int Min Minimum value for control - no auto-update public int Min { get; set; } Property Value int OnChanged A Lua script to execute when the control's value has changed [FileType(\"Lua\")] public string? OnChanged { get; set; } Property Value string Value The current value of the control public virtual int Value { get; set; } Property Value int"
  },
  "api/OmegaGUI.Model.TextBox.html": {
    "href": "api/OmegaGUI.Model.TextBox.html",
    "title": "Class TextBox | OmegaEngine",
    "summary": "Class TextBox Namespace OmegaGUI.Model Assembly OmegaGUI.dll A basic edit box public class TextBox : Label, ICloneable Inheritance object Control Label TextBox Implements ICloneable Inherited Members Label.ControlText Label.TextAlign Control.DXControl Control.EffectiveLocation Control.EffectiveSize Control.NeedsUpdate() Control.Name Control.ToString() Control.Default Control.IsEnabled Control.Enabled Control.IsVisible Control.Visible Control.Location Control.Size Control.AlignHorizontal Control.AlignVertical Control.DrawBox Control.OnMouseEnter Control.OnMouseExit Control.ControlModel Control.SetupMouseEvents() Control.Clone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TextBox() public TextBox() Properties OnChanged A Lua script to execute when the control's value has changed [FileType(\"Lua\")] public string? OnChanged { get; set; } Property Value string OnEnter A Lua script to execute when the user presses the ENTER key [FileType(\"Lua\")] public string? OnEnter { get; set; } Property Value string Text The text entered in the control public override string Text { get; set; } Property Value string"
  },
  "api/OmegaGUI.Model.VerticalMode.html": {
    "href": "api/OmegaGUI.Model.VerticalMode.html",
    "title": "Enum VerticalMode | OmegaEngine",
    "summary": "Enum VerticalMode Namespace OmegaGUI.Model Assembly OmegaGUI.dll public enum VerticalMode Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Center = 2 Y-values are interpreted as down-ward distance from the center FromBottom = 1 Y-values are interpreted as up-ward distance from the bottom border FromTop = 0 Y-values are interpreted as down-ward distance from the top border See Also AlignVertical"
  },
  "api/OmegaGUI.Model.html": {
    "href": "api/OmegaGUI.Model.html",
    "title": "Namespace OmegaGUI.Model | OmegaEngine",
    "summary": "Namespace OmegaGUI.Model Editor-friendly, XML-serializable data model of the GUI. No render code. Classes Button Button control ButtonBase A basis for Button-like control ButtonStyle Represents a custom style for a GUI button CheckBox CheckBox control Control Abstract base class for all control views Dialog An XML-serializable dialog view DropdownList Combo box control GroupBox GroupBox control Label Label text control ListBox List box control LocaleFile A wrapper around an XmlDictionary used to store localized strings. PictureBox RadioButton Radio button control ScrollBar A scroll bar control Slider Slider control TextBox A basic edit box Enums HorizontalMode VerticalMode Delegates ScriptExecution A delegate for executing a script"
  },
  "api/OmegaGUI.Render.BlendColor.html": {
    "href": "api/OmegaGUI.Render.BlendColor.html",
    "title": "Struct BlendColor | OmegaEngine",
    "summary": "Struct BlendColor Namespace OmegaGUI.Render Assembly OmegaGUI.dll Blends colors public struct BlendColor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Current public Color4 Current Field Value Color4 States public Color4[] States Field Value Color4[] Methods Blend(ControlState, float) Blend the colors together public void Blend(ControlState state, float elapsedTime) Parameters state ControlState elapsedTime float Blend(ControlState, float, float) Blend the colors together public void Blend(ControlState state, float elapsedTime, float rate) Parameters state ControlState elapsedTime float rate float Initialize(Color4) Initialize the color blending public void Initialize(Color4 defaultColor) Parameters defaultColor Color4 Initialize(Color4, Color4, Color4) Initialize the color blending public void Initialize(Color4 defaultColor, Color4 disabledColor, Color4 hiddenColor) Parameters defaultColor Color4 disabledColor Color4 hiddenColor Color4"
  },
  "api/OmegaGUI.Render.Button.html": {
    "href": "api/OmegaGUI.Render.Button.html",
    "title": "Class Button | OmegaEngine",
    "summary": "Class Button Namespace OmegaGUI.Render Assembly OmegaGUI.dll Button control public class Button : Label Inheritance object Control Label Button Derived CheckBox DropdownList Inherited Members Label.textData Label.TextAlign Label.GetTextCopy() Label.SetText(string) Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.OnInitialize() Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.UserData Control.Parent Control.OnFocusIn() Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.ContainsPoint(Point) Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() Control.UpdateRectangles() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Button(Dialog) Create new button instance public Button(Dialog parent) Parameters parent Dialog Fields ButtonLayer public const int ButtonLayer = 0 Field Value int FillLayer public const int FillLayer = 1 Field Value int isPressed protected bool isPressed Field Value bool Properties CanHaveFocus Can the button have focus public override bool CanHaveFocus { get; } Property Value bool Methods HandleKeyboard(WindowMessage, IntPtr, IntPtr) Will handle the keyboard strokes public override bool HandleKeyboard(WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage wParam IntPtr lParam IntPtr Returns bool HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Handle mouse messages from the buttons public override bool HandleMouse(WindowMessage msg, Point pt, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage pt Point wParam IntPtr lParam IntPtr Returns bool OnHotKey() The hotkey for this button was pressed public override void OnHotKey() RaiseClickEvent(Button, bool) Create new button instance protected void RaiseClickEvent(Button sender, bool wasTriggeredByUser) Parameters sender Button wasTriggeredByUser bool Render(Device, float) Render the button public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float Events Click public event EventHandler? Click Event Type EventHandler"
  },
  "api/OmegaGUI.Render.CheckBox.html": {
    "href": "api/OmegaGUI.Render.CheckBox.html",
    "title": "Class CheckBox | OmegaEngine",
    "summary": "Class CheckBox Namespace OmegaGUI.Render Assembly OmegaGUI.dll CheckBox control public class CheckBox : Button Inheritance object Control Label Button CheckBox Derived RadioButton Inherited Members Button.ButtonLayer Button.FillLayer Button.isPressed Button.Click Button.RaiseClickEvent(Button, bool) Button.CanHaveFocus Label.textData Label.TextAlign Label.GetTextCopy() Label.SetText(string) Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.OnInitialize() Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.UserData Control.Parent Control.OnFocusIn() Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors CheckBox(Dialog) Create new checkbox instance public CheckBox(Dialog parent) Parameters parent Dialog Fields BoxLayer public const int BoxLayer = 0 Field Value int CheckLayer public const int CheckLayer = 1 Field Value int buttonRect protected Rectangle buttonRect Field Value Rectangle isBoxChecked protected bool isBoxChecked Field Value bool textRect protected Rectangle textRect Field Value Rectangle Properties IsChecked Checked property public virtual bool IsChecked { get; set; } Property Value bool Methods ContainsPoint(Point) Does the control contain the point? public override bool ContainsPoint(Point pt) Parameters pt Point Returns bool HandleKeyboard(WindowMessage, IntPtr, IntPtr) Handle the keyboard for the checkbox public override bool HandleKeyboard(WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage wParam IntPtr lParam IntPtr Returns bool HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Handle mouse messages from the checkbox public override bool HandleMouse(WindowMessage msg, Point pt, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage pt Point wParam IntPtr lParam IntPtr Returns bool OnHotKey() Override hotkey to fire event public override void OnHotKey() RaiseChangedEvent(CheckBox, bool) Create new button instance protected void RaiseChangedEvent(CheckBox sender, bool wasTriggeredByUser) Parameters sender CheckBox wasTriggeredByUser bool Render(Device, float) Render the checkbox control public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float SetCheckedInternal(bool, bool) Sets the checked state and fires the event if necessary protected virtual void SetCheckedInternal(bool ischecked, bool fromInput) Parameters ischecked bool fromInput bool UpdateRectangles() Update the rectangles protected override void UpdateRectangles() Events Changed public event EventHandler? Changed Event Type EventHandler"
  },
  "api/OmegaGUI.Render.Control.html": {
    "href": "api/OmegaGUI.Render.Control.html",
    "title": "Class Control | OmegaEngine",
    "summary": "Class Control Namespace OmegaGUI.Render Assembly OmegaGUI.dll Abstract base class for all control models public abstract class Control Inheritance object Control Derived GroupBox Label ListBox PictureBox ScrollBar Slider TextBox Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Control(Dialog) Create a new instance of a control protected Control(Dialog parent) Parameters parent Dialog Fields IsDefault public bool IsDefault Field Value bool boundingBox protected Rectangle boundingBox Field Value Rectangle controlId protected int controlId Field Value int controlX protected int controlX Field Value int controlY protected int controlY Field Value int ctrlHotKey protected Keys ctrlHotKey Field Value Keys ctrlType protected ControlType ctrlType Field Value ControlType elementList protected List<Element> elementList Field Value List<Element> enabled protected bool enabled Field Value bool hasFocus protected bool hasFocus Field Value bool height protected int height Field Value int index public uint index Field Value uint isMouseOver protected bool isMouseOver Field Value bool localUserData protected object localUserData Field Value object parentDialog protected Dialog parentDialog Field Value Dialog visible protected bool visible Field Value bool width protected int width Field Value int Properties CanHaveFocus Can the control have focus public virtual bool CanHaveFocus { get; } Property Value bool ControlType Type of the control public virtual ControlType ControlType { get; } Property Value ControlType Hotkey The controls hotkey public virtual Keys Hotkey { get; set; } Property Value Keys ID Unique ID of the control public virtual int ID { get; set; } Property Value int IsEnabled Is the control enabled public virtual bool IsEnabled { get; set; } Property Value bool IsVisible Is the control visible public virtual bool IsVisible { get; set; } Property Value bool this[uint] Index for the elements this control has access to public Element this[uint elementIndex] { get; set; } Parameters elementIndex uint Property Value Element Parent The parent dialog of this control public Dialog Parent { get; } Property Value Dialog UserData User specified data public object UserData { get; set; } Property Value object Methods ContainsPoint(Point) Does the control contain this point public virtual bool ContainsPoint(Point pt) Parameters pt Point Returns bool HandleKeyboard(WindowMessage, IntPtr, IntPtr) Handle the keyboard data public virtual bool HandleKeyboard(WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage wParam IntPtr lParam IntPtr Returns bool HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Handle the mouse data public virtual bool HandleMouse(WindowMessage msg, Point pt, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage pt Point wParam IntPtr lParam IntPtr Returns bool MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Message Handler public virtual bool MsgProc(IntPtr hWnd, WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters hWnd IntPtr msg WindowMessage wParam IntPtr lParam IntPtr Returns bool OnFocusIn() Called when control gets focus public virtual void OnFocusIn() OnFocusOut() Called when control loses focus public virtual void OnFocusOut() OnHotKey() Called when the control's hotkey is hit public virtual void OnHotKey() OnInitialize() Initialize the control public virtual void OnInitialize() OnMouseEnter() Called when mouse goes over the control public virtual void OnMouseEnter() OnMouseExit() Called when mouse leaves the control public virtual void OnMouseExit() Refresh() Refreshes the control public virtual void Refresh() Render(Device, float) Render the control public abstract void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float SetLocation(int, int) Called to set control's location public virtual void SetLocation(int x, int y) Parameters x int y int SetSize(int, int) Called to set control's size public virtual void SetSize(int w, int h) Parameters w int h int ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. UpdateRectangles() Updates the rectangles protected virtual void UpdateRectangles() Events MouseEnter public event EventHandler? MouseEnter Event Type EventHandler MouseExit public event EventHandler? MouseExit Event Type EventHandler"
  },
  "api/OmegaGUI.Render.ControlState.html": {
    "href": "api/OmegaGUI.Render.ControlState.html",
    "title": "Enum ControlState | OmegaEngine",
    "summary": "Enum ControlState Namespace OmegaGUI.Render Assembly OmegaGUI.dll Possible states of a control public enum ControlState Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Disabled = 1 Focus = 3 Hidden = 2 LastState = 6 MouseOver = 4 Normal = 0 Pressed = 5"
  },
  "api/OmegaGUI.Render.ControlType.html": {
    "href": "api/OmegaGUI.Render.ControlType.html",
    "title": "Enum ControlType | OmegaEngine",
    "summary": "Enum ControlType Namespace OmegaGUI.Render Assembly OmegaGUI.dll Predefined control types public enum ControlType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Button = 2 CheckBox = 3 DropdownList = 5 GroupBox = 1 Label = 0 ListBox = 7 PictureBox = 10 RadioButton = 4 Scrollbar = 9 Slider = 6 TextBox = 8"
  },
  "api/OmegaGUI.Render.Dialog.html": {
    "href": "api/OmegaGUI.Render.Dialog.html",
    "title": "Class Dialog | OmegaEngine",
    "summary": "Class Dialog Namespace OmegaGUI.Render Assembly OmegaGUI.dll A dialog model containing DirectX-based controls public class Dialog Inheritance object Dialog Derived MessageBox Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Dialog(DialogManager) Create a new instance of the dialog class public Dialog(DialogManager manager) Parameters manager DialogManager The OmegaGUI.Render.Dialog.DialogManager instance that provides the resources for rendering of this dialog Dialog(DialogManager, Color4) Create a new instance of the dialog class public Dialog(DialogManager manager, Color4 defaultTextColor) Parameters manager DialogManager The OmegaGUI.Render.Dialog.DialogManager instance that provides the resources for rendering of this dialog defaultTextColor Color4 The default color of text on this dialog Dialog(DialogManager, Color4, string, string, uint) Create a new instance of the dialog class public Dialog(DialogManager manager, Color4 defaultTextColor, string defaultTexture, string defaultFont, uint defaultFontSize) Parameters manager DialogManager The OmegaGUI.Render.Dialog.DialogManager instance that provides the resources for rendering of this dialog defaultTextColor Color4 The default color of text on this dialog defaultTexture string The texture file containing the controls defaultFont string The name of default font for text on controls defaultFontSize uint The default font size Fields BlackColorValue public static readonly Color4 BlackColorValue Field Value Color4 IsMinimized public bool IsMinimized Field Value bool IsUsingKeyboardInput public bool IsUsingKeyboardInput Field Value bool IsUsingMouseInput public bool IsUsingMouseInput Field Value bool IsUsingNonUserEvents public bool IsUsingNonUserEvents Field Value bool TransparentWhite public static readonly Color4 TransparentWhite Field Value Color4 WheelDelta public const int WheelDelta = 120 Field Value int WhiteColorValue public static readonly Color4 WhiteColorValue Field Value Color4 Properties CaptionHeight The height of the caption bar at the top of the dialog public int CaptionHeight { get; set; } Property Value int DefaultFontSize public uint DefaultFontSize { get; set; } Property Value uint Height Dialogs height public int Height { get; set; } Property Value int Location The dialog's location public Point Location { get; set; } Property Value Point Width Dialogs width public int Width { get; set; } Property Value int Methods AddButton(int, string, int, int, int, int) Adds a button control to the dialog public Button AddButton(int id, string text, int x, int y, int w, int h) Parameters id int text string x int y int w int h int Returns Button AddButton(int, string, int, int, int, int, Keys, bool) Adds a button control to the dialog public Button AddButton(int id, string text, int x, int y, int w, int h, Keys hotkey, bool isDefault) Parameters id int text string x int y int w int h int hotkey Keys isDefault bool Returns Button AddCheckBox(int, string, int, int, int, int, bool) Adds a checkbox control to the dialog public CheckBox AddCheckBox(int id, string text, int x, int y, int w, int h, bool ischecked) Parameters id int text string x int y int w int h int ischecked bool Returns CheckBox AddCheckBox(int, string, int, int, int, int, bool, Keys, bool) Adds a checkbox to the dialog public CheckBox AddCheckBox(int id, string text, int x, int y, int w, int h, bool ischecked, Keys hotkey, bool isDefault) Parameters id int text string x int y int w int h int ischecked bool hotkey Keys isDefault bool Returns CheckBox AddControl(Control) Adds a control to the dialog public void AddControl(Control control) Parameters control Control AddDropdownList(int, int, int, int, int) Adds a dropdown list control to the dialog public DropdownList AddDropdownList(int id, int x, int y, int w, int h) Parameters id int x int y int w int h int Returns DropdownList AddDropdownList(int, int, int, int, int, Keys, bool) Adds a dropdown list control to the dialog public DropdownList AddDropdownList(int id, int x, int y, int w, int h, Keys hotkey, bool isDefault) Parameters id int x int y int w int h int hotkey Keys isDefault bool Returns DropdownList AddGroupBox(int, int, int, int, int, Color4, Color4) Adds a group box control to the dialog public GroupBox AddGroupBox(int id, int x, int y, int w, int h, Color4 borderColor, Color4 fillCo) Parameters id int x int y int w int h int borderColor Color4 fillCo Color4 Returns GroupBox AddListBox(int, int, int, int, int) Adds a listbox control to the dialog public ListBox AddListBox(int id, int x, int y, int w, int h) Parameters id int x int y int w int h int Returns ListBox AddListBox(int, int, int, int, int, ListBoxStyle) Adds a listbox control to the dialog public ListBox AddListBox(int id, int x, int y, int w, int h, ListBoxStyle style) Parameters id int x int y int w int h int style ListBoxStyle Returns ListBox AddPictureBox(int, int, int, int, int, Element) Adds a picture box control to the dialog public PictureBox AddPictureBox(int id, int x, int y, int w, int h, Element fill) Parameters id int x int y int w int h int fill Element Returns PictureBox AddRadioButton(int, uint, string, int, int, int, int, bool) Adds a radio button control to the dialog public RadioButton AddRadioButton(int id, uint groupId, string text, int x, int y, int w, int h, bool ischecked) Parameters id int groupId uint text string x int y int w int h int ischecked bool Returns RadioButton AddRadioButton(int, uint, string, int, int, int, int, bool, Keys, bool) Adds a radiobutton to the dialog public RadioButton AddRadioButton(int id, uint groupId, string text, int x, int y, int w, int h, bool ischecked, Keys hotkey, bool isDefault) Parameters id int groupId uint text string x int y int w int h int ischecked bool hotkey Keys isDefault bool Returns RadioButton AddScrollBar(int, int, int, int, int) Adds a scroll bar control to the dialog public ScrollBar AddScrollBar(int id, int x, int y, int w, int h) Parameters id int x int y int w int h int Returns ScrollBar AddScrollBar(int, int, int, int, int, int, int, int, bool) Adds a scroll bar control to the dialog public ScrollBar AddScrollBar(int id, int x, int y, int w, int h, int min, int max, int initialValue, bool isDefault) Parameters id int x int y int w int h int min int max int initialValue int isDefault bool Returns ScrollBar AddSlider(int, int, int, int, int) Adds a slider control to the dialog public Slider AddSlider(int id, int x, int y, int w, int h) Parameters id int x int y int w int h int Returns Slider AddSlider(int, int, int, int, int, int, int, int, bool) Adds a slider control to the dialog public Slider AddSlider(int id, int x, int y, int w, int h, int min, int max, int initialValue, bool isDefault) Parameters id int x int y int w int h int min int max int initialValue int isDefault bool Returns Slider AddStatic(int, string, int, int, int, int) Adds a static text control to the dialog public Label AddStatic(int id, string text, int x, int y, int w, int h) Parameters id int text string x int y int w int h int Returns Label AddStatic(int, string, int, int, int, int, bool) Adds a static text control to the dialog public Label AddStatic(int id, string text, int x, int y, int w, int h, bool isDefault) Parameters id int text string x int y int w int h int isDefault bool Returns Label AddTextBox(int, string, int, int, int, int) Adds an edit box control to the dialog public TextBox AddTextBox(int id, string text, int x, int y, int w, int h) Parameters id int text string x int y int w int h int Returns TextBox AddTextBox(int, string, int, int, int, int, bool) Adds an edit box control to the dialog public TextBox AddTextBox(int id, string text, int x, int y, int w, int h, bool isDefault) Parameters id int text string x int y int w int h int isDefault bool Returns TextBox ClearFocus() Clears focus of the dialog public static void ClearFocus() ClearRadioButtonGroup(uint) Clears the radio button group public void ClearRadioButtonGroup(uint groupIndex) Parameters groupIndex uint DrawRectangle(Rectangle, Color4, bool) Draw a rectangle public void DrawRectangle(Rectangle rect, Color4 color, bool filled) Parameters rect Rectangle color Color4 filled bool DrawSprite(Element, Rectangle) Draw a sprite public void DrawSprite(Element element, Rectangle rect) Parameters element Element rect Rectangle DrawText(string, Element, Rectangle) Draw's some text public void DrawText(string text, Element element, Rectangle rect) Parameters text string element Element rect Rectangle DrawText(string, Element, Rectangle, bool) Draw's some text public void DrawText(string text, Element element, Rectangle rect, bool shadow) Parameters text string element Element rect Rectangle shadow bool GetControlAtPoint(Point) Returns the control located at a point (if one exists) public Control GetControlAtPoint(Point pt) Parameters pt Point Returns Control GetDefaultElement(ControlType, uint) Gets the default element public Element GetDefaultElement(ControlType ctype, uint index) Parameters ctype ControlType index uint Returns Element GetFont(uint) Shared resource access. Indexed fonts and textures are shared among all the controls. public FontNode GetFont(uint index) Parameters index uint Returns FontNode GetTexture(uint) Shared resource access. Indexed fonts and textures are shared among all the controls. public TextureNode GetTexture(uint index) Parameters index uint Returns TextureNode InitializeControl(Control) Initializes a control public void InitializeControl(Control control) Parameters control Control MessageProc(IntPtr, WindowMessage, IntPtr, IntPtr) Handle messages for this dialog public bool MessageProc(IntPtr hWnd, WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters hWnd IntPtr msg WindowMessage wParam IntPtr lParam IntPtr Returns bool true if the message was handled and no further processing is necessary OnRender(float) Render the dialog public void OnRender(float elapsedTime) Parameters elapsedTime float Refresh() Refresh the dialog public void Refresh() RemoveAllControls() Removes all controls from this dialog public void RemoveAllControls() RequestFocus(Control) Request that this control has focus public static void RequestFocus(Control control) Parameters control Control SetBackgroundColors(Color4) Called to set dialog's border colors public void SetBackgroundColors(Color4 allCorners) Parameters allCorners Color4 SetBackgroundColors(Color4, Color4, Color4, Color4) Called to set dialog's border colors public void SetBackgroundColors(Color4 topLeft, Color4 topRight, Color4 bottomLeft, Color4 bottomRight) Parameters topLeft Color4 topRight Color4 bottomLeft Color4 bottomRight Color4 SetCaptionColor(Color4) public void SetCaptionColor(Color4 color) Parameters color Color4 SetCaptionText(string) Called to set dialog's caption public void SetCaptionText(string text) Parameters text string SetDefaultElement(ControlType, uint, Element) Sets the default element public void SetDefaultElement(ControlType ctype, uint index, Element e) Parameters ctype ControlType index uint e Element SetFont(uint, string, uint, FontWeight) Shared resource access. Indexed fonts and textures are shared among all the controls. public void SetFont(uint index, string faceName, uint fontHeight, FontWeight weight) Parameters index uint faceName string fontHeight uint weight FontWeight SetRefreshTime(float) Set the static refresh time public static void SetRefreshTime(float time) Parameters time float SetSize(int, int) Called to set dialog's size public void SetSize(int w, int h) Parameters w int h int SetTexture(uint, string) Shared resource access. Indexed fonts and textures are shared among all the controls. public void SetTexture(uint index, string filename) Parameters index uint filename string Events Resize public event EventHandler? Resize Event Type EventHandler"
  },
  "api/OmegaGUI.Render.DialogManager.html": {
    "href": "api/OmegaGUI.Render.DialogManager.html",
    "title": "Class DialogManager | OmegaEngine",
    "summary": "Class DialogManager Namespace OmegaGUI.Render Assembly OmegaGUI.dll Manages shared resources of DirectX-based dialogs public sealed class DialogManager : IDisposable Inheritance object DialogManager Implements IDisposable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors DialogManager(Engine) Sets up the GUI system for usage with a rendering engine public DialogManager(Engine engine) Parameters engine Engine The rendering engine containing the Direct3D device Properties Device Gets the DirectX device public Device Device { get; } Property Value Device Disposed Has this manager been disposed? [Browsable(false)] public bool Disposed { get; } Property Value bool Engine Gets the render engine public Engine? Engine { get; } Property Value Engine MessageBox Gets a Specialized MessageBox dialog public MessageBox MessageBox { get; } Property Value MessageBox Sprite public Sprite? Sprite { get; } Property Value Sprite StateBlock public StateBlock? StateBlock { get; } Property Value StateBlock Target Gets the render target control public Control Target { get; } Property Value Control Methods AddFont(string, uint, FontWeight) Adds a font to the resource manager public int AddFont(string faceName, uint height, FontWeight weight) Parameters faceName string height uint weight FontWeight Returns int AddTexture(string) Adds a texture to the resource manager public int AddTexture(string filename) Parameters filename string Returns int CreateFont(int) Creates a font public void CreateFont(int font) Parameters font int CreateTexture(int) Creates a texture public void CreateTexture(int tex) Parameters tex int Dispose() Unhooks the OmegaGUI system from the Engine and disposes its internal DirectX resources public void Dispose() ~DialogManager() protected ~DialogManager() GetFontNode(int) Gets a font node from the cache public FontNode GetFontNode(int index) Parameters index int Returns FontNode GetTextureNode(int) Gets a texture node from the cache public TextureNode GetTextureNode(int index) Parameters index int Returns TextureNode OnCreateDevice() Called when the device is created public void OnCreateDevice() OnLostDevice() Called when the device has been lost. public void OnLostDevice() OnResetDevice() Called when the device has been reset. public void OnResetDevice()"
  },
  "api/OmegaGUI.Render.DropdownList.html": {
    "href": "api/OmegaGUI.Render.DropdownList.html",
    "title": "Class DropdownList | OmegaEngine",
    "summary": "Class DropdownList Namespace OmegaGUI.Render Assembly OmegaGUI.dll Dropdown list control public class DropdownList : Button Inheritance object Control Label Button DropdownList Inherited Members Button.ButtonLayer Button.FillLayer Button.isPressed Button.Click Button.RaiseClickEvent(Button, bool) Label.textData Label.TextAlign Label.GetTextCopy() Label.SetText(string) Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.UserData Control.Parent Control.OnFocusIn() Control.OnMouseEnter() Control.OnMouseExit() Control.ContainsPoint(Point) Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors DropdownList(Dialog) Create new dropdown list control public DropdownList(Dialog parent) Parameters parent Dialog Fields ComboButtonLayer public const int ComboButtonLayer = 1 Field Value int DropdownLayer public const int DropdownLayer = 2 Field Value int MainLayer public const int MainLayer = 0 Field Value int SelectionLayer public const int SelectionLayer = 3 Field Value int buttonRect protected Rectangle buttonRect Field Value Rectangle dropDownRect protected Rectangle dropDownRect Field Value Rectangle dropDownTextRect protected Rectangle dropDownTextRect Field Value Rectangle dropHeight protected int dropHeight Field Value int focusedIndex protected int focusedIndex Field Value int isComboOpen protected bool isComboOpen Field Value bool itemList protected List<ListItem> itemList Field Value List<ListItem> scrollWidth protected int scrollWidth Field Value int scrollbarControl protected ScrollBar scrollbarControl Field Value ScrollBar selectedIndex protected int selectedIndex Field Value int textRect protected Rectangle textRect Field Value Rectangle Properties CanHaveFocus Can this control have focus public override bool CanHaveFocus { get; } Property Value bool this[int] Indexer for items in the list public ListItem this[int index] { get; } Parameters index int Property Value ListItem NumberItems Number of items current in the list public int NumberItems { get; } Property Value int Methods AddItem(string, string, object) Adds an item to the dropdown list control public void AddItem(string text, string tag, object data) Parameters text string tag string data object Clear() Removes all items from the control public void Clear() ContainsItem(string) Determines whether this control contains an item public bool ContainsItem(string text) Parameters text string Returns bool ContainsItem(string, int) Determines whether this control contains an item public bool ContainsItem(string text, int start) Parameters text string start int Returns bool FindItem(string) Finds an item in the list and returns the index protected int FindItem(string text) Parameters text string Returns int FindItem(string, int) Finds an item in the list and returns the index protected int FindItem(string text, int start) Parameters text string start int Returns int GetItemData(string) Gets the data for an item public object? GetItemData(string text) Parameters text string Returns object GetSelectedData() Gets the data for the selected item public object GetSelectedData() Returns object GetSelectedItem() Gets the selected item public ListItem GetSelectedItem() Returns ListItem HandleKeyboard(WindowMessage, IntPtr, IntPtr) Called when the control needs to handle the keyboard public override bool HandleKeyboard(WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage wParam IntPtr lParam IntPtr Returns bool HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Called when the control should handle the mouse public override bool HandleMouse(WindowMessage msg, Point pt, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage pt Point wParam IntPtr lParam IntPtr Returns bool OnFocusOut() Called when focus leaves the control public override void OnFocusOut() OnHotKey() Called when the control's hotkey is pressed public override void OnHotKey() OnInitialize() Initialize the scrollbar control here public override void OnInitialize() RaiseChangedEvent(DropdownList, bool) Create new button instance protected void RaiseChangedEvent(DropdownList sender, bool wasTriggeredByUser) Parameters sender DropdownList wasTriggeredByUser bool RemoveAt(int) Removes an item at a particular index public void RemoveAt(int index) Parameters index int Render(Device, float) Called when the control should be rendered public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float SetDropHeight(int) Sets the drop height of this control public void SetDropHeight(int height) Parameters height int SetScrollbarWidth(int) Sets the scroll bar width of this control public void SetScrollbarWidth(int width) Parameters width int SetSelected(int) Sets the selected item by index public void SetSelected(int index) Parameters index int SetSelected(string) Sets the selected item by text public void SetSelected(string text) Parameters text string UpdateRectangles() Update the rectangles for the dropdown list control protected override void UpdateRectangles() Events Changed public event EventHandler? Changed Event Type EventHandler"
  },
  "api/OmegaGUI.Render.Element.html": {
    "href": "api/OmegaGUI.Render.Element.html",
    "title": "Class Element | OmegaEngine",
    "summary": "Class Element Namespace OmegaGUI.Render Assembly OmegaGUI.dll Contains all the display tweakables for a control public class Element : ICloneable Inheritance object Element Implements ICloneable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields FontColor public BlendColor FontColor Field Value BlendColor FontIndex public uint FontIndex Field Value uint TextureColor public BlendColor TextureColor Field Value BlendColor TextureIndex public uint TextureIndex Field Value uint textFormat public DrawTextFormat textFormat Field Value DrawTextFormat textureRect public Rectangle textureRect Field Value Rectangle Methods Clone() Clone an object public Element Clone() Returns Element Refresh() Refresh this element public void Refresh() SetFont(uint, Color4, DrawTextFormat) Set the font public void SetFont(uint font, Color4 defaultFontColor, DrawTextFormat format) Parameters font uint defaultFontColor Color4 format DrawTextFormat SetTexture(uint, Rectangle) Set the texture public void SetTexture(uint tex, Rectangle texRect) Parameters tex uint texRect Rectangle SetTexture(uint, Rectangle, Color4) Set the texture public void SetTexture(uint tex, Rectangle texRect, Color4 defaultTextureColor) Parameters tex uint texRect Rectangle defaultTextureColor Color4"
  },
  "api/OmegaGUI.Render.ElementHolder.html": {
    "href": "api/OmegaGUI.Render.ElementHolder.html",
    "title": "Struct ElementHolder | OmegaEngine",
    "summary": "Struct ElementHolder Namespace OmegaGUI.Render Assembly OmegaGUI.dll Contains all the display information for a given control type public struct ElementHolder Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields ControlType public ControlType ControlType Field Value ControlType Element public Element Element Field Value Element ElementIndex public uint ElementIndex Field Value uint"
  },
  "api/OmegaGUI.Render.FontNode.html": {
    "href": "api/OmegaGUI.Render.FontNode.html",
    "title": "Class FontNode | OmegaEngine",
    "summary": "Class FontNode Namespace OmegaGUI.Render Assembly OmegaGUI.dll Structure for shared fonts public class FontNode Inheritance object FontNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields FaceName public string FaceName Field Value string Font public Font Font Field Value Font Height public uint Height Field Value uint Weight public FontWeight Weight Field Value FontWeight"
  },
  "api/OmegaGUI.Render.GroupBox.html": {
    "href": "api/OmegaGUI.Render.GroupBox.html",
    "title": "Class GroupBox | OmegaEngine",
    "summary": "Class GroupBox Namespace OmegaGUI.Render Assembly OmegaGUI.dll A filled rectangle used to optically group controls together public class GroupBox : Control Inheritance object Control GroupBox Inherited Members Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.OnInitialize() Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.HandleKeyboard(WindowMessage, IntPtr, IntPtr) Control.HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Control.UserData Control.Parent Control.CanHaveFocus Control.OnFocusIn() Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.OnHotKey() Control.ContainsPoint(Point) Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() Control.UpdateRectangles() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors GroupBox(Dialog, Color4, Color4) Create new group box instance public GroupBox(Dialog parent, Color4 borderColor, Color4 fillColor) Parameters parent Dialog borderColor Color4 fillColor Color4 Fields BorderColor public Color4 BorderColor Field Value Color4 FillColor public Color4 FillColor Field Value Color4 Methods Render(Device, float) Render the picture box public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float"
  },
  "api/OmegaGUI.Render.Label.html": {
    "href": "api/OmegaGUI.Render.Label.html",
    "title": "Class Label | OmegaEngine",
    "summary": "Class Label Namespace OmegaGUI.Render Assembly OmegaGUI.dll Label text control public class Label : Control Inheritance object Control Label Derived Button Inherited Members Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.OnInitialize() Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.HandleKeyboard(WindowMessage, IntPtr, IntPtr) Control.HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Control.UserData Control.Parent Control.CanHaveFocus Control.OnFocusIn() Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.OnHotKey() Control.ContainsPoint(Point) Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() Control.UpdateRectangles() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Label(Dialog) Create a new instance of a static text control public Label(Dialog parent) Parameters parent Dialog Fields textData protected string textData Field Value string Properties TextAlign public TextAlign TextAlign { get; set; } Property Value TextAlign Methods GetTextCopy() Return a copy of the string public string GetTextCopy() Returns string Render(Device, float) Render this control public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float SetText(string) Sets the updated text for this control public void SetText(string newText) Parameters newText string"
  },
  "api/OmegaGUI.Render.ListBox.html": {
    "href": "api/OmegaGUI.Render.ListBox.html",
    "title": "Class ListBox | OmegaEngine",
    "summary": "Class ListBox Namespace OmegaGUI.Render Assembly OmegaGUI.dll List box control public class ListBox : Control Inheritance object Control ListBox Inherited Members Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.UserData Control.Parent Control.OnFocusIn() Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.OnHotKey() Control.ContainsPoint(Point) Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ListBox(Dialog) Create a new list box control public ListBox(Dialog parent) Parameters parent Dialog Fields MainLayer public const int MainLayer = 0 Field Value int SelectionLayer public const int SelectionLayer = 1 Field Value int border protected int border Field Value int ctrlStyle protected ListBoxStyle ctrlStyle Field Value ListBoxStyle isDragging protected bool isDragging Field Value bool itemList protected List<ListItem> itemList Field Value List<ListItem> margin protected int margin Field Value int scrollWidth protected int scrollWidth Field Value int scrollbarControl protected ScrollBar scrollbarControl Field Value ScrollBar selectedIndex protected int selectedIndex Field Value int selectedStarted protected int selectedStarted Field Value int selectionRect protected Rectangle selectionRect Field Value Rectangle textHeight protected int textHeight Field Value int textRect protected Rectangle textRect Field Value Rectangle Properties CanHaveFocus Can this control have focus public override bool CanHaveFocus { get; } Property Value bool this[int] Indexer for items in the list public ListItem this[int index] { get; } Parameters index int Property Value ListItem NumberItems Number of items current in the list public int NumberItems { get; } Property Value int Style Sets the style of the listbox public ListBoxStyle Style { get; set; } Property Value ListBoxStyle Methods AddItem(string, string, object) Adds an item to the list box control public void AddItem(string text, string tag, object data) Parameters text string tag string data object Clear() Removes all items from the control public void Clear() GetSelectedIndex(int) For single-selection listbox, returns the index of the selected item. For multi-selection, returns the first selected item after the previousSelected position. To search for the first selected item, the app passes -1 for previousSelected. For subsequent searches, the app passes the returned index back to GetSelectedIndex as. previousSelected. Returns -1 on error or if no item is selected. public int GetSelectedIndex(int previousSelected) Parameters previousSelected int Returns int GetSelectedItem() Gets the selected item public ListItem GetSelectedItem() Returns ListItem GetSelectedItem(int) Gets the selected item public ListItem GetSelectedItem(int previousSelected) Parameters previousSelected int Returns ListItem HandleKeyboard(WindowMessage, IntPtr, IntPtr) Called when the control needs to handle the keyboard public override bool HandleKeyboard(WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage wParam IntPtr lParam IntPtr Returns bool HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Called when the control should handle the mouse public override bool HandleMouse(WindowMessage msg, Point pt, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage pt Point wParam IntPtr lParam IntPtr Returns bool InsertItem(int, string, object) Inserts an item to the list box control public void InsertItem(int index, string text, object data) Parameters index int text string data object OnInitialize() Initialize the scrollbar control here public override void OnInitialize() RaiseDoubleClickEvent(ListBox, bool) Raises the double click event protected void RaiseDoubleClickEvent(ListBox sender, bool wasTriggeredByUser) Parameters sender ListBox wasTriggeredByUser bool RaiseSelectionEvent(ListBox, bool) Raises the selection event protected void RaiseSelectionEvent(ListBox sender, bool wasTriggeredByUser) Parameters sender ListBox wasTriggeredByUser bool RemoveAt(int) Removes an item at a particular index public void RemoveAt(int index) Parameters index int Render(Device, float) Called when the control should be rendered public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float SelectItem(int) Selects this item public void SelectItem(int newIndex) Parameters newIndex int SetBorder(int, int) Sets the border and margin sizes public void SetBorder(int borderSize, int marginSize) Parameters borderSize int marginSize int SetScrollbarWidth(int) Sets the scroll bar width of this control public void SetScrollbarWidth(int width) Parameters width int SetSelected(string) Sets the selected item by text public void SetSelected(string text) Parameters text string UpdateRectangles() Update the rectangles for the list box control protected override void UpdateRectangles() Events DoubleClick public event EventHandler? DoubleClick Event Type EventHandler Selection public event EventHandler? Selection Event Type EventHandler"
  },
  "api/OmegaGUI.Render.ListBoxStyle.html": {
    "href": "api/OmegaGUI.Render.ListBoxStyle.html",
    "title": "Enum ListBoxStyle | OmegaEngine",
    "summary": "Enum ListBoxStyle Namespace OmegaGUI.Render Assembly OmegaGUI.dll Style of the list box public enum ListBoxStyle Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields MultiSelection = 1 SingleSelection = 0"
  },
  "api/OmegaGUI.Render.ListItem.html": {
    "href": "api/OmegaGUI.Render.ListItem.html",
    "title": "Struct ListItem | OmegaEngine",
    "summary": "Struct ListItem Namespace OmegaGUI.Render Assembly OmegaGUI.dll Stores data for a DropdownList or ListBox item public struct ListItem Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields IsItemSelected public bool IsItemSelected Field Value bool IsItemVisible public bool IsItemVisible Field Value bool ItemData public object ItemData Field Value object ItemRect public Rectangle ItemRect Field Value Rectangle ItemTag public string ItemTag Field Value string ItemText public string ItemText Field Value string"
  },
  "api/OmegaGUI.Render.MessageBox.html": {
    "href": "api/OmegaGUI.Render.MessageBox.html",
    "title": "Class MessageBox | OmegaEngine",
    "summary": "Class MessageBox Namespace OmegaGUI.Render Assembly OmegaGUI.dll A message-box dialog public class MessageBox : Dialog Inheritance object Dialog MessageBox Inherited Members Dialog.WheelDelta Dialog.WhiteColorValue Dialog.TransparentWhite Dialog.BlackColorValue Dialog.SetRefreshTime(float) Dialog.IsMinimized Dialog.IsUsingNonUserEvents Dialog.IsUsingKeyboardInput Dialog.IsUsingMouseInput Dialog.DefaultFontSize Dialog.Location Dialog.Resize Dialog.SetSize(int, int) Dialog.Width Dialog.Height Dialog.SetCaptionText(string) Dialog.CaptionHeight Dialog.SetBackgroundColors(Color4, Color4, Color4, Color4) Dialog.SetBackgroundColors(Color4) Dialog.SetCaptionColor(Color4) Dialog.RemoveAllControls() Dialog.ClearRadioButtonGroup(uint) Dialog.MessageProc(IntPtr, WindowMessage, IntPtr, IntPtr) Dialog.RequestFocus(Control) Dialog.ClearFocus() Dialog.GetControlAtPoint(Point) Dialog.SetDefaultElement(ControlType, uint, Element) Dialog.GetDefaultElement(ControlType, uint) Dialog.SetFont(uint, string, uint, FontWeight) Dialog.GetFont(uint) Dialog.SetTexture(uint, string) Dialog.GetTexture(uint) Dialog.InitializeControl(Control) Dialog.AddControl(Control) Dialog.AddStatic(int, string, int, int, int, int, bool) Dialog.AddStatic(int, string, int, int, int, int) Dialog.AddPictureBox(int, int, int, int, int, Element) Dialog.AddGroupBox(int, int, int, int, int, Color4, Color4) Dialog.AddButton(int, string, int, int, int, int, Keys, bool) Dialog.AddButton(int, string, int, int, int, int) Dialog.AddCheckBox(int, string, int, int, int, int, bool, Keys, bool) Dialog.AddCheckBox(int, string, int, int, int, int, bool) Dialog.AddRadioButton(int, uint, string, int, int, int, int, bool, Keys, bool) Dialog.AddRadioButton(int, uint, string, int, int, int, int, bool) Dialog.AddDropdownList(int, int, int, int, int, Keys, bool) Dialog.AddDropdownList(int, int, int, int, int) Dialog.AddSlider(int, int, int, int, int, int, int, int, bool) Dialog.AddSlider(int, int, int, int, int) Dialog.AddScrollBar(int, int, int, int, int, int, int, int, bool) Dialog.AddScrollBar(int, int, int, int, int) Dialog.AddListBox(int, int, int, int, int, ListBoxStyle) Dialog.AddListBox(int, int, int, int, int) Dialog.AddTextBox(int, string, int, int, int, int, bool) Dialog.AddTextBox(int, string, int, int, int, int) Dialog.OnRender(float) Dialog.Refresh() Dialog.DrawText(string, Element, Rectangle, bool) Dialog.DrawSprite(Element, Rectangle) Dialog.DrawText(string, Element, Rectangle) Dialog.DrawRectangle(Rectangle, Color4, bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors MessageBox(DialogManager) Create a new message-box dialog public MessageBox(DialogManager manager) Parameters manager DialogManager The DialogManager instance that provides the resources for rendering of this dialog Properties Visible public bool Visible { get; } Property Value bool Methods Reset() public void Reset() Show(string, MsgBoxType, Action<MsgBoxResult>?) public void Show(string text, MsgBoxType type, Action<MsgBoxResult>? callback) Parameters text string type MsgBoxType callback Action<MsgBoxResult>"
  },
  "api/OmegaGUI.Render.MsgBoxResult.html": {
    "href": "api/OmegaGUI.Render.MsgBoxResult.html",
    "title": "Enum MsgBoxResult | OmegaEngine",
    "summary": "Enum MsgBoxResult Namespace OmegaGUI.Render Assembly OmegaGUI.dll public enum MsgBoxResult Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Cancel = 1 No = 3 OK = 0 Yes = 2"
  },
  "api/OmegaGUI.Render.MsgBoxType.html": {
    "href": "api/OmegaGUI.Render.MsgBoxType.html",
    "title": "Enum MsgBoxType | OmegaEngine",
    "summary": "Enum MsgBoxType Namespace OmegaGUI.Render Assembly OmegaGUI.dll public enum MsgBoxType Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields OK = 0 OKCancel = 1 YesNo = 2"
  },
  "api/OmegaGUI.Render.PictureBox.html": {
    "href": "api/OmegaGUI.Render.PictureBox.html",
    "title": "Class PictureBox | OmegaEngine",
    "summary": "Class PictureBox Namespace OmegaGUI.Render Assembly OmegaGUI.dll public class PictureBox : Control Inheritance object Control PictureBox Inherited Members Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.OnInitialize() Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.HandleKeyboard(WindowMessage, IntPtr, IntPtr) Control.HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Control.UserData Control.Parent Control.CanHaveFocus Control.OnFocusIn() Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.OnHotKey() Control.ContainsPoint(Point) Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() Control.UpdateRectangles() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors PictureBox(Dialog, Element) Create new picture box instance public PictureBox(Dialog parent, Element fill) Parameters parent Dialog fill Element Methods Render(Device, float) Render the picture box public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float"
  },
  "api/OmegaGUI.Render.RadioButton.html": {
    "href": "api/OmegaGUI.Render.RadioButton.html",
    "title": "Class RadioButton | OmegaEngine",
    "summary": "Class RadioButton Namespace OmegaGUI.Render Assembly OmegaGUI.dll Radio button control public class RadioButton : CheckBox Inheritance object Control Label Button CheckBox RadioButton Inherited Members CheckBox.BoxLayer CheckBox.CheckLayer CheckBox.Changed CheckBox.RaiseChangedEvent(CheckBox, bool) CheckBox.buttonRect CheckBox.textRect CheckBox.isBoxChecked CheckBox.IsChecked CheckBox.SetCheckedInternal(bool, bool) CheckBox.ContainsPoint(Point) CheckBox.UpdateRectangles() CheckBox.Render(Device, float) Button.ButtonLayer Button.FillLayer Button.isPressed Button.Click Button.RaiseClickEvent(Button, bool) Button.CanHaveFocus Label.textData Label.TextAlign Label.GetTextCopy() Label.SetText(string) Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.OnInitialize() Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.UserData Control.Parent Control.OnFocusIn() Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors RadioButton(Dialog) Create new radio button instance public RadioButton(Dialog parent) Parameters parent Dialog Fields buttonGroupIndex protected uint buttonGroupIndex Field Value uint Properties ButtonGroup Button Group property public uint ButtonGroup { get; set; } Property Value uint Methods HandleKeyboard(WindowMessage, IntPtr, IntPtr) Handle the keyboard for the checkbox public override bool HandleKeyboard(WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage wParam IntPtr lParam IntPtr Returns bool HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Handle mouse messages from the radio button public override bool HandleMouse(WindowMessage msg, Point pt, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage pt Point wParam IntPtr lParam IntPtr Returns bool OnHotKey() Override hotkey to fire event public override void OnHotKey() SetChecked(bool, bool) Sets the check state and potentially clears the group public void SetChecked(bool ischecked, bool clear) Parameters ischecked bool clear bool SetCheckedInternal(bool, bool, bool) Sets the checked state and fires the event if necessary protected virtual void SetCheckedInternal(bool ischecked, bool clearGroup, bool fromInput) Parameters ischecked bool clearGroup bool fromInput bool"
  },
  "api/OmegaGUI.Render.ScrollBar.html": {
    "href": "api/OmegaGUI.Render.ScrollBar.html",
    "title": "Class ScrollBar | OmegaEngine",
    "summary": "Class ScrollBar Namespace OmegaGUI.Render Assembly OmegaGUI.dll A scroll bar control public class ScrollBar : Control Inheritance object Control ScrollBar Inherited Members Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.OnInitialize() Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.HandleKeyboard(WindowMessage, IntPtr, IntPtr) Control.UserData Control.Parent Control.CanHaveFocus Control.OnFocusIn() Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.OnHotKey() Control.ContainsPoint(Point) Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors ScrollBar(Dialog) Creates a new instance of the scroll bar class public ScrollBar(Dialog parent) Parameters parent Dialog Fields DownButtonLayer public const int DownButtonLayer = 2 Field Value int MinimumThumbSize protected const int MinimumThumbSize = 8 Field Value int ThumbLayer public const int ThumbLayer = 3 Field Value int TrackLayer public const int TrackLayer = 0 Field Value int UpButtonLayer public const int UpButtonLayer = 1 Field Value int downButtonRect protected Rectangle downButtonRect Field Value Rectangle end protected int end Field Value int m_position protected int m_position Field Value int pgSize protected int pgSize Field Value int showingThumb protected bool showingThumb Field Value bool start protected int start Field Value int thumbRect protected Rectangle thumbRect Field Value Rectangle trackRect protected Rectangle trackRect Field Value Rectangle upButtonRect protected Rectangle upButtonRect Field Value Rectangle Properties PageSize Size of a 'page' public int PageSize { get; set; } Property Value int TrackPosition Position of the track public int TrackPosition { get; set; } Property Value int Methods Cap() Clips position at boundaries protected void Cap() HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Stores data for a dropdown list item public override bool HandleMouse(WindowMessage msg, Point pt, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage pt Point wParam IntPtr lParam IntPtr Returns bool Render(Device, float) Render the scroll bar control public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float Scroll(int) Scrolls by delta items. A positive value scrolls down, while a negative scrolls down public void Scroll(int delta) Parameters delta int ScrollTo(int) Scrolls by to position. public void ScrollTo(int position) Parameters position int SetTrackRange(int, int) Sets the track range public void SetTrackRange(int startRange, int endRange) Parameters startRange int endRange int ShowItem(int) Shows an item public void ShowItem(int index) Parameters index int UpdateRectangles() Update all of the rectangles protected override void UpdateRectangles() UpdateThumbRectangle() Compute the dimension of the scroll thumb protected void UpdateThumbRectangle()"
  },
  "api/OmegaGUI.Render.Slider.html": {
    "href": "api/OmegaGUI.Render.Slider.html",
    "title": "Class Slider | OmegaEngine",
    "summary": "Class Slider Namespace OmegaGUI.Render Assembly OmegaGUI.dll Slider control public class Slider : Control Inheritance object Control Slider Inherited Members Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.OnInitialize() Control.MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Control.UserData Control.Parent Control.OnFocusIn() Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.OnHotKey() Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors Slider(Dialog) Create new button instance public Slider(Dialog parent) Parameters parent Dialog Fields ButtonLayer public const int ButtonLayer = 1 Field Value int TrackLayer public const int TrackLayer = 0 Field Value int buttonRect protected Rectangle buttonRect Field Value Rectangle buttonX protected int buttonX Field Value int currentValue protected int currentValue Field Value int dragOffset protected int dragOffset Field Value int dragX protected int dragX Field Value int isPressed protected bool isPressed Field Value bool maxValue protected int maxValue Field Value int minValue protected int minValue Field Value int Properties CanHaveFocus Slider's can always have focus public override bool CanHaveFocus { get; } Property Value bool Value Current value of the slider public int Value { get; set; } Property Value int Methods ContainsPoint(Point) Does the control contain this point? public override bool ContainsPoint(Point pt) Parameters pt Point Returns bool HandleKeyboard(WindowMessage, IntPtr, IntPtr) Handle keyboard input public override bool HandleKeyboard(WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage wParam IntPtr lParam IntPtr Returns bool HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Handle mouse input input public override bool HandleMouse(WindowMessage msg, Point pt, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage pt Point wParam IntPtr lParam IntPtr Returns bool RaiseChanged(Slider, bool) Current value of the slider protected void RaiseChanged(Slider sender, bool wasTriggeredByUser) Parameters sender Slider wasTriggeredByUser bool Render(Device, float) Render the slider public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float SetRange(int, int) Sets the range of the slider public void SetRange(int min, int max) Parameters min int max int SetValueInternal(int, bool) Sets the value internally and fires the event if needed protected void SetValueInternal(int newValue, bool fromInput) Parameters newValue int fromInput bool UpdateRectangles() Update the rectangles for the control protected override void UpdateRectangles() ValueFromPosition(int) Gets a value from a position public int ValueFromPosition(int x) Parameters x int Returns int Events Changed public event EventHandler? Changed Event Type EventHandler"
  },
  "api/OmegaGUI.Render.TextAlign.html": {
    "href": "api/OmegaGUI.Render.TextAlign.html",
    "title": "Enum TextAlign | OmegaEngine",
    "summary": "Enum TextAlign Namespace OmegaGUI.Render Assembly OmegaGUI.dll How to align text within a control public enum TextAlign Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Center = 1 Left = 0 Right = 2"
  },
  "api/OmegaGUI.Render.TextBox.html": {
    "href": "api/OmegaGUI.Render.TextBox.html",
    "title": "Class TextBox | OmegaEngine",
    "summary": "Class TextBox Namespace OmegaGUI.Render Assembly OmegaGUI.dll A basic edit box public class TextBox : Control Inheritance object Control TextBox Inherited Members Control.ToString() Control.parentDialog Control.index Control.IsDefault Control.localUserData Control.visible Control.isMouseOver Control.hasFocus Control.controlId Control.ctrlType Control.ctrlHotKey Control.enabled Control.boundingBox Control.controlX Control.controlY Control.width Control.height Control.elementList Control.MouseEnter Control.MouseExit Control.OnInitialize() Control.UserData Control.Parent Control.OnFocusOut() Control.OnMouseEnter() Control.OnMouseExit() Control.OnHotKey() Control.ContainsPoint(Point) Control.IsEnabled Control.IsVisible Control.ControlType Control.ID Control.SetLocation(int, int) Control.SetSize(int, int) Control.Hotkey Control.this[uint] Control.Refresh() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Constructors TextBox(Dialog) Creates a new edit box control public TextBox(Dialog parent) Parameters parent Dialog Fields LeftBorder public const int LeftBorder = 4 Field Value int LowerBorder public const int LowerBorder = 7 Field Value int LowerLeftBorder public const int LowerLeftBorder = 6 Field Value int LowerRightBorder public const int LowerRightBorder = 8 Field Value int RightBorder public const int RightBorder = 5 Field Value int TextLayer public const int TextLayer = 0 Field Value int TopBorder public const int TopBorder = 2 Field Value int TopLeftBorder public const int TopLeftBorder = 1 Field Value int TopRightBorder public const int TopRightBorder = 3 Field Value int blinkTime protected double blinkTime Field Value double border protected int border Field Value int caretColor protected Color4 caretColor Field Value Color4 caretPosition protected int caretPosition Field Value int elementRects protected Rectangle[] elementRects Field Value Rectangle[] firstVisible protected int firstVisible Field Value int isCaretOn protected bool isCaretOn Field Value bool isInsertMode protected bool isInsertMode Field Value bool isMouseDragging protected bool isMouseDragging Field Value bool lastBlink protected double lastBlink Field Value double selectedBackColor protected Color4 selectedBackColor Field Value Color4 selectedTextColor protected Color4 selectedTextColor Field Value Color4 spacing protected int spacing Field Value int textColor protected Color4 textColor Field Value Color4 textData protected RichTextBox textData Field Value RichTextBox textRect protected Rectangle textRect Field Value Rectangle Properties CanHaveFocus Can the edit box have focus public override bool CanHaveFocus { get; } Property Value bool Text Get or sets the text public string Text { get; set; } Property Value string Methods Clear() Clears the edit box public void Clear() CopyToClipboard() Copy the selected text to the clipboard protected void CopyToClipboard() DeleteSelectionText() Deletes the text that is currently selected protected void DeleteSelectionText() GetTextCopy() Gets a copy of the text public string GetTextCopy() Returns string HandleKeyboard(WindowMessage, IntPtr, IntPtr) Handle keyboard input to the edit box public override bool HandleKeyboard(WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage wParam IntPtr lParam IntPtr Returns bool HandleMouse(WindowMessage, Point, IntPtr, IntPtr) Handle mouse messages public override bool HandleMouse(WindowMessage msg, Point pt, IntPtr wParam, IntPtr lParam) Parameters msg WindowMessage pt Point wParam IntPtr lParam IntPtr Returns bool MsgProc(IntPtr, WindowMessage, IntPtr, IntPtr) Handle all other messages public override bool MsgProc(IntPtr hWnd, WindowMessage msg, IntPtr wParam, IntPtr lParam) Parameters hWnd IntPtr msg WindowMessage wParam IntPtr lParam IntPtr Returns bool OnFocusIn() Update the caret when focus is in public override void OnFocusIn() PasteFromClipboard() Paste the clipboard data to the control protected void PasteFromClipboard() PlaceCaret(int) Set the caret to a character position, and adjust the scrolling if necessary protected void PlaceCaret(int pos) Parameters pos int RaiseChangedEvent(TextBox, bool) Raises the changed event protected void RaiseChangedEvent(TextBox sender, bool wasTriggeredByUser) Parameters sender TextBox wasTriggeredByUser bool RaiseEnterEvent(TextBox, bool) Raises the Enter event protected void RaiseEnterEvent(TextBox sender, bool wasTriggeredByUser) Parameters sender TextBox wasTriggeredByUser bool Render(Device, float) Render the control public override void Render(Device device, float elapsedTime) Parameters device Device elapsedTime float ResetCaretBlink() Reset's the caret blink time protected void ResetCaretBlink() SetBorderWidth(int) Update the border public void SetBorderWidth(int b) Parameters b int SetCaretColor(Color4) Update the caret color public void SetCaretColor(Color4 color) Parameters color Color4 SetSelectedBackColor(Color4) Update the selected background color public void SetSelectedBackColor(Color4 color) Parameters color Color4 SetSelectedTextColor(Color4) Update the text selected color public void SetSelectedTextColor(Color4 color) Parameters color Color4 SetSpacing(int) Update the spacing public void SetSpacing(int space) Parameters space int SetText(string?, bool) Sets the text for the control public void SetText(string? text, bool selected) Parameters text string selected bool SetTextColor(Color4) Update the text color public void SetTextColor(Color4 color) Parameters color Color4 UpdateRectangles() Updates the rectangles used by the control protected override void UpdateRectangles() Events Changed public event EventHandler? Changed Event Type EventHandler Enter public event EventHandler? Enter Event Type EventHandler"
  },
  "api/OmegaGUI.Render.TextureNode.html": {
    "href": "api/OmegaGUI.Render.TextureNode.html",
    "title": "Class TextureNode | OmegaEngine",
    "summary": "Class TextureNode Namespace OmegaGUI.Render Assembly OmegaGUI.dll Structure for shared textures public class TextureNode Inheritance object TextureNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods XmlZipStorage.SaveXmlZip<T>(T, Stream, string?, params EmbeddedFile[]) XmlZipStorage.SaveXmlZip<T>(T, string, string?, params EmbeddedFile[]) Fields Filename public string Filename Field Value string Height public uint Height Field Value uint Texture public Texture Texture Field Value Texture Width public uint Width Field Value uint"
  },
  "api/OmegaGUI.Render.html": {
    "href": "api/OmegaGUI.Render.html",
    "title": "Namespace OmegaGUI.Render | OmegaEngine",
    "summary": "Namespace OmegaGUI.Render Actual rendering widgets with DirectX resources. Classes Button Button control CheckBox CheckBox control Control Abstract base class for all control models Dialog A dialog model containing DirectX-based controls DialogManager Manages shared resources of DirectX-based dialogs DropdownList Dropdown list control Element Contains all the display tweakables for a control FontNode Structure for shared fonts GroupBox A filled rectangle used to optically group controls together Label Label text control ListBox List box control MessageBox A message-box dialog PictureBox RadioButton Radio button control ScrollBar A scroll bar control Slider Slider control TextBox A basic edit box TextureNode Structure for shared textures Structs BlendColor Blends colors ElementHolder Contains all the display information for a given control type ListItem Stores data for a DropdownList or ListBox item Enums ControlState Possible states of a control ControlType Predefined control types ListBoxStyle Style of the list box MsgBoxResult MsgBoxType TextAlign How to align text within a control"
  },
  "api/OmegaGUI.html": {
    "href": "api/OmegaGUI.html",
    "title": "Namespace OmegaGUI | OmegaEngine",
    "summary": "Namespace OmegaGUI OmegaGUI is a GUI toolkit for OmegaEngine. It has an XML file format for describing UIs (AlphaFramework.Editor provides a WYSIWYG editor). It uses Lua scripting for event handling. NuGet package: OmegaGUI Namespaces OmegaGUI.Model Editor-friendly, XML-serializable data model of the GUI. No render code. OmegaGUI.Render Actual rendering widgets with DirectX resources. Classes DialogRenderer Displays a Dialog using Dialog. GuiManager Maintains lists of all DialogRenderers"
  },
  "assets.html": {
    "href": "assets.html",
    "title": "Assets | OmegaEngine",
    "summary": "Assets An asset is a content file loaded by the engine at runtime. This includes textures, models, sounds, etc.. These files are located using a Virtual File System. Asset files are often referenced many times during an application's runtime. To prevent repeated load delays the engine keeps loaded and parsed content in an in-memory cache that can be flushed, e.g. after switching maps. VFS The Virtual File System (VFS) combines multiple directory structures into a single view of the filesystem used to load assets. Search order: Mod Directory specified via the /mod command-line argument (only if implemented by the game) Directories specified in the OMEGAENGINE_CONTENT_MOD environment variable (only if the /mod command-line argument was not used) Base Directory specified in game settings (only if implemented by the game) Directories specified in the OMEGAENGINE_CONTENT environment variable (only if not overriden by game settings) The content directory next to the game's executable (only if not overriden by the OMEGAENGINE_CONTENT environment variable or game settings) Base directory The base directory is usually located in the directory of the application EXE and named base. This location can be overridden in the engine configuration. Mods A game modification (mod) is a set of changes based on an existing game used to modify existing gameplay, add additional content or create an entirely new game. The engine supports mods via a virtual file system and modding support in the AlphaEditor."
  },
  "dispose.html": {
    "href": "dispose.html",
    "title": "Dispose | OmegaEngine",
    "summary": "Dispose All classes in the OmegaEngine namespace implementing the IDisposable interface must be .Dispose()ed manually. Unlike other .NET objects you can not rely on the garbage collection to cleanup left-over resources here. This is because of circular references caused by event hooks as well as the asset management system's caching feature. If you forget a .Dispose() this may trigger an exception (in Debug mode) or a log entry (in Release mode) at a non-deterministic point in time. Lost device The engine automatically restores a DirectX device if it is lost due to resolution changes, minimizing a fullscreen application, etc.. To reduce the amount of required manual reloading resources are stored in Pool.Managed whenever possible. When this is not possible: A delegate registered at the DeviceLost event must release the resource using .Dispose(). A delegate registered at the DeviceReset event must reload the resource."
  },
  "features.html": {
    "href": "features.html",
    "title": "Features | OmegaEngine",
    "summary": "Features An overview of the engine's features: Scene management Multiple viewports 64bit-precision object positioning Terrain rendering (heightmap-based) Shader management DXSAS support Post-screen effects Dynamic shader generation Asset management Virtual filesystem Mod support Effects Water reflections Bloom/Glow maps Particle systems (with WYSIWYG editor) GUI toolkit XML file format (with WYSIWYG editor) Lua scripting Legacy hardware support (fallback to fixed function pipeline) Render embedded in WinForms or standalone"
  },
  "imprint.html": {
    "href": "imprint.html",
    "title": "Imprint | OmegaEngine",
    "summary": "Imprint Bastian Eicher Sophienstr. 121 76135 Karlsruhe Germany E-Mail: info@omegaengine.de Phone: +49-721-66530941"
  },
  "index.html": {
    "href": "index.html",
    "title": "Overview | OmegaEngine",
    "summary": "OmegaEngine is a general-purpose 3D graphics for .NET Framework and DirectX 9. The engine is designed to be light-weight, modular and gameplay-agnostic. It is designed to be: light-weight (core engine including dependencies < 8MB), modular (use only the parts you need for your project) and gameplay-agnostic (also suitable for visualization projects, etc.). OmegaGUI is a GUI toolkit for OmegaEngine with an XML file format und Lua scripting. The AlphaEditor contains a WYSIWYG editor for the toolkit. AlphaFramework is a complementary framework for OmegaEngine. It provides base classes for designing a game world using the Model-View-Presenter pattern. FrameOfReference is the official sample game for OmegaEngine. It is intended as a sample/reference for developers working on other games. Prerequisites You must install these components before you can use OmegaEngine: Visual C++ 2010 Redistributable x86 DirectX June 2010 Runtime Visual Studio 2022 v17.13 or newer First steps Create a WinForms project targetting .NET Framework 4.7.2 or newer with the platform set to x86. Add a reference to the NuGet package OmegaEngine. Then add the following code to render a textured sphere: var engine = new Engine(this, new EngineConfig { TargetSize = ClientSize }); var scene = new Scene { Positionables = { Model.Sphere(engine, XTexture.Get(engine, \"flag.png\")) } }; var view = new View(scene, new TrackCamera()) { BackgroundColor = Color.CornflowerBlue }; engine.Views.Add(view); Paint += delegate { engine.Render(); }; NuGet packages Package Namespace Description OmegaEngine OmegaEngine 3D graphics rendering based on DirectX 9. OmegaEngine.Foundation OmegaEngine.Foundation Rendering-agnostic infrastructure like storage and data structures. OmegaGUI OmegaGUI GUI toolkit with XML file format und Lua scripting. AlphaFramework.World AlphaFramework.World Basis for engine-agnostic models of game worlds. AlphaFramework.Presentation AlphaFramework.Presentation Basis for presenters that visualize game worlds using the engine. AlphaEditor AlphaFramework.Editor Toolkit for creating editors for games based on AlphaFramework. Dependencies flowchart TD engine[OmegaEngine] --> foundation[OmegaEngine.Foundation] gui[OmegaGUI] --> engine world[AlphaFramework.World] --> foundation presentation[AlphaFramework.Presentation] --> world presentation --> engine presentation --> gui editor[AlphaEditor] --> presentation Project templates The OmegaEngine project templates help you create C# projects that use OmegaEngine, OmegaGUI and AlphaFramework."
  },
  "license.html": {
    "href": "license.html",
    "title": "License | OmegaEngine",
    "summary": "License Different components of this project are covered by different licenses: OmegaEngine and AlphaFramework: Mozilla Public License 2.0 (MPL-2.0) Shaders: MIT License; certain portions: NVIDIA General Developer License OmegaGUI: MIT License; certain portions: Microsoft Public License (MS-PL) Samples and templates: MIT License The license applicable to each file is stated in its file header. Practical implications This summary is provided for informational purposes only and does not constitute legal advice. You may use OmegaEngine and AlphaFramework to develop your own games (commercial or non-commercial) without being required to release your game's source code. You may copy and modify the provided sample and template code in your own projects without any obligation to release your game's source code. You may create custom builds of the engine and add new code files without a requirement to release those additions. If you modify existing files of the engine covered by MPL-2.0, you must make those modifications available under the same license (MPL-2.0). You may modify OmegaGUI without any obligation to release those changes."
  },
  "scenes.html": {
    "href": "scenes.html",
    "title": "Scenes | OmegaEngine",
    "summary": "Scenes The engine manages the visible world it renders via Views, which are a combination of a Camera and a Scene, which in turn contain multiple OmegaEngine.Graphics.Renderables."
  },
  "screenshots.html": {
    "href": "screenshots.html",
    "title": "Screenshots | OmegaEngine",
    "summary": "Screenshots Terrain Sample River Mountains Debug window (Bounding Box visualization enabled) Lua console (with auto-completion) Editor Map editor Particle system editor GUI/Menu editor (with Lua scripting) Entity editor (Fog enabled)"
  },
  "shaders.html": {
    "href": "shaders.html",
    "title": "Shaders | OmegaEngine",
    "summary": "Shaders Shaders are small pieces of code executed directly on the graphics card. They govern how vertexes are transformed and how each individual pixel color is calculated. The engine stores shaders in the High Level Shader Format (HLSL) and supports the DirectX Standard Annotations and Semantics. It can dynamically generate shaders at runtime and apply pixel shaders to the entire scene. The HLSL code is stored in .fx files in the Shader subdirectory of the Engine's source directory. They are compiled to .fxo files via a post-build script. Each HLSL file usually has a corresponding C# class in the OmegaEngine.Graphics.Shaders namespace. Semantics The DirectX Standard Annotations and Semantics (DXSAS) provide a way to add metadata to HLSL code that automates the integration between shader code and the engine. By specifying things such as value bindings for transform matrices shaders can more easily be exchanged between tools such as FX Composer and different graphics engines. The engine supports a subset of DXSAS 0.8."
  },
  "terrain.html": {
    "href": "terrain.html",
    "title": "Terrain | OmegaEngine",
    "summary": "Terrain The engine is able to render heightmap-based terrains with multiple blended surface textures and pre-calculated self-shadowing. 2D coordinates Coordinate system directed right-downwards (as used in graphics files). The standard orientation is a view along the positive Y axis. This is sometimes referred to as world coordinates in the source code. Positive X axis Width of the terrain Positive Y axis Depth of the terrain 3D coordinates Left-handed coordinate system (as used by DirectX). The standard orientation is a view along the negative Z axis. This is sometimes referred to as engine coordinates in the source code. Positive X axis Width of the terrain Positive Y axis Height of the terrain Negative Z axis Depth of the terrain"
  }
}